<!--
	sysmon-config | A Sysmon configuration focused on default high-quality event tracing and easy customization by the community
	Source project:	https://github.com/SwiftOnSecurity/sysmon-config
	Source license:	Creative Commons Attribution 4.0 | You may privatize, fork, edit, teach, publish, or deploy for commercial use - with attribution in the text.

	WARNING: THIS CONFIG INCLUDES BLOCKING RULES THAT MAY CAUSE ISSUES ON ENDSYSTEMS!
	         Test this configuration intensively before using it on productive systems

	LAST CHANGE: 01.14.2025

	MAINTAINED BY: 	@THE_VER1TAS 

	FORKED FROM: Florian Roth @Neo23x0

	REQUIRED: Sysmon version 15.0 or higher (due to changes in syntax and bug-fixes)
		https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon-->

<Sysmon schemaversion="4.90">
	<!--SYSMON META CONFIG-->
	<HashAlgorithms>md5,sha256,IMPHASH</HashAlgorithms> <!-- Both MD5 and SHA256 are the industry-standard algorithms. Remove IMPHASH if you do not use DLL import fingerprinting. -->
	<CheckRevocation/> <!-- Check loaded drivers, log if their code-signing certificate has been revoked, in case malware stole one to sign a kernel driver -->

	<!-- <ImageLoad/> --> <!-- Would manually force-on ImageLoad monitoring, even without configuration below. Included only documentation. -->
	<!-- <ProcessAccessConfig/> --> <!-- Would manually force-on ProcessAccess monitoring, even without configuration below. Included only documentation. -->
	<!-- <PipeMonitoringConfig/> --> <!-- Would manually force-on PipeCreated / PipeConnected events, even without configuration below. Included only documentation. -->
	<!-- <ArchiveDirectory> -->

	<EventFiltering>

	<!--SYSMON EVENT ID 1 : PROCESS CREATION [ProcessCreate]-->
		<!--COMMENT:	All processes launched will be logged, except for what matches a rule below. It's best to be as specific as possible,
			to avoid user-mode executables imitating other process names to avoid logging, or if malware drops files in an existing directory.
			Ultimately, you must weigh CPU time checking many detailed rules, against the risk of malware exploiting the blindness created.
			Beware of Masquerading, where attackers imitate the names and paths of legitimate tools. Ideally, you'd use both file path and
			code signatures to validate, but Sysmon does not support that. Look into AppLocker/WindowsDeviceGuard for whitelisting support. -->

		<!--DATA: UtcTime, ProcessGuid, ProcessID, Image, FileVersion, Description, Product, Company, CommandLine, CurrentDirectory, User, LogonGuid, LogonId, TerminalSessionId, IntegrityLevel, Hashes, ParentProcessGuid, ParentProcessId, ParentImage, ParentCommandLine, RuleName-->
	<RuleGroup name="" groupRelation="or">
		<ProcessCreate onmatch="exclude">
			<CommandLine condition="contains">\Machine\Scripts\Startup\ipamprovisioning.ps1</CommandLine> <!-- Windows IP Address Management (IPAM) -->
			<!--SECTION: Microsoft Windows-->
			<CommandLine condition="is">"C:\Windows\system32\cscript.exe" /nologo "MonitorKnowledgeDiscovery.vbs"</CommandLine>
			<CommandLine condition="begin with"> "C:\Windows\system32\wermgr.exe" "-queuereporting_svc" </CommandLine> <!--Windows:Windows error reporting/telemetry-->
			<CommandLine condition="begin with">C:\Windows\system32\wbem\wmiprvse.exe -Embedding</CommandLine> <!--Windows: WMI provider host-->
			<CommandLine condition="begin with">C:\Windows\system32\wbem\wmiprvse.exe -secured -Embedding</CommandLine> <!--Windows: WMI provider host-->
			<CommandLine condition="is">C:\Windows\system32\wermgr.exe -upload</CommandLine> <!--Windows:Windows error reporting/telemetry-->
			<CommandLine condition="is">C:\Windows\system32\SearchIndexer.exe /Embedding</CommandLine> <!--Windows: Search Indexer-->
			<CommandLine condition="is">C:\windows\system32\wermgr.exe -queuereporting</CommandLine> <!--Windows:Windows error reporting/telemetry-->
			<CommandLine condition="is">\??\C:\Windows\system32\autochk.exe *</CommandLine> <!--Microsoft:Bootup: Auto Check Utility-->
			<CommandLine condition="is">\SystemRoot\System32\smss.exe</CommandLine> <!--Microsoft:Bootup: Windows Session Manager-->
			<CommandLine condition="is">C:\Windows\System32\RuntimeBroker.exe -Embedding</CommandLine> <!--Windows:Apps permissions [ https://fossbytes.com/runtime-broker-process-windows-10/ ] -->
			<Image condition="is">C:\Program Files (x86)\Common Files\microsoft shared\ink\TabTip32.exe</Image> <!--Windows: Touch Keyboard and Handwriting Panel Helper-->
			<Image condition="is">C:\Windows\System32\TokenBrokerCookies.exe</Image> <!--Windows: SSO sign-in assistant for MicrosoftOnline.com-->
			<Image condition="is">C:\Windows\System32\plasrv.exe</Image> <!--Windows: Performance Logs and Alerts DCOM Server-->
			<Image condition="is">C:\Windows\System32\wifitask.exe</Image> <!--Windows: Wireless Background Task-->
			<Image condition="is">C:\Windows\system32\CompatTelRunner.exe</Image> <!--Windows: Customer Experience Improvement-->
			<Image condition="is">C:\Windows\system32\PrintIsolationHost.exe</Image> <!--Windows: Printing-->
			<Image condition="is">C:\Windows\system32\SppExtComObj.Exe</Image> <!--Windows: KMS activation-->
			<Image condition="is">C:\Windows\system32\audiodg.exe</Image> <!--Windows: Launched constantly-->
			<Image condition="is">C:\Windows\system32\conhost.exe</Image> <!--Windows: Command line interface host process-->
			<Image condition="is">C:\Windows\system32\mobsync.exe</Image> <!--Windows: Network file syncing-->
			<Image condition="is">C:\Windows\system32\musNotification.exe</Image> <!--Windows: Update pop-ups-->
			<Image condition="is">C:\Windows\system32\musNotificationUx.exe</Image> <!--Windows: Update pop-ups-->
			<Image condition="is">C:\Windows\system32\powercfg.exe</Image> <!--Microsoft:Power configuration management-->
			<Image condition="is">C:\Windows\system32\sndVol.exe</Image> <!--Windows: Volume control-->
			<Image condition="is">C:\Windows\system32\sppsvc.exe</Image> <!--Windows: Software Protection Service-->
			<Image condition="is">C:\Windows\system32\wbem\WmiApSrv.exe</Image> <!--Windows: WMI performance adapter host process-->
			<IntegrityLevel condition="is">AppContainer</IntegrityLevel> <!--Windows: Don't care about sandboxed processes right now. Will need to revisit this decision.-->
			<ParentCommandLine condition="begin with">%%SystemRoot%%\system32\csrss.exe ObjectDirectory=\Windows</ParentCommandLine> <!--Windows:CommandShell: Triggered when programs use the command shell, but doesn't provide attribution for what caused it-->
			<ParentCommandLine condition="is">C:\windows\system32\wermgr.exe -queuereporting</ParentCommandLine> <!--Windows:Windows error reporting/telemetry-->
			<CommandLine condition="is">C:\WINDOWS\system32\devicecensus.exe UserCxt</CommandLine>
			<CommandLine condition="is">C:\Windows\System32\usocoreworker.exe -Embedding</CommandLine>
			<ParentImage condition="is">C:\Windows\system32\SearchIndexer.exe</ParentImage> <!--Windows:Search: Launches many uninteresting sub-processes-->
			<!--SECTION: Windows:svchost-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k appmodel -s StateRepository</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k appmodel -p -s camsvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k appmodel</CommandLine> <!--Windows 10-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k appmodel -p -s tiledatamodelsvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k camera -s FrameServer</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k dcomlaunch -s LSM</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k dcomlaunch -s PlugPlay</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k defragsvc</CommandLine> <!--Windows defragmentation-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k devicesflow -s DevicesFlowUserSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k imgsvc</CommandLine> <!--Microsoft:The Windows Image Acquisition Service-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localService -s EventSystem</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localService -s bthserv</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k LocalService -p -s BthAvctpSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localService -s nsi</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localService -s w32Time</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceAndNoImpersonation</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceAndNoImpersonation -p</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted -s Dhcp</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted -s EventLog</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted -s TimeBrokerSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted -s WFDSConMgrSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k LocalServiceNetworkRestricted -s BTAGService</CommandLine>
			<CommandLine condition="is">C:\Windows\System32\svchost.exe -k LocalSystemNetworkRestricted -p -s NcbService</CommandLine> <!--Win10:1903:Network Connection Broker-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceAndNoImpersonation -s SensrSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceAndNoImpersonation -p -s SSDPSRV</CommandLine> <!--Windows:SSDP [ https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol ] -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNoNetwork</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -p -s WPDBusEnum</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -p -s fhsvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s DeviceAssociationService</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s NcbService</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s SensorService</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s TabletInputService</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s UmRdpService</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s WPDBusEnum</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -p -s NgcSvc</CommandLine> <!--Microsoft:Passport-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceNetworkRestricted -p -s NgcCtnrSvc</CommandLine> <!--Microsoft:Passport Container-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localServiceAndNoImpersonation -s SCardSvr</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -p -s wuauserv</CommandLine>
			<CommandLine condition="is">C:\Windows\System32\svchost.exe -k netsvcs -p -s SessionEnv</CommandLine> <!--Windows:Remote desktop configuration-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted -s WdiSystemHost</CommandLine> <!--Windows: Diagnostic System Host [ http://www.blackviper.com/windows-services/diagnostic-system-host/ ] -->
			<CommandLine condition="is">C:\Windows\System32\svchost.exe -k localSystemNetworkRestricted -p -s WdiSystemHost</CommandLine> <!--Windows: Diagnostic System Host [ http://www.blackviper.com/windows-services/diagnostic-system-host/ ] -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted</CommandLine> <!--Windows-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -p -s wlidsvc</CommandLine> <!--Windows: Windows Live Sign-In Assistant [ https://www.howtogeek.com/howto/30348/what-are-wlidsvc.exe-and-wlidsvcm.exe-and-why-are-they-running/ ] -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -p -s ncaSvc</CommandLine> <!--Windows: Network Connectivity Assistant [ http://www.blackviper.com/windows-services/network-connectivity-assistant/ ] -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s BDESVC</CommandLine> <!--Windows:Network: BitLocker Drive Encryption-->
			<CommandLine condition="is">C:\Windows\System32\svchost.exe -k netsvcs -p -s BDESVC</CommandLine> <!--Microsoft:Win10:1903:Network: BitLocker Drive Encryption-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -p -s BITS</CommandLine> <!--Windows:Network: Background Intelligent File Transfer (BITS) -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s BITS</CommandLine> <!--Windows:Network: Background Intelligent File Transfer (BITS) -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s CertPropSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s DsmSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -p -s Appinfo</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s Gpsvc</CommandLine> <!--Windows:Network: Group Policy -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s ProfSvc</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s SENS</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s SessionEnv</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s Themes</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs -s Winmgmt</CommandLine> <!--Windows: Windows Management Instrumentation (WMI) -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -p -s DoSvc</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -s Dnscache</CommandLine> <!--Windows:Network: DNS caching, other uses -->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -s LanmanWorkstation</CommandLine> <!--Windows:Network: "Workstation" service, used for SMB file-sharing connections and RDP-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -s NlaSvc</CommandLine> <!--Windows:Network: Network Location Awareness-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -s TermService</CommandLine> <!--Windows:Network: Terminal Services (RDP)-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkService -p</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k networkServiceNetworkRestricted</CommandLine> <!--Windows: Network services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k rPCSS</CommandLine> <!--Windows Services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k secsvcs</CommandLine>
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k swprv</CommandLine> <!--Microsoft:Software Shadow Copy Provider-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k unistackSvcGroup</CommandLine> <!--Windows 10-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k utcsvc</CommandLine> <!--Windows Services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k wbioSvcGroup</CommandLine> <!--Windows Services-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k werSvcGroup</CommandLine> <!--Windows: ErrorReporting-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k wusvcs -p -s WaaSMedicSvc</CommandLine> <!--Windows: Update Medic Service [ https://www.thewindowsclub.com/windows-update-medic-service ] -->
			<CommandLine condition="is">C:\Windows\System32\svchost.exe -k wsappx -p -s ClipSVC</CommandLine> <!--Windows:Apps: Client License Service-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k wsappx -p -s AppXSvc</CommandLine> <!--Windows:Apps: AppX Deployment Service-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k wsappx -s ClipSVC</CommandLine> <!--Windows:Apps: Client License Service-->
			<CommandLine condition="is">C:\Windows\system32\svchost.exe -k wsappx</CommandLine> <!--Windows:Apps [ https://www.howtogeek.com/320261/what-is-wsappx-and-why-is-it-running-on-my-pc/ ] -->
			<ParentCommandLine condition="is">C:\Windows\system32\svchost.exe -k netsvcs</ParentCommandLine> <!--Windows: Network services: Spawns Consent.exe-->
			<ParentCommandLine condition="is">C:\Windows\system32\svchost.exe -k localSystemNetworkRestricted</ParentCommandLine> <!--Windows-->
			<CommandLine condition="is">C:\Windows\system32\deviceenroller.exe /c /AutoEnrollMDM</CommandLine> <!--Windows: AzureAD device enrollment agent-->
			<!--SECTION: Microsoft:Edge-->
			<CommandLine condition="begin with">"C:\Program Files (x86)\Microsoft\Edge Dev\Application\msedge.exe" --type=</CommandLine>
			<!--SECTION: Microsoft:dotNet-->
			<CommandLine condition="begin with">C:\Windows\Microsoft.NET\Framework\v4.0.30319\ngen.exe</CommandLine> <!--Microsoft:DotNet-->
			<CommandLine condition="begin with">C:\WINDOWS\Microsoft.NET\Framework64\v4.0.30319\Ngen.exe</CommandLine> <!--Microsoft:DotNet-->
			<CommandLine condition="begin with">C:\Windows\Microsoft.NET\Framework\v4.0.30319\ngentask.exe</CommandLine> <!--Microsoft:DotNet-->
			<CommandLine condition="begin with">C:\WINDOWS\Microsoft.NET\Framework64\v4.0.30319\ngentask.exe</CommandLine> <!--Microsoft:DotNet-->
			<Image condition="is">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\mscorsvw.exe</Image> <!--Microsoft:DotNet-->
			<Image condition="is">C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorsvw.exe</Image> <!--Microsoft:DotNet-->
			<Image condition="is">C:\Windows\Microsoft.Net\Framework64\v3.0\WPF\PresentationFontCache.exe</Image> <!--Windows: Font cache service-->
			<ParentCommandLine condition="begin with">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\ngentask.exe</ParentCommandLine>
			<ParentImage condition="is">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\mscorsvw.exe</ParentImage> <!--Microsoft:DotNet-->
			<ParentImage condition="is">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\ngentask.exe</ParentImage> <!--Microsoft:DotNet-->
			<ParentImage condition="is">C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorsvw.exe</ParentImage> <!--Microsoft:DotNet-->
			<ParentImage condition="is">C:\Windows\Microsoft.NET\Framework\v4.0.30319\ngentask.exe</ParentImage> <!--Microsoft:DotNet: Spawns thousands of ngen.exe processes-->
			<!--SECTION: Microsoft:Office-->
			<Image condition="is">C:\Program Files\Microsoft Office\Office16\MSOSYNC.EXE</Image> <!--Microsoft:Office: Background process for SharePoint/Office365 connectivity-->
			<Image condition="is">C:\Program Files (x86)\Microsoft Office\Office16\MSOSYNC.EXE</Image> <!--Microsoft:Office: Background process for SharePoint/Office365 connectivity-->
			<Image condition="is">C:\Program Files\Common Files\Microsoft Shared\OfficeSoftwareProtectionPlatform\OSPPSVC.EXE</Image> <!--Microsoft:Office: Licensing service-->
			<Image condition="is">C:\Program Files\Microsoft Office\Office16\msoia.exe</Image> <!--Microsoft:Office: Telemetry collector-->
			<Image condition="is">C:\Program Files (x86)\Microsoft Office\root\Office16\officebackgroundtaskhandler.exe</Image>
			<!--SECTION: Microsoft:Office:Click2Run-->
			<Image condition="is">C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe</Image> <!--Microsoft:Office: Background process-->
			<ParentImage condition="is">C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeClickToRun.exe</ParentImage> <!--Microsoft:Office: Background process-->
			<ParentImage condition="is">C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe</ParentImage> <!--Microsoft:Office: Background process-->
			<!--SECTION: Windows: Media player-->
			<Image condition="is">C:\Program Files\Windows Media Player\wmpnscfg.exe</Image> <!--Windows: Windows Media Player Network Sharing Service Configuration Application-->
			<!--SECTION: Google-->
			<CommandLine condition="begin with">"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --type=</CommandLine> <!--Google:Chrome: massive command-line arguments-->
			<CommandLine condition="begin with">"C:\Program Files\Google\Chrome\Application\chrome.exe" --type=</CommandLine> <!--Google:Chrome: massive command-line arguments-->
			<!--SECTION: Splunk-->
			<Image condition="contains">:\Program Files\Splunk\bin\</Image> <!--Splunk: Very noisy if using Universal Forwarders-->
			<ParentImage condition="end with">:\Program Files\Splunk\bin\splunkd.exe</ParentImage> <!--Splunk: Very noisy if using Universal Forwarders-->
			<ParentImage condition="end with">:\Program Files\Splunk\bin\splunk.exe</ParentImage> <!--Splunk: Very noisy if using Universal Forwarders-->
			<Image condition="contains">:\Program Files\SplunkUniversalForwarder\bin\</Image> <!--Splunk: Very noisy if using Universal Forwarders-->
			<ParentImage condition="end with">:\Program Files\SplunkUniversalForwarder\bin\splunkd.exe</ParentImage> <!--Splunk: Very noisy if using Universal Forwarders-->
			<ParentImage condition="end with">:\Program Files\SplunkUniversalForwarder\bin\splunk.exe</ParentImage> <!--Splunk: Very noisy if using Universal Forwarders-->
			<!-- SECTION: Azure OMS/MMA Agent -->
			<Image condition="begin with">C:\Program Files\Microsoft Monitoring Agent\</Image>
			<ParentImage condition="is">C:\Program Files\Microsoft Monitoring Agent\MonitoringHost.exe</ParentImage>
			<ParentImage condition="is">C:\Program Files\Microsoft Monitoring Agent\Agent\HealthService.exe</ParentImage>
		</ProcessCreate>
	</RuleGroup>

	<!--SYSMON EVENT ID 2 : FILE CREATION TIME RETROACTIVELY CHANGED IN THE FILESYSTEM [FileCreateTime]-->
		<!--COMMENT:	[ https://attack.mitre.org/wiki/Technique/T1099 ] -->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, PreviousCreationUtcTime-->
	<RuleGroup name="" groupRelation="or">
		<FileCreateTime onmatch="include">
			<Image name="T1099" condition="begin with">C:\Users</Image> <!--Look for timestomping in user area, usually nothing should be doing that here-->
			<TargetFilename name="T1099" condition="end with">.exe</TargetFilename> <!--Look for backdated executables anywhere-->
			<Image name="T1099" condition="begin with">\Device\HarddiskVolumeShadowCopy</Image> <!--Nothing should be written here | Credit: @SBousseaden [ https://twitter.com/SBousseaden/status/1133030955407630336 ] -->
		</FileCreateTime>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<FileCreateTime onmatch="exclude">
			<Image condition="image">OneDrive.exe</Image> <!--OneDrive constantly changes file times-->
			<Image condition="image">C:\Windows\system32\backgroundTaskHost.exe</Image>
			<Image condition="contains">setup</Image> <!--Ignore setups-->
			<Image condition="contains">install</Image> <!--Ignore setups-->
			<Image condition="contains">Update\</Image> <!--Ignore setups-->
			<Image condition="end with">\redist.exe</Image> <!--Ignore setups-->
			<Image condition="is">msiexec.exe</Image> <!--Ignore setups-->
			<Image condition="is">TrustedInstaller.exe</Image> <!--Ignore setups-->
			<TargetFilename condition="contains">\NVIDIA\NvBackend\ApplicationOntology\</TargetFilename> <!--NVIDIA GeForce Experience Application Ontology, 1000's of events in user profile-->
		</FileCreateTime>
	</RuleGroup>

	<!--SYSMON EVENT ID 3 : NETWORK CONNECTION INITIATED [NetworkConnect]-->
		<!--COMMENT:	By default this configuration takes a very conservative approach to network logging, limited to only extremely high-signal events.-->
		<!--COMMENT:	[ https://attack.mitre.org/wiki/Command_and_Control ] [ https://attack.mitre.org/wiki/Exfiltration ] [ https://attack.mitre.org/wiki/Lateral_Movement ] -->
		<!--TECHNICAL:	For the DestinationHostname, Sysmon uses the GetNameInfo API, which will often not have any information, and may just be a CDN. This is NOT reliable for filtering.-->
		<!--TECHNICAL:	For the DestinationPortName, Sysmon uses the GetNameInfo API for the friendly name of ports you see in logs.-->
		<!--TECHNICAL:	These exe do not initiate their connections, and thus includes do not work in this section: BITSADMIN NLTEST-->

		<!-- https://www.first.org/resources/papers/conf2017/APT-Log-Analysis-Tracking-Attack-Tools-by-Audit-Policy-and-Sysmon.pdf -->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, User, Protocol, Initiated, SourceIsIpv6, SourceIp, SourceHostname, SourcePort, SourcePortName, DestinationIsIpV6, DestinationIp, DestinationHostname, DestinationPort, DestinationPortName-->
	<RuleGroup name="" groupRelation="or">
		<NetworkConnect onmatch="include">
			<!--Suspicious sources for network-connecting binaries-->
			<Image name="Usermode" condition="begin with">C:\Users</Image> <!--Tools downloaded by users can use other processes for networking, but this is a very valuable indicator.-->
			<Image name="Caution" condition="begin with">C:\Recycle</Image> <!--Nothing should operate from the RecycleBin locations.-->
			<Image condition="begin with">C:\ProgramData</Image> <!--Normally, network communications should be sourced from "Program Files" not from ProgramData, something to look at-->
			<Image condition="begin with">C:\Windows\Temp</Image> <!--Suspicious anything would communicate from the system-level temp directory-->
			<Image name="Caution" condition="begin with">\</Image> <!--Devices and VSC shouldn't be executing changes | Credit: @SBousseaden @ionstorm @neu5ron @PerchedSystems [ https://twitter.com/SwiftOnSecurity/status/1133167323991486464 ] -->
			<Image name="Caution" condition="begin with">C:\perflogs</Image> <!-- Credit @blu3_team [ https://blu3-team.blogspot.com/2019/05/netconn-from-suspicious-directories.html ] -->
			<Image name="Caution" condition="begin with">C:\intel</Image> <!-- Credit @blu3_team [ https://blu3-team.blogspot.com/2019/05/netconn-from-suspicious-directories.html ] -->
			<Image name="Caution" condition="begin with">C:\Windows\fonts</Image> <!-- Credit @blu3_team [ https://blu3-team.blogspot.com/2019/05/netconn-from-suspicious-directories.html ] -->
			<Image name="Caution" condition="begin with">C:\Windows\system32\config</Image> <!-- Credit @blu3_team [ https://blu3-team.blogspot.com/2019/05/netconn-from-suspicious-directories.html ] -->
			<!--Suspicious Windows tools-->
			<Image condition="image">at.exe</Image> <!--Windows: Remote task scheduling, removed in Win10 | Credit @ion-storm -->
			<Image condition="image">certutil.exe</Image> <!--Windows: Certificate tool can contact outbound | Credit @ion-storm @FVT [ https://twitter.com/FVT/status/834433734602530817 ] -->
			<Image condition="image">calc.exe</Image>
			<Image condition="image">CalculatorApp.exe</Image>
			<Image condition="image">cmd.exe</Image> <!--Windows: Remote command prompt-->
			<Image condition="image">cmstp.exe</Image> <!--Windows: Connection manager profiles can launch executables from WebDAV [ https://twitter.com/NickTyrer/status/958450014111633408 ] | Credit @NickTyrer @Oddvarmoe @KyleHanslovan @subTee -->
			<Image condition="image">cscript.exe</Image> <!--WindowsScriptingHost: | Credit @Cyb3rOps [ https://gist.github.com/Neo23x0/a4b4af9481e01e749409 ] -->
			<Image condition="image">driverquery.exe</Image> <!--Windows: Remote recognisance of system configuration, oudated/vulnerable drivers -->
			<Image condition="image">dsquery.exe</Image> <!--Microsoft: Query Active Directory -->
			<Image condition="image">hh.exe</Image> <!--Windows: HTML Help Executable, opens CHM files -->
			<Image condition="image">infDefaultInstall.exe</Image> <!--Microsoft: [ https://github.com/huntresslabs/evading-autoruns ] | Credit @KyleHanslovan -->
			<Image condition="image">java.exe</Image> <!--Java: Monitor usage of vulnerable application and init from JAR files | Credit @ion-storm -->
			<Image condition="image">javaw.exe</Image> <!--Java: Monitor usage of vulnerable application and init from JAR files -->
			<Image condition="image">javaws.exe</Image> <!--Java: Monitor usage of vulnerable application and init from JAR files -->
			<Image condition="image">mmc.exe</Image> <!--Windows: -->
			<Image condition="image">msbuild.exe</Image> <!--Windows: [ https://www.hybrid-analysis.com/sample/a314f6106633fba4b70f9d6ddbee452e8f8f44a72117749c21243dc93c7ed3ac?environmentId=100 ] -->
			<Image condition="image">mshta.exe</Image> <!--Windows: HTML application executes scripts without IE protections | Credit @ion-storm [ https://en.wikipedia.org/wiki/HTML_Application ] -->
			<Image condition="image">msiexec.exe</Image> <!--Windows: Can install from http:// paths | Credit @vector-sec -->
			<Image condition="image">nbtstat.exe</Image> <!--Windows: NetBIOS statistics, attackers use to enumerate local network -->
			<Image condition="image">net.exe</Image> <!--Windows: Note - May not detect anything, net.exe is a front-end to lower APIs | Credit @ion-storm -->
			<Image condition="image">net1.exe</Image> <!--Windows: Launched by "net.exe", but it may not detect connections either -->
			<Image condition="image">notepad.exe</Image> <!--Windows: [ https://secrary.com/ReversingMalware/CoinMiner/ ] [ https://blog.cobaltstrike.com/2013/08/08/why-is-notepad-exe-connecting-to-the-internet/ ] -->
			<Image condition="image">nslookup.exe</Image> <!--Windows: Retrieve data over DNS -->
			<!-- <Image condition="image">pwsh.exe</Image> --> <!--Windows: PowerShell 7 -->
			<!-- <Image condition="image">powershell.exe</Image> --> <!--Windows: PowerShell interface-->
			<!-- <Image condition="image">powershell_ise.exe</Image> --> <!--Windows: PowerShell interface-->
			<Image condition="image">qprocess.exe</Image> <!--Windows: [ https://www.first.org/resources/papers/conf2017/APT-Log-Analysis-Tracking-Attack-Tools-by-Audit-Policy-and-Sysmon.pdf ] -->
			<Image condition="image">qwinsta.exe</Image> <!--Windows: Remotely query login sessions on a server or workstation | Credit @ion-storm -->
			<Image condition="image">reg.exe</Image> <!--Windows: Remote Registry editing ability | Credit @ion-storm -->
			<Image condition="image">regsvcs.exe</Image> <!--Windows: [ https://www.hybrid-analysis.com/sample/3f94d7080e6c5b8f59eeecc3d44f7e817b31562caeba21d02ad705a0bfc63d67?environmentId=100 ] -->
			<Image condition="image">regsvr32.exe</Image> <!--Windows: [ https://subt0x10.blogspot.com/2016/04/bypass-application-whitelisting-script.html ] -->
			<Image condition="image">rundll32.exe</Image> <!--Windows: [ https://blog.cobaltstrike.com/2016/07/22/why-is-rundll32-exe-connecting-to-the-internet/ ] -->
			<Image condition="image">rwinsta.exe</Image> <!--Windows: Disconnect remote sessions | Credit @ion-storm -->
			<Image condition="image">sc.exe</Image> <!--Windows: Remotely change Windows service settings | Credit @ion-storm -->
			<Image condition="image">schtasks.exe</Image> <!--Windows: Command-line interface to local and remote tasks -->
			<Image condition="image">taskkill.exe</Image> <!--Windows: Kill processes, has remote ability -->
			<Image condition="image">tasklist.exe</Image> <!--Windows: List processes, has remote ability -->
			<Image condition="image">wmic.exe</Image> <!--WindowsManagementInstrumentation: Credit @Cyb3rOps [ https://gist.github.com/Neo23x0/a4b4af9481e01e749409 ] -->
			<Image condition="image">wscript.exe</Image> <!--WindowsScriptingHost: | Credit @arekfurt -->
			<Image condition="image">mstsc.exe</Image> 
		<!--	<Image condition="image">wsl.exe</Image> -->
		<!--	<Image condition="image">winget.exe</Image> -->
		<!--	<Image condition="image">WindowsTerminal.exe</Image> -->
			<Image condition="image">wt.exe</Image>
			<Image condition="image">winlogon.exe</Image>
			<!--Live of the Land Binaries and scripts (LOLBAS) -->
			<Image condition="image">bitsadmin.exe</Image> <!-- Windows: Background Intelligent Transfer Service - Can download from URLs -->
			<Image condition="image">esentutl.exe</Image> <!-- Windows: Database utilities for the ESE - Can fetch from UNC paths -->
			<Image condition="image">expand.exe</Image> <!-- Windows: Expands one or more compressed files - Can fetch from UNC paths -->
			<Image condition="image">extrac32.exe</Image> <!--Windows: Uncompress .cab files - Can fetch from UNC paths -->
			<Image condition="image">findstr.exe</Image> <!-- Windows: Search for strings - Can fetch from UNC paths -->
			<Image condition="image">GfxDownloadWrapper.exe</Image> <!-- Intel Graphics Control Panel: Remote file download -->
			<Image condition="image">ieexec.exe</Image> <!-- Windows: Microsoft .NET Framework application - Download and execute from URLs -->
			<Image condition="image">makecab.exe</Image> <!-- Windows: Packages existing files into a .cab - Can fetch from UNC paths -->
			<Image condition="image">replace.exe</Image> <!-- Windows: Used to replace file with another file - Can fetch from UNC paths -->
			<Image condition="image">Excel.exe</Image> <!-- Windows Office: Excel - Can download from URLs -->
			<Image condition="image">Powerpnt.exe</Image> <!-- Windows Office: PowerPoint - Can download from URLs -->
			<Image condition="image">Winword.exe</Image> <!-- Windows Office: Word - Can download from URLs -->
			<Image condition="image">squirrel.exe</Image> <!-- Windows: Update the Nuget/Squirrel packages. Part of Teams. - Can download from URLs -->
			<!--Relevant 3rd Party Tools-->
			<Image condition="image">netcat.exe</Image> <!-- Compiled netcat.c file if naming convention is kept https://github.com/DarrenRainey/netcat -->
			<Image condition="image">nc.exe</Image> <!-- Nmap's modern version of netcat [ https://nmap.org/ncat/guide/index.html#ncat-overview ] [ https://securityblog.gr/1517/create-backdoor-in-windows-with-ncat/ ] -->
			<Image condition="image">nc64.exe</Image> <!-- 64-bit version of nc that can be used on 64-bit Windows Architectures https://github.com/DarrenRainey/netcat-->
			<Image condition="image">ncat.exe</Image> <!-- Nmap's modern version of netcat [ https://nmap.org/ncat/guide/index.html#ncat-overview ] [ https://securityblog.gr/1517/create-backdoor-in-windows-with-ncat/ ] -->
			<Image condition="image">procdump.exe</Image> <!-- Sysinternals Suite client side that can be used to dump clear text passwords from memory -->
			<Image condition="image">procdump64.exe</Image> <!-- Sysinternals Suite client side 64-bit version that can be used to dump clear text passwords from memory -->
			<Image condition="image">psexec.exe</Image> <!--Sysinternals:PsExec client side | Credit @Cyb3rOps -->
			<Image condition="image">psexec64.exe</Image> <!-- Sysinernals:PsExec64 client side | 64-bit version of psexec.exe -->
			<Image condition="image">psexesvc.exe</Image> <!--Sysinternals:PsExec server side | Credit @Cyb3rOps -->
			<Image condition="image">tor.exe</Image> <!--Tor [ https://www.hybrid-analysis.com/sample/800bf028a23440134fc834efc5c1e02cc70f05b2e800bbc285d7c92a4b126b1c?environmentId=100 ] -->
			<Image condition="image">vnc.exe</Image> <!-- VNC client | Credit @Cyb3rOps -->
			<Image condition="image">vncservice.exe</Image> <!-- VNC server | Credit @Cyb3rOps -->
			<Image condition="image">vncviewer.exe</Image> <!-- VNC client | Credit @Cyb3rOps -->
			<Image condition="image">winexesvc.exe</Image> <!-- Winexe service executable | Credit @Cyb3rOps -->
			<Image condition="image">nmap.exe</Image>
			<Image condition="image">psinfo.exe</Image>
			<Image condition="image">RDCMan.exe</Image>
			<!--Ports: Suspicious-->
			<DestinationPort name="SSH" condition="is">22</DestinationPort> <!--SSH protocol, monitor admin connections-->
			<DestinationPort name="Telnet" condition="is">23</DestinationPort> <!--Telnet protocol, monitor admin connections, insecure-->
			<DestinationPort name="SMTP" condition="is">25</DestinationPort> <!--SMTP mail protocol port, insecure, used by threats-->
			<DestinationPort name="IMAP" condition="is">143</DestinationPort> <!--IMAP mail protocol port, insecure, used by threats-->
			<DestinationPort name="RDP" condition="is">3389</DestinationPort> <!--Windows:RDP: Monitor admin connections-->
			<DestinationPort name="VNC" condition="is">5800</DestinationPort> <!--VNC protocol: Monitor admin connections, often insecure, using hard-coded admin password-->
			<DestinationPort name="VNC" condition="is">5900</DestinationPort> <!--VNC protocol Monitor admin connections, often insecure, using hard-coded admin password-->
			<DestinationPort name="WinRM" condition="is">5985</DestinationPort> <!-- WinRM protocol used for remote connections to execute commands -->
			<DestinationPort name="WinRM over HTTPS" condition="is">5986</DestinationPort> <!-- WinRM over HTTPS when set up in an environment can be used for remote connections to execute commands -->
			<DestinationPort name="Alert,Metasploit" condition="is">4444</DestinationPort> <!-- Default Metasploit port -->
			<!--Ports: Proxy-->
			<DestinationPort name="Proxy" condition="is">1080</DestinationPort> <!--Socks proxy port | Credit @ion-storm-->
			<DestinationPort name="Proxy" condition="is">3128</DestinationPort> <!--Socks proxy port | Credit @ion-storm-->
			<DestinationPort name="Proxy" condition="is">8080</DestinationPort> <!--Socks proxy port | Credit @ion-storm-->
			<!--Ports: Tor-->
			<DestinationPort name="Tor" condition="is">1723</DestinationPort> <!--Tor protocol [ https://attack.mitre.org/wiki/Technique/T1090 ] | Credit @ion-storm-->
			<DestinationPort name="Tor" condition="is">9001</DestinationPort> <!--Tor protocol [ http://www.computerworlduk.com/tutorial/security/tor-enterprise-2016-blocking-malware-darknet-use-rogue-nodes-3633907/ ] -->
			<DestinationPort name="Tor" condition="is">9030</DestinationPort> <!--Tor protocol [ http://www.computerworlduk.com/tutorial/security/tor-enterprise-2016-blocking-malware-darknet-use-rogue-nodes-3633907/ ] -->
		</NetworkConnect>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<NetworkConnect onmatch="exclude">
			<!--SECTION: Microsoft-->
			<Image condition="begin with">C:\ProgramData\Microsoft\Windows Defender\Platform\</Image>
			<Image condition="end with">\AppData\Local\Microsoft\Teams\current\Teams.exe</Image> <!--Microsoft: Teams-->
			<DestinationHostname condition="is">microsoft.com</DestinationHostname> <!--Microsoft:Update delivery-->
			<DestinationHostname condition="end with">.microsoft.com</DestinationHostname> <!--Microsoft:Update delivery-->
			<DestinationHostname condition="end with">microsoft.com.akadns.net</DestinationHostname> <!--Microsoft:Update delivery-->
			<DestinationHostname condition="end with">microsoft.com.nsatc.net</DestinationHostname> <!--Microsoft:Update delivery-->
			<!--OCSP known addresses-->
			<DestinationIp condition="is">23.4.43.27</DestinationIp> <!--Digicert [ https://otx.alienvault.com/indicator/ip/23.4.43.27 ] -->
			<DestinationIp condition="is">72.21.91.29</DestinationIp> <!--Digicert [ https://otx.alienvault.com/indicator/ip/72.21.91.29 ] -->
			<!--Section: Loopback Addresses-->
			<DestinationIp condition="is">127.0.0.1</DestinationIp> <!--Credit @ITProPaul-->
			<DestinationIp condition="begin with">fe80:0:0:0</DestinationIp> <!--Credit @ITProPaul-->
			<!-- OneDrive -->
			<Image condition="end with">\AppData\Local\Microsoft\OneDrive\OneDrive.exe</Image> <!--Microsoft: OneDrive-->
			<!-- SECTION: Azure OMS/MMA Agent -->
			<Image condition="begin with">C:\Program Files\Microsoft Monitoring Agent\</Image>
			<Image condition="begin with">C:\Program Files\OMS Gateway\</Image>
			<!-- SECTION: PRTG -->
			<Image condition="is">C:\Program Files (x86)\PRTG Network Monitor\PRTG Probe.exe</Image>
		</NetworkConnect>
	</RuleGroup>

	<!--SYSMON EVENT ID 4 : RESERVED FOR SYSMON SERVICE STATUS MESSAGES-->

		<!--DATA: UtcTime, State, Version, SchemaVersion-->
		<!--Cannot be filtered.-->

	<!--SYSMON EVENT ID 5 : PROCESS ENDED [ProcessTerminate]-->
		<!--COMMENT:	Useful data in building infection timelines.-->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image-->
	<RuleGroup name="" groupRelation="or">
		<ProcessTerminate onmatch="include">
			<Image condition="begin with">C:\Users</Image> <!--Process terminations by user binaries-->
			<Image condition="begin with">\</Image> <!--Devices and VSC shouldn't be executing changes | Credit: @SBousseaden @ionstorm @neu5ron @PerchedSystems [ https://twitter.com/SwiftOnSecurity/status/1133167323991486464 ] -->
		</ProcessTerminate>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<ProcessTerminate onmatch="exclude">
		</ProcessTerminate>
	</RuleGroup>

	<!--SYSMON EVENT ID 6 : DRIVER LOADED INTO KERNEL [DriverLoad]-->
		<!--COMMENT:	Because drivers with bugs can be used to escalate to kernel permissions, be extremely selective
			about what you exclude from monitoring. Low event volume, little incentive to exclude.
			[ https://attack.mitre.org/wiki/Technique/T1014 ] -->
		<!--TECHNICAL:	Sysmon will check the signing certificate revocation status of any driver you don't exclude.-->

		<!--DATA: UtcTime, ImageLoaded, Hashes, Signed, Signature, SignatureStatus-->
	<RuleGroup name="" groupRelation="or">
		<DriverLoad onmatch="exclude">
			<!-- include if needed <Signature condition="contains">microsoft</Signature> Exclude signed Microsoft drivers-->
			<!-- include if needed <Signature condition="contains">windows</Signature> Exclude signed Microsoft drivers-->
			<!-- include if needed <Signature condition="begin with">Intel </Signature> Exclude signed Intel drivers-->
		</DriverLoad>
	</RuleGroup>

	<!--SYSMON EVENT ID 7 : DLL (IMAGE) LOADED BY PROCESS [ImageLoad]-->
		<!--COMMENT:	Can cause high system load, disabled by default.-->
		<!--COMMENT:	[ https://attack.mitre.org/wiki/Technique/T1073 ] [ https://attack.mitre.org/wiki/Technique/T1038 ] [ https://attack.mitre.org/wiki/Technique/T1034 ] -->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, ImageLoaded, Hashes, Signed, Signature, SignatureStatus-->
	<RuleGroup name="" groupRelation="or">
		<ImageLoad onmatch="include">
			<ImageLoaded condition="begin with">C:\PerfLogs\</ImageLoaded>
			<ImageLoaded condition="begin with">C:\Users\Public\</ImageLoaded>
			<ImageLoaded condition="is">C:\Windows\System32\WLBSCTRL.dll</ImageLoaded> <!-- SCM DLL sideloading -->
			<ImageLoaded condition="is">C:\Windows\System32\TSMSISrv.dll</ImageLoaded> <!-- SCM DLL sideloading -->
			<ImageLoaded condition="is">C:\Windows\System32\TSVIPSrv.dll</ImageLoaded> <!-- SCM DLL sideloading -->
			<!--NOTE: Using "include" with no rules means nothing in this section will be logged-->
		</ImageLoad>
	</RuleGroup>

	<!--SYSMON EVENT ID 8 : REMOTE THREAD CREATED [CreateRemoteThread]-->
		<!--COMMENT:	Monitor for processes injecting code into other processes. Often used by malware to cloak their actions. Also when Firefox loads Flash.
		[ https://attack.mitre.org/wiki/Technique/T1055 ] -->

		<!--DATA: UtcTime, SourceProcessGuid, SourceProcessId, SourceImage, TargetProcessId, TargetImage, NewThreadId, StartAddress, StartModule, StartFunction-->
	<RuleGroup name="" groupRelation="or">
		<CreateRemoteThread onmatch="exclude">
			<!--COMMENT: Exclude mostly-safe sources and log anything else.-->
			<SourceImage condition="is">C:\Windows\system32\wbem\WmiPrvSE.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\svchost.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\wininit.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\csrss.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\services.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\winlogon.exe</SourceImage>
			<SourceImage condition="is">C:\Windows\system32\audiodg.exe</SourceImage>
			<StartModule condition="is">C:\Windows\system32\kernel32.dll</StartModule>
			<TargetImage condition="is">C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</TargetImage>
		</CreateRemoteThread>
	</RuleGroup>

	<!--SYSMON EVENT ID 9 : RAW DISK ACCESS [RawAccessRead]-->
		<!--EVENT 9: "RawAccessRead detected"-->
		<!--COMMENT:	Can cause high system load, disabled by default.-->
		<!--COMMENT:	Monitor for raw sector-level access to the disk, often used to bypass access control lists or access locked files.
			Disabled by default since including even one entry here activates this component. Reward/performance/rule maintenance decision.
			Encourage you to experiment with this feature yourself. [ https://attack.mitre.org/wiki/Technique/T1067 ] -->
		<!--COMMENT:	You will likely want to set this to a full capture on domain controllers, where no process should be doing raw reads.-->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, Device-->
	<RuleGroup name="" groupRelation="or">
		<RawAccessRead onmatch="include">
			<!--NOTE: Using "include" with no rules means nothing in this section will be logged-->
		</RawAccessRead>
	</RuleGroup>

	<!--SYSMON EVENT ID 10 : INTER-PROCESS ACCESS [ProcessAccess]-->
		<!--EVENT 10: "Process accessed"-->
		<!--COMMENT:	Can cause high system load, disabled by default.-->
		<!--COMMENT:	Monitor for processes accessing other process' memory.-->

		<!--DATA: UtcTime, SourceProcessGuid, SourceProcessId, SourceThreadId, SourceImage, TargetProcessGuid, TargetProcessId, TargetImage, GrantedAccess, CallTrace-->
	<RuleGroup name="" groupRelation="or">
		<ProcessAccess onmatch="include">
			<!-- CobaltStrike BOF using OpenProcess/NtOpenProcess Ref: https://medium.com/falconforce/falconfriday-direct-system-calls-and-cobalt-strike-bofs-0xff14-741fa8e1bdd6 -->
			<CallTrace condition="begin with">UNKNOWN</CallTrace>
			<!-- Typical ProcessAccess Pattern of CobaltStrike BOF Ref: e.g. https://github.com/boku7/injectAmsiBypass -->
			<Rule groupRelation="and">
				<CallTrace condition="contains">UNKNOWN</CallTrace>
				<GrantedAccess condition="contains any">0x1028;0x1fffff</GrantedAccess>
			</Rule>
			<!-- lsass.exe access with critical permission -->
			<Rule groupRelation="and">
				<TargetImage condition="end with">\lsass.exe</TargetImage>
				<GrantedAccess condition="contains any">0x40;0x1000;0x1010;0x1038;0x1410;0x1418;0x1438;0x143a;0x100000;0x1f0fff;0x1f1fff;0x1f2fff;0x1f3fff;0x1fffff</GrantedAccess> <!--0x1400 too noisy-->
			</Rule>
			<!-- LittleCorporal generated MalDoc Ref: https://github.com/connormcgarr/LittleCorporal -->
			<Rule groupRelation="and">
				<SourceImage condition="contains">winword.exe</SourceImage>
				<CallTrace condition="contains">:\Windows\Microsoft.NET\Framework64\v2.</CallTrace>
				<CallTrace condition="contains">UNKNOWN</CallTrace>
			</Rule>
		</ProcessAccess>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<ProcessAccess onmatch="exclude">
			<SourceImage condition="is">C:\Program Files\Aurora-Agent\aurora-agent.exe</SourceImage>
			<SourceImage condition="is">C:\Program Files\Aurora-Agent\aurora-agent-64.exe</SourceImage>
		</ProcessAccess>
	</RuleGroup>

	<!--SYSMON EVENT ID 11 : FILE CREATED [FileCreate]-->
		<!--EVENT 11: "File created"-->
		<!--NOTE:	Other filesystem "minifilters" can make it appear to Sysmon that some files are being written twice. This is not a Sysmon issue, per Mark Russinovich.-->
		<!--NOTE:	You may not see files detected by antivirus. Other filesystem minifilters, like antivirus, can act before Sysmon receives the alert a file was written.-->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime-->
	<RuleGroup name="" groupRelation="or">
		<FileCreate onmatch="include">
			<TargetFilename name="T1023" condition="contains">\Start Menu</TargetFilename> <!--Windows: Startup links and shortcut modification [ https://attack.mitre.org/wiki/Technique/T1023 ] -->
			<TargetFilename name="T1165" condition="contains">\Startup\</TargetFilename> <!--Microsoft:Changes to user's auto-launched files and shortcuts-->
			<TargetFilename name="OutlookAttachment" condition="contains">\Content.Outlook\</TargetFilename> <!--Microsoft:Outlook: attachments-->
			<TargetFilename name="Downloads" condition="contains">\Downloads\</TargetFilename> <!--Downloaded files. Does not include "Run" files in IE-->
			<TargetFilename name="Public" condition="contains">C:\Users\Public\</TargetFilename>
			<TargetFilename name="T1176" condition="end with">.crx</TargetFilename> <!--Chrome extension-->
			<TargetFilename condition="end with">.application</TargetFilename> <!--Microsoft:ClickOnce: [ https://blog.netspi.com/all-you-need-is-one-a-clickonce-love-story/ ] -->
			<TargetFilename condition="end with">.appref-ms</TargetFilename> <!--Microsoft:ClickOnce application | Credit @ion-storm -->
			<TargetFilename condition="end with">.ashx</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.asp</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.aspx</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.bat</TargetFilename> <!--Batch scripting-->
			<TargetFilename condition="end with">.chm</TargetFilename>
			<TargetFilename condition="end with">.cmd</TargetFilename> <!--Batch scripting: Batch scripts can also use the .cmd extension | Credit: @mmazanec -->
			<TargetFilename condition="end with">.cmdline</TargetFilename> <!--Microsoft:dotNet: Executed by cvtres.exe-->
			<TargetFilename condition="end with">.dll</TargetFilename> <!--Microsoft:Office:Word: Macro-->
			<TargetFilename condition="end with">.dmg</TargetFilename> <!--Phishing-->
			<TargetFilename condition="end with">.dmp</TargetFilename> <!--Process dumps [ (fr) http://blog.gentilkiwi.com/securite/mimikatz/minidump ] -->
			<TargetFilename condition="end with">.dump</TargetFilename>
			<TargetFilename condition="end with">.docm</TargetFilename> <!--Microsoft:Office:Word: Macro-->
			<TargetFilename condition="end with">.evtx</TargetFilename> <!--Eventlog-->
			<TargetFilename condition="end with">.exe.log</TargetFilename> <!-- [ https://github.com/bitsadmin/nopowershell ] | Credit: @SBousseaden [ https://twitter.com/SBousseaden/status/1137493597769687040 ] -->
			<TargetFilename condition="end with">.exe</TargetFilename> <!--Executable-->
			<TargetFilename condition="end with">.hta</TargetFilename> <!--Scripting-->
			<TargetFilename condition="end with">.img</TargetFilename> <!--Phishing-->
			<TargetFilename condition="end with">.iso</TargetFilename> <!--Phishing-->
			<TargetFilename condition="end with">.jar</TargetFilename> <!--Java applets-->
			<TargetFilename condition="end with">.jnlp</TargetFilename> <!--Java applets-->
			<TargetFilename condition="end with">.job</TargetFilename> <!--Scheduled task-->
			<TargetFilename condition="end with">.jse</TargetFilename> <!--Scripting [ Example: https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/Mal~Phires-C/detailed-analysis.aspx ] -->
			<TargetFilename condition="end with">.jsp</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.jspx</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.kirbi</TargetFilename> <!--Mimikatz Kerberos Ticket Files-->
			<TargetFilename condition="end with">.ocx</TargetFilename> <!--Microsoft:ActiveX-->
			<TargetFilename condition="end with">.php</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.pl</TargetFilename> <!-- possible dropped webshell -->
			<TargetFilename condition="end with">.ppt</TargetFilename> <!--Legacy Office files are often used for attacks-->
			<TargetFilename condition="end with">.pptm</TargetFilename> <!--Microsoft:Office:Word: Macro-->
			<TargetFilename condition="end with">.proj</TargetFilename><!--Microsoft:MSBuild:Script: [ https://twitter.com/subTee/status/885919612969394177 ] -->
			<TargetFilename condition="end with">.ps1</TargetFilename> <!--PowerShell [ More information: http://www.hexacorn.com/blog/2014/08/27/beyond-good-ol-run-key-part-16/ ] -->
			<TargetFilename condition="end with">.rar</TargetFilename> <!--Suspicious Archive Types-->
			<TargetFilename condition="end with">.rtf</TargetFilename> <!--RTF files often 0day malware vectors when opened by Office-->
			<TargetFilename condition="end with">.scr</TargetFilename> <!--System driver files-->
			<TargetFilename condition="end with">.scf</TargetFilename>
			<TargetFilename condition="end with">.sct</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">.sln</TargetFilename><!--Microsoft:MSBuild:Script: [ https://twitter.com/subTee/status/885919612969394177 ] -->
			<TargetFilename condition="end with">.sys</TargetFilename> <!--System driver files-->
			<TargetFilename condition="end with">.vbe</TargetFilename> <!--VisualBasicScripting-->
			<TargetFilename condition="end with">.vbs</TargetFilename> <!--VisualBasicScripting-->
			<TargetFilename condition="end with">.vhd</TargetFilename>
			<TargetFilename condition="end with">.vhdx</TargetFilename>
			<TargetFilename condition="end with">.war</TargetFilename>
			<TargetFilename condition="end with">.wsc</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">.wsf</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">.wsh</TargetFilename>
			<TargetFilename condition="end with">.xls</TargetFilename><!--Microsoft [ https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75 ] -->
			<TargetFilename condition="end with">.xlsm</TargetFilename> <!--Microsoft:Office:Word: Macro-->
			<TargetFilename condition="end with">\VMware\VMware Tools\tools.conf</TargetFilename> <!-- Monitor for vmtools-persistence-technique [https://bohops.com/2021/10/08/analyzing-and-detecting-a-vmtools-persistence-technique/] -->
			<TargetFilename name="DefaultUserModified" condition="begin with">C:\Users\Default</TargetFilename> <!--Windows: Changes to default user profile-->
			<TargetFilename condition="begin with">C:\Windows\system32\Drivers</TargetFilename> <!--Microsoft: Drivers dropped here-->
			<TargetFilename condition="begin with">C:\Windows\SysWOW64\Drivers</TargetFilename> <!--Microsoft: Drivers dropped here-->
			<TargetFilename name="T1003" condition="end with">\Windows\System32\mimilsa.log</TargetFilename> <!--Detects usage of Mimikatz Security Package (mimilib.dll) to dump security passwords in clear text https://pentestlab.blog/2019/10/21/persistence-security-support-provider/ -->
			<TargetFilename name="T1003" condition="end with">\Windows\System32\kiwissp.log</TargetFilename> <!--Detects usage of old Mimikatz Security Package (mimilib.dll) to dump security passwords in clear text https://pentestlab.blog/2019/10/21/persistence-security-support-provider/ -->
			<TargetFilename name="T1037,T1484" condition="begin with">C:\Windows\system32\GroupPolicy\Machine\Scripts</TargetFilename> <!--Group policy [ More information: http://www.hexacorn.com/blog/2017/01/07/beyond-good-ol-run-key-part-52/ ] -->
			<TargetFilename name="T1037,T1484" condition="begin with">C:\Windows\system32\GroupPolicy\User\Scripts</TargetFilename> <!--Group policy [ More information: http://www.hexacorn.com/blog/2017/01/07/beyond-good-ol-run-key-part-52/ ] -->
			<TargetFilename name="T1047,technique_name=Windows Management Instrumentation" condition="begin with">C:\Windows\system32\Wbem</TargetFilename> <!--Microsoft:WMI: [ More information: http://2014.hackitoergosum.org/slides/day1_WMI_Shell_Andrei_Dumitrescu.pdf ] -->
			<TargetFilename name="T1047,technique_name=Windows Management Instrumentation" condition="begin with">C:\Windows\SysWOW64\Wbem</TargetFilename> <!--Microsoft:WMI: [ More information: http://2014.hackitoergosum.org/slides/day1_WMI_Shell_Andrei_Dumitrescu.pdf ] -->
			<Image name="T1047,technique_name=Windows Management Instrumentation" condition="begin with">C:\WINDOWS\system32\wbem\scrcons.exe</Image>	<!-- https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/ -->
			<TargetFilename condition="begin with">C:\Windows\system32\WindowsPowerShell</TargetFilename> <!--Microsoft:Powershell: Look for modifications for persistence [ https://www.malwarearchaeology.com/cheat-sheets ] -->
			<TargetFilename condition="begin with">C:\Windows\SysWOW64\WindowsPowerShell</TargetFilename> <!--Microsoft:Powershell: Look for modifications for persistence [ https://www.malwarearchaeology.com/cheat-sheets ] -->
			<TargetFilename condition="begin with">C:\Program Files\PowerShell\7\</TargetFilename>
			<TargetFilename name="T1053" condition="begin with">C:\Windows\Tasks\</TargetFilename> <!--Microsoft:ScheduledTasks [ https://attack.mitre.org/wiki/Technique/T1053 ] -->
			<TargetFilename name="T1053" condition="begin with">C:\Windows\system32\Tasks</TargetFilename> <!--Microsoft:ScheduledTasks [ https://attack.mitre.org/wiki/Technique/T1053 ] -->
			<TargetFilename name="T1053" condition="begin with">C:\Windows\SysWOW64\Tasks</TargetFilename> <!--Microsoft:ScheduledTasks [ https://attack.mitre.org/wiki/Technique/T1053 ] -->
			<Image condition="begin with">\Device\HarddiskVolumeShadowCopy</Image> <!--Nothing should be executing from VSC | Credit: @SBousseaden [ https://twitter.com/SBousseaden/status/1133030955407630336 ] -->
			<!--Windows application compatibility-->
			<TargetFilename condition="begin with">C:\Windows\AppPatch\Custom</TargetFilename> <!--Windows: Application compatibility shims [ https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html ] -->
			<TargetFilename condition="contains">VirtualStore</TargetFilename> <!--Windows: UAC virtualization [ https://blogs.msdn.microsoft.com/oldnewthing/20150902-00/?p=91681 ] -->
			<TargetFilename condition="contains">\SAM-20</TargetFilename> <!-- Default output of HiveNightmare / SeriousSAM tools -->
			<TargetFilename condition="contains">\SAM-haxx</TargetFilename> <!-- Default output of HiveNightmare / SeriousSAM tools -->
			<TargetFilename condition="contains">\Sam.save</TargetFilename> <!-- Default output of HiveNightmare / SeriousSAM tools -->
			<TargetFilename condition="contains">\hive_sam_</TargetFilename> <!-- Default output of HiveNightmare / SeriousSAM tools -->
			<TargetFilename condition="is">C:\windows\temp\sam</TargetFilename> <!-- Default output of HiveNightmare / SeriousSAM tools -->
			<TargetFilename condition="begin with">C:\Windows\System32\spool\drivers\x64</TargetFilename> <!-- PrinterNight -->
			<!-- AutoIt3 scripts extensions [ https://isc.sans.edu/diary/More+Brazil+malspam+pushing+Astaroth+Guildma+in+January+2023/29404 ] --> 
			<TargetFilename condition="end with">.au3</TargetFilename>
			<TargetFilename condition="end with">.a3x</TargetFilename>
		</FileCreate>
	</RuleGroup>		
		
	<RuleGroup name="" groupRelation="and"> <!-- CVE-2021-40444 [ https://twitter.com/RonnyTNL/status/1436334640617373699 ] -->
		<FileCreate onmatch="include">
			<Image condition="end with">\WINWORD.EXE</Image>
			<TargetFilename condition="contains any">.cab;.inf</TargetFilename>
		</FileCreate>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<FileCreate onmatch="exclude">
			<!--SECTION: Microsoft-->
			<Image condition="is">C:\Program Files (x86)\EMET 5.5\EMET_Service.exe</Image> <!--Microsoft:EMET: Writes to C:\Windows\AppPatch\-->
			<!--SECTION: Microsoft:Office:Click2Run-->
			<Image condition="is">C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe</Image> <!-- Microsoft:Office Click2Run-->
			<!--SECTION: Windows-->
			<Image condition="is">C:\Windows\system32\smss.exe</Image> <!-- Windows: Session Manager SubSystem: Creates swapfile.sys,pagefile.sys,hiberfile.sys-->
			<Image condition="is">C:\Windows\system32\CompatTelRunner.exe</Image> <!-- Windows: Windows 10 app, creates tons of cache files-->
			<Image condition="is">\\?\C:\Windows\system32\wbem\WMIADAP.EXE</Image> <!-- Windows: WMI Performance updates-->
			<Image condition="is">C:\Windows\system32\mobsync.exe</Image> <!--Windows: Network file syncing-->
			<Image condition="is">C:\Windows\System32\WUDFHost.exe</Image> <!--Windows: Windows User-Mode Driver Framework Host. Safe as long as in the correct path. -->
			<TargetFilename condition="begin with">C:\Windows\system32\DriverStore\Temp\</TargetFilename> <!-- Windows: Temp files by DrvInst.exe-->
			<TargetFilename condition="begin with">C:\Windows\system32\wbem\Performance\</TargetFilename> <!-- Windows: Created in wbem by WMIADAP.exe-->
			<TargetFilename condition="begin with">C:\Windows\Installer\</TargetFilename> <!--Windows:Installer: Ignore MSI installer files caching-->
			<!--SECTION: Windows:Updates-->
			<TargetFilename condition="begin with">C:\$WINDOWS.~BT\Sources\</TargetFilename> <!-- Windows: Feature updates containing lots of .exe and .sys-->
			<Image condition="begin with">C:\Windows\winsxs\amd64_microsoft-windows</Image> <!-- Windows: Windows update-->
		</FileCreate>
	</RuleGroup>

	<!--SYSMON EVENT ID 12 & 13 & 14 : REGISTRY MODIFICATION [RegistryEvent]-->
		<!--EVENT 12: "Registry object added or deleted"-->
		<!--EVENT 13: "Registry value set"-->
		<!--EVENT 14: "Registry objected renamed"-->

		<!--NOTE:	Windows writes hundreds or thousands of registry keys a minute, so just because you're not changing things, doesn't mean these rules aren't being run.-->
		<!--NOTE:	You do not have to spend a lot of time worrying about performance, CPUs are fast, but it's something to consider. Every rule and condition type has a small cost.-->
		<!--NOTE:	"contains" works by finding the first letter, then matching the second, etc, so the first letters should be as low-occurrence as possible.-->
		<!--NOTE:	[ https://attack.mitre.org/wiki/Technique/T1112 ] -->

		<!--TECHNICAL:	You cannot filter on the "Details" attribute, due to performance issues when very large keys are written, and variety of data formats-->
		<!--TECHNICAL:	Possible prefixes are HKLM, HKCR, and HKU-->
		<!--CRITICAL:	Schema version 3.30 and higher change HKLM\="\REGISTRY\MACHINE\" and HKU\="\REGISTRY\USER\" and HKCR\="\REGISTRY\MACHINE\SOFTWARE\Classes\" and CurrentControlSet="ControlSet001"-->
		<!--CRITICAL:	Due to a bug, Sysmon versions BEFORE 7.01 may not properly log with the new prefix style for registry keys that was originally introduced in schema version 3.30-->
		<!--NOTE:	Because Sysmon runs as a service, it has no filtering ability for, or concept of, HKCU or HKEY_CURRENT_USER. Use "contains" or "end with" to get around this limitation-->

		<!-- ! CRITICAL NOTE !:	It may appear this section is MISSING important entries, but SOME RULES MONITOR MANY KEYS, so look VERY CAREFULLY to see if something is already covered.
								Sysmon's wildcard monitoring along with highly-tuned generic strings cuts the rulesets down immensely, compared to doing this in other tools.
								For example, most COM hijacking in CLSID's across the registry is covered by a single rule monitoring a InProcServer32 wildcard-->

		<!--DATA: EventType, UtcTime, ProcessGuid, ProcessId, Image, TargetObject, Details (can't filter on), NewName (can't filter on)-->
	<RuleGroup name="" groupRelation="or">
		<RegistryEvent onmatch="include">
			<!--Autorun or Startups-->
				<!--ADDITIONAL REFERENCE: [ http://www.ghacks.net/2016/06/04/windows-automatic-startup-locations/ ] -->
				<!--ADDITIONAL REFERENCE: [ https://view.officeapps.live.com/op/view.aspx?src=https://arsenalrecon.com/downloads/resources/Registry_Keys_Related_to_Autorun.ods ] -->
				<!--ADDITIONAL REFERENCE: [ http://www.silentrunners.org/launchpoints.html ] -->
				<!--ADDITIONAL REFERENCE: [ https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2 ] -->
				<!--ADDITIONAL REFERENCE: [ https://web.archive.org/web/20200116001643/http://scholarworks.rit.edu/cgi/viewcontent.cgi?article=1533&context=theses | Understanding malware autostart techniques - Matthew Gottlieb ] -->
			<TargetObject name="T1562.002" condition="end with">\MiniNT</TargetObject> <!--Windows: Disable eventlog by acting like WinPE [https://twitter.com/0gtweet/status/1182516740955226112] -->
			<TargetObject name="T1060,RunKey" condition="contains">CurrentVersion\Run</TargetObject> <!--Windows: Wildcard for Run keys, including RunOnce, RunOnceEx, RunServices, RunServicesOnce [Also covers terminal server] -->
			<TargetObject name="T1060,RunPolicy" condition="contains">Policies\Explorer\Run</TargetObject> <!--Windows: Alternate runs keys | Credit @ion-storm-->
			<TargetObject name="T1484" condition="contains">Group Policy\Scripts</TargetObject> <!--Windows: Group policy scripts-->
			<TargetObject name="T1484" condition="contains">Windows\System\Scripts</TargetObject> <!--Windows: Wildcard for Logon, Loggoff, Shutdown-->
			<TargetObject name="T1060" condition="contains">CurrentVersion\Windows\Load</TargetObject> <!--Windows: [ https://msdn.microsoft.com/en-us/library/jj874148.aspx ] -->
			<TargetObject name="T1060" condition="contains">CurrentVersion\Windows\Run</TargetObject> <!--Windows: [ https://msdn.microsoft.com/en-us/library/jj874148.aspx ] -->
			<TargetObject name="T1060" condition="contains">CurrentVersion\Winlogon\Shell</TargetObject> <!--Windows: [ https://msdn.microsoft.com/en-us/library/ms838576(v=winembedded.5).aspx ] -->
			<TargetObject name="T1060" condition="contains">CurrentVersion\Winlogon\System</TargetObject> <!--Windows [ https://www.exterminate-it.com/malpedia/regvals/zlob-dns-changer/118 ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify</TargetObject> <!--Windows: Autorun location [ https://attack.mitre.org/wiki/Technique/T1004 ] [ https://www.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell</TargetObject> <!--Windows: [ https://technet.microsoft.com/en-us/library/ee851671.aspx ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</TargetObject> <!--Windows: Autorun location [ https://www.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order ] -->
			<TargetObject condition="begin with">HKLM\Software\WOW6432Node\Microsoft\Windows NT\CurrentVersion\Drivers32</TargetObject> <!--Windows: Legacy driver loading | Credit @ion-storm -->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\BootExecute</TargetObject> <!--Windows: Autorun | Credit @ion-storm | [ https://www.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\AeDebug</TargetObject> <!--Windows: Automatic program crash debug program [ https://www.symantec.com/security_response/writeup.jsp?docid=2007-050712-5453-99&tabid=2 ] -->
			<TargetObject condition="contains">UserInitMprLogonScript</TargetObject> <!--Windows: Legacy logon script environment variable [ http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/ ] -->
			<TargetObject name="T1112,ChangeStartupFolderPath" condition="end with">user shell folders\startup</TargetObject> <!--Monitor changes to Startup folder location for monitoring evasion | Credit @SBousseaden-->
			<!--Services-->
			<TargetObject name="T1031,T1050" condition="end with">\ServiceDll</TargetObject> <!--Windows: Points to a service's DLL [ https://blog.cylance.com/windows-registry-persistence-part-1-introduction-attack-phases-and-windows-services ] -->
			<TargetObject name="T1031,T1050" condition="end with">\ServiceManifest</TargetObject> <!--Windows: Manifest pointing to service's DLL [ https://www.geoffchappell.com/studies/windows/win32/services/svchost/index.htm ] -->
			<TargetObject name="T1031,T1050" condition="end with">\ImagePath</TargetObject> <!--Windows: Points to a service's EXE [ https://attack.mitre.org/wiki/Technique/T1050 ] -->
			<TargetObject name="T1031,T1050" condition="end with">\Start</TargetObject> <!--Windows: Services start mode changes (Disabled, Automatically, Manual)-->
			<!--RDP-->
			<TargetObject name="RDP port change" condition="end with">Control\Terminal Server\WinStations\RDP-Tcp\PortNumber</TargetObject> <!--Windows: RDP port change under Control [ https://blog.menasec.net/2019/02/of-rdp-hijacking-part1-remote-desktop.html ]-->
			<TargetObject name="RDP port change" condition="end with">Control\Terminal Server\fSingleSessionPerUser</TargetObject> <!--Windows: Allow same user to have mutliple RDP sessions, to hide from admin being impersonated-->
			<TargetObject name="ModifyRemoteDesktopState" condition="end with">\fDenyTSConnections</TargetObject> <!--Windows: Attacker turning on RDP-->
			<TargetObject condition="end with">LastLoggedOnUser</TargetObject> <!--Windows: Changing last-logged in user-->
			<TargetObject name="ModifyRemoteDesktopPort" condition="end with">RDP-tcp\PortNumber</TargetObject> <!--Windows: Changing RDP port to evade IDS-->
			<TargetObject condition="end with">Services\PortProxy\v4tov4</TargetObject> <!--Windows: Changing RDP port to evade IDS-->
			<TargetObject condition="contains">\Microsoft\Terminal Server Client\Default\MRU</TargetObject> <!-- MSTSC Connection History -->
			<TargetObject condition="contains">\Microsoft\Terminal Server Client\Servers\</TargetObject> <!-- MSTSC Connection History -->
			<!--CLSID launch commands and Default File Association changes-->
			<TargetObject name="T1042" condition="contains">\command\</TargetObject> <!--Windows: Sensitive sub-key under file associations and CLSID that map to launch command-->
			<TargetObject name="T1122" condition="contains">\ddeexec\</TargetObject> <!--Windows: Sensitive sub-key under file associations and CLSID that map to launch command-->
			<TargetObject name="T1122" condition="contains">{86C86720-42A0-1069-A2E8-08002B30309D}</TargetObject> <!--Windows: Tooltip handler-->
			<TargetObject name="T1042" condition="contains">exefile</TargetObject> <!--Windows Executable handler, to log any changes not already monitored-->
			<!--Windows COM-->
			<TargetObject name="T1122" condition="end with">\InprocServer32\(Default)</TargetObject> <!--Windows:COM Object Hijacking [ https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence ] | Credit @ion-storm -->
			<!--Windows shell visual modifications used by malware-->
			<TargetObject name="T1158" condition="end with">\Hidden</TargetObject> <!--Windows:Explorer: Some types of malware try to hide their hidden system files from the user, good signal event -->
			<TargetObject name="T1158" condition="end with">\ShowSuperHidden</TargetObject> <!--Windows:Explorer: Some types of malware try to hide their hidden system files from the user, good signal event [ Example: https://www.symantec.com/security_response/writeup.jsp?docid=2007-061811-4341-99&tabid=2 ] -->
			<TargetObject name="T1158" condition="end with">\HideFileExt</TargetObject> <!--Windows:Explorer: Some malware hides file extensions to make diagnosis/disinfection more daunting to novice users -->
			<!--Windows shell hijack and modifications-->
			<TargetObject condition="contains">Classes\*\</TargetObject> <!--Windows:Explorer: [ http://www.silentrunners.org/launchpoints.html ] -->
			<TargetObject condition="contains">Classes\AllFilesystemObjects\</TargetObject> <!--Windows:Explorer: [ http://www.silentrunners.org/launchpoints.html ] -->
			<TargetObject condition="contains">Classes\Directory\</TargetObject> <!--Windows:Explorer: [ https://stackoverflow.com/questions/1323663/windows-shell-context-menu-option ] -->
			<TargetObject condition="contains">Classes\Drive\</TargetObject> <!--Windows:Explorer: [ https://stackoverflow.com/questions/1323663/windows-shell-context-menu-option ] -->
			<TargetObject condition="contains">Classes\Folder\</TargetObject> <!--Windows:Explorer: ContextMenuHandlers, DragDropHandlers, CopyHookHandlers, [ https://stackoverflow.com/questions/1323663/windows-shell-context-menu-option ] -->
			<TargetObject condition="contains">Classes\PROTOCOLS\</TargetObject> <!--Windows:Explorer: Protocol handlers-->
			<TargetObject condition="contains">ContextMenuHandlers\</TargetObject> <!--Windows: [ http://oalabs.openanalysis.net/2015/06/04/malware-persistence-hkey_current_user-shell-extension-handlers/ ] -->
			<TargetObject condition="contains">CurrentVersion\Shell</TargetObject> <!--Windows: Shell Folders, ShellExecuteHooks, ShellIconOverloadIdentifers, ShellServiceObjects, ShellServiceObjectDelayLoad [ http://oalabs.openanalysis.net/2015/06/04/malware-persistence-hkey_current_user-shell-extension-handlers/ ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\explorer\ShellExecuteHooks</TargetObject> <!--Windows: ShellExecuteHooks-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\explorer\ShellServiceObjectDelayLoad</TargetObject> <!--Windows: ShellExecuteHooks-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\explorer\ShellIconOverlayIdentifiers</TargetObject> <!--Windows: ShellExecuteHooks-->
			<!--AppPaths hijacking-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\App Paths\</TargetObject> <!--Windows: Credit to @Hexacorn [ http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/ ] -->
			<!--Terminal service boobytrap-->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\InitialProgram</TargetObject> <!--Windows:RDP: Note other Terminal Server run keys are handled by another wildcard already-->
			<!--Group Policy integrity-->
			<TargetObject name="T1484" condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions\</TargetObject> <!--Windows: Group Policy internally uses a plug-in architecture that nothing should be modifying-->
			<!--Winsock and Winsock2-->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Services\WinSock</TargetObject> <!--Windows: Wildcard, includes Winsock and Winsock2-->
			<TargetObject condition="end with">\ProxyServer</TargetObject> <!--Windows: System and user proxy server-->
			<!--Credential providers-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider</TargetObject> <!--Wildcard, includes Credential Providers and Credential Provider Filters-->
			<TargetObject name="T1101" condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</TargetObject> <!-- [ https://attack.mitre.org/wiki/Technique/T1131 ] [ https://attack.mitre.org/wiki/Technique/T1101 ] -->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders</TargetObject> <!--Windows: Changes to WDigest-UseLogonCredential for password scraping [ https://www.trustedsec.com/april-2015/dumping-wdigest-creds-with-meterpreter-mimikatzkiwi-in-windows-8-1/ ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Netsh</TargetObject> <!--Windows: Netsh helper DLL [ https://attack.mitre.org/wiki/Technique/T1128 ] -->
			<TargetObject condition="contains">Software\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyEnable</TargetObject> <!--Windows: Malware often disables a web proxy for 2nd stage downloads -->
			<!--Networking-->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\NetworkProvider\Order\</TargetObject> <!--Windows: Order of network providers that are checked to connect to destination [ https://www.malwarearchaeology.com/cheat-sheets ] -->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles</TargetObject> <!--Windows: | Credit @ion-storm -->
			<TargetObject name="T1089" condition="end with">\EnableFirewall</TargetObject> <!--Windows: Monitor for firewall disablement, all firewall profiles [ https://attack.mitre.org/wiki/Technique/T1089 ] -->
			<TargetObject name="T1089" condition="end with">\DoNotAllowExceptions</TargetObject> <!--Windows: Monitor for firewall disablement, all firewall profiles [ https://attack.mitre.org/wiki/Technique/T1089 ] -->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\AuthorizedApplications\List</TargetObject> <!--Windows Firewall authorized applications for all networks| Credit @ion-storm -->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\DomainProfile\AuthorizedApplications\List</TargetObject> <!--Windows Firewall authorized applications for domain networks -->
			<!--DLLs that get injected into every process at launch-->
			<TargetObject name="T1103" condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows\Appinit_Dlls\</TargetObject> <!--Windows: Feature disabled by default [ https://attack.mitre.org/wiki/Technique/T1103 ] -->
			<TargetObject name="T1103" condition="begin with">HKLM\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows\Appinit_Dlls\</TargetObject> <!--Windows: Feature disabled by default [ https://attack.mitre.org/wiki/Technique/T1103 ] -->
			<TargetObject condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\AppCertDlls\</TargetObject> <!--Windows: Credit to @Hexacorn [ http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/ ] [ https://blog.comodo.com/malware/trojware-win32-trojanspy-volisk-a/ ] -->
			<!--Office-->
			<TargetObject name="T1137" condition="contains">Microsoft\Office\Outlook\Addins\</TargetObject> <!--Microsoft:Office: Outlook add-ins, access to sensitive data and often cause issues-->
			<TargetObject name="T1137" condition="contains">Office Test\</TargetObject> <!-- Microsoft:Office: Persistence method [ http://www.hexacorn.com/blog/2014/04/16/beyond-good-ol-run-key-part-10/ ] | Credit @Hexacorn -->
			<TargetObject name="Suspicious,ChangedURLOutlook" condition="contains all">\Software\Microsoft\Office\;\Outlook\WebView\;URL</TargetObject> <!-- The URL shouldn't be changed all that often and could enable persistance for hackers | @humpelpum [ https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=70 ]-->
			<TargetObject name="Context,ProtectedModeExitOrMacrosUsed" condition="contains">Security\Trusted Documents\TrustRecords</TargetObject> <!--Microsoft:Office: Monitor when "Enable editing" or "Enable macros" is used | Credit @OutflankNL | [ https://outflank.nl/blog/2018/01/16/hunting-for-evil-detect-macros-being-executed/ ] -->
			<TargetObject name="Context,ContactedDomain" condition="end with">\EnableBHO</TargetObject> <!--Microsoft:Office: Contacted domains stored here 'HKEY_CURRENT_USER\<SID>\SOFTWARE\Microsoft\Office\16.0\Common\Internet\Server Cache\<domain>\EnableBHO' -->
			<!--IE-->
			<TargetObject name="T1176" condition="contains">Internet Explorer\Toolbar\</TargetObject> <!--Microsoft:InternetExplorer: Machine and user [ Example: https://www.exterminate-it.com/malpedia/remove-mywebsearch ] -->
			<TargetObject name="T1176" condition="contains">Internet Explorer\Extensions\</TargetObject> <!--Microsoft:InternetExplorer: Machine and user [ Example: https://www.exterminate-it.com/malpedia/remove-mywebsearch ] -->
			<TargetObject name="T1176" condition="contains">Browser Helper Objects\</TargetObject> <!--Microsoft:InternetExplorer: Machine and user [ https://msdn.microsoft.com/en-us/library/bb250436(v=vs.85).aspx ] -->
			<TargetObject condition="end with">\DisableSecuritySettingsCheck</TargetObject>
			<TargetObject condition="end with">\3\1206</TargetObject> <!--Microsoft:InternetExplorer: Malware sometimes assures scripting is on in Internet Zone [ https://support.microsoft.com/en-us/help/182569/internet-explorer-security-zones-registry-entries-for-advanced-users ] -->
			<TargetObject condition="end with">\3\2500</TargetObject> <!--Microsoft:InternetExplorer: Malware sometimes disables Protected Mode in Internet Zone [ https://blog.avast.com/2013/08/12/your-documents-are-corrupted-from-image-to-an-information-stealing-trojan/ ] -->
			<TargetObject condition="end with">\3\1809</TargetObject> <!--Microsoft:InternetExplorer: Malware sometimes disables Pop-up Blocker in Internet Zone [ https://support.microsoft.com/en-us/help/182569/internet-explorer-security-zones-registry-entries-for-advanced-users ] -->
			<!--Magic registry keys-->
			<TargetObject condition="begin with">HKLM\Software\Classes\CLSID\{AB8902B4-09CA-4BB6-B78D-A8F59079A8D5}\</TargetObject> <!--Windows: Thumbnail cache autostart [ http://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-levels-up-with-new-autostart-mechanism/ ] -->
			<TargetObject condition="begin with">HKLM\Software\Classes\WOW6432Node\CLSID\{AB8902B4-09CA-4BB6-B78D-A8F59079A8D5}\</TargetObject> <!--Windows: Thumbnail cache autostart [ http://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-levels-up-with-new-autostart-mechanism/ ] -->
			<TargetObject condition="begin with">HKLM\Software\Classes\CLSID\{083863F1-70DE-11d0-BD40-00A0C911CE86}\</TargetObject> <!--Windows: DirectX instances-->
			<TargetObject condition="begin with">HKLM\Software\Classes\WOW6432Node\CLSID\{083863F1-70DE-11d0-BD40-00A0C911CE86}\</TargetObject> <!--Windows: DirectX instances-->
			<!--Install/Run artifacts-->
			<TargetObject condition="end with">\UrlUpdateInfo</TargetObject> <!--Microsoft:ClickOnce: Source URL is stored in this value [ https://subt0x10.blogspot.com/2016/12/mimikatz-delivery-via-clickonce-with.html ] -->
			<TargetObject condition="end with">\InstallSource</TargetObject> <!--Windows: Source folder for certain program and component installations-->
			<TargetObject name="Alert,Sysinternals Tool Used" condition="end with">\EulaAccepted</TargetObject> <!--Sysinternals tool launched. Lots of useful abilities for attackers -->
			<!--Antivirus tampering-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableAntiSpyware</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableAntiVirus</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\SpynetReporting</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableRealtimeMonitoring</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableBehaviorMonitoring</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableIOAVProtection</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableOnAccessProtection</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\DisableScanOnRealtimeEnable</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\Reporting\DisableEnhancedNotifications</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\SpyNet\DisableBlockAtFirstSeen</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="end with">\SubmitSamplesConsent</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1089,Tamper-Defender" condition="begin with">HKLM\Software\Microsoft\Windows Defender\Exclusions</TargetObject> <!--Windows:Defender: State modified via registry-->
			<TargetObject name="T1562,Tamper-Defender" condition="begin with">HKLM\SOFTWARE\Policies\Microsoft\Windows Defender</TargetObject> <!--Windows:Defender: Monitor any modified via registry-->
			<!--Windows UAC tampering-->
			<TargetObject name="T1088" condition="end with">HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA</TargetObject> <!--Detect: UAC Tampering | Credit @ion-storm -->
			<TargetObject name="T1088" condition="end with">HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy</TargetObject> <!--Detect: UAC Tampering | Credit @ion-storm -->
			<!--Microsoft Security Center tampering | Credit @ion-storm -->
			<TargetObject name="T1089,Tamper-SecCenter" condition="end with">HKLM\Software\Microsoft\Security Center\</TargetObject> <!-- [ https://attack.mitre.org/wiki/Technique/T1089 ] -->
			<TargetObject name="T1089,Tamper-SecCenter" condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\HideSCAHealth</TargetObject> <!--Windows:Security Center: Malware sometimes disables [ https://blog.avast.com/2013/08/12/your-documents-are-corrupted-from-image-to-an-information-stealing-trojan/ ] -->
			<!--Windows application compatibility-->
			<TargetObject name="T1138,AppCompatShim" condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Custom</TargetObject> <!--Windows: AppCompat [ https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html ] -->
			<TargetObject name="T1138,AppCompatShim" condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB</TargetObject> <!--Windows: AppCompat [ https://attack.mitre.org/wiki/Technique/T1138 ] -->
			<TargetObject condition="contains">VirtualStore</TargetObject> <!--Windows: Registry virtualization, something's wrong if it's in use [ https://msdn.microsoft.com/en-us/library/windows/desktop/aa965884(v=vs.85).aspx ] -->
			<!--Windows internals integrity monitoring-->
			<TargetObject name="T1183,IFEO" condition="begin with">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\</TargetObject> <!--Windows: Malware likes changing IFEO, like adding Debugger to disable antivirus EXE-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\WINEVT\</TargetObject> <!--Windows: Event log system integrity and ACLs-->
			<TargetObject name="Tamper-Safemode" condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Safeboot\</TargetObject> <!--Windows: Services approved to load in safe mode. Almost nothing should ever modify this.-->
			<TargetObject name="Tamper-Winlogon" condition="begin with">HKLM\SYSTEM\CurrentControlSet\Control\Winlogon\</TargetObject> <!--Windows: Providers notified by WinLogon-->
			<TargetObject name="Context,DeviceConnectedOrUpdated" condition="end with">\FriendlyName</TargetObject> <!--Windows: New devices connected and remembered-->
			<TargetObject name="Context,MsiInstallerStarted" condition="is">HKLM\Software\Microsoft\Windows\CurrentVersion\Installer\InProgress\(Default)</TargetObject> <!--Windows: See when WindowsInstaller is engaged, useful for timeline matching with other events-->
			<TargetObject name="Tamper-Tracing" condition="begin with">HKLM\Software\Microsoft\Tracing\RASAPI32</TargetObject> <!--Windows: Malware sometimes disables tracing to obfuscate tracks-->
			<TargetObject name="Context,ProcessAccessedPrivateResource" condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\</TargetObject> <!-- Windows: Win10 tracks when and what process uses webcam/microphone/location etc [ https://medium.com/@7a616368/can-you-track-processes-accessing-the-camera-and-microphone-7e6885b37072 ] -->
			<TargetObject condition="contains">\Keyboard Layout\Preload</TargetObject> <!--Microsoft:Windows: Keyboard layout loaded into user session [ https://renenyffenegger.ch/notes/Windows/registry/tree/HKEY_CURRENT_USER/Keyboard-Layout/Preload/index ] | Credit @cyb3rops -->
			<TargetObject condition="contains">\Keyboard Layout\Substitutes</TargetObject> <!--Microsoft:Windows: Keyboard layout loaded into user session [ https://renenyffenegger.ch/notes/Windows/registry/tree/HKEY_CURRENT_USER/Keyboard-Layout/Preload/index ] | Credit @cyb3rops -->
			<!--Windows inventory events-->
			<TargetObject name="InvDB-Path" condition="end with">\LowerCaseLongPath</TargetObject> <!-- [ https://binaryforay.blogspot.com/2017/10/amcache-still-rules-everything-around.html ] -->
			<TargetObject name="InvDB-Pub" condition="end with">\Publisher</TargetObject> <!-- [ https://binaryforay.blogspot.com/2017/10/amcache-still-rules-everything-around.html ] -->
			<TargetObject name="InvDB-Ver" condition="end with">\BinProductVersion</TargetObject> <!-- [ https://docs.microsoft.com/en-us/windows/privacy/basic-level-windows-diagnostic-events-and-fields-1709 ] -->
			<TargetObject name="InvDB-DriverVer" condition="end with">\DriverVersion</TargetObject> <!-- [ https://df-stream.com/2015/02/leveraging-devicecontainers-key/ ] -->
			<TargetObject name="InvDB-DriverVer" condition="end with">\DriverVerVersion</TargetObject> <!-- [ https://df-stream.com/2015/02/leveraging-devicecontainers-key/ ] -->
			<TargetObject name="InvDB-CompileTimeClaim" condition="end with">\LinkDate</TargetObject> <!-- Compile time of EXE, may not be reliable [ https://en.wikipedia.org/wiki/Link_time ] -->
			<TargetObject name="InvDB" condition="contains">Compatibility Assistant\Store\</TargetObject> <!-- Inventory -->
			<TargetObject condition="begin with">HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Ports</TargetObject> <!--Microsoft:Windows: Printer port changes as used in CVE-2020-1048 [ https://windows-internals.com/printdemon-cve-2020-1048/ ] -->
			<!--Suspicious sources-->
			<Image name="Suspicious,ImageBeginWithBackslash" condition="end with">\regedit.exe</Image> <!--Users and helpdesk staff making system modifications -->
			<Image name="Suspicious,ImageBeginWithBackslash" condition="begin with">\</Image> <!--Devices and VSC shouldn't be executing changes | Credit: @SBousseaden @ionstorm @neu5ron @PerchedSystems [ https://twitter.com/SwiftOnSecurity/status/1133167323991486464 ] -->
			<TargetObject condition="begin with">HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\</TargetObject> <!--Microsoft:Windows:UAC: Detect malware changes to UAC prompt level-->
			<TargetObject condition="begin with">HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\</TargetObject> <!--Microsoft:Defender: Detect changes to Defender administrative settings to monitor for disablement-->
			<!--Windows trust architecture monitoring | Credit: @mattifestation-->
			<!--ADDITIONAL REFERENCE: https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf-->
			<TargetObject condition="contains">Microsoft\Cryptography\OID\</TargetObject> <!-- Important trust registry values to monitor -->
			<TargetObject condition="contains">WOW6432Node\Microsoft\Cryptography\OID\</TargetObject> <!-- Important trust registry values to monitor -->
			<TargetObject condition="contains">Microsoft\Cryptography\Providers\Trust\</TargetObject> <!-- Important trust registry values to monitor -->
			<TargetObject condition="contains">WOW6432Node\Microsoft\Cryptography\Providers\Trust\</TargetObject> <!-- Important trust registry values to monitor -->
			<TargetObject condition="contains">Control\Print\Environments\Windows x64\Drivers</TargetObject> <!-- PrinterNightmare coverage -->
		</RegistryEvent>
	</RuleGroup>

	<RuleGroup name="" groupRelation="or">
		<RegistryEvent onmatch="exclude">
		<!--COMMENT:	Remove low-information noise. Often these hide a procress recreating an empty key and do not hide the values created subsequently.-->
		<!--NOTE:	A lot of noise can be removed by excluding CreateKey events, which are largely innocuous-->
			<TargetObject condition="contains">\{CAFEEFAC-</TargetObject>
			<EventType condition="is">CreateKey</EventType>
			<TargetObject condition="begin with">HKLM\COMPONENTS</TargetObject>
			<!--Inventory noise-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\AppModel\StateRepository\Cache</TargetObject>
			<!--Misc-->
			<TargetObject condition="end with">Toolbar\WebBrowser</TargetObject> <!--Microsoft:IE: Extraneous activity-->
			<TargetObject condition="end with">Browser\ITBar7Height</TargetObject> <!--Microsoft:IE: Extraneous activity, covers ShellBrowser and WebBrowser-->
			<TargetObject condition="end with">Browser\ITBar7Layout</TargetObject> <!--Microsoft:IE: Extraneous activity-->
			<TargetObject condition="end with">Internet Explorer\Toolbar\Locked</TargetObject> <!--Windows:Explorer: Extraneous activity-->
			<TargetObject condition="end with">Toolbar\WebBrowser\{47833539-D0C5-4125-9FA8-0819E2EAAC93}</TargetObject> <!--Windows:Explorer: Extraneous activity-->
			<TargetObject condition="end with">}\PreviousPolicyAreas</TargetObject> <!--Windows: Remove noise from \Winlogon\GPExtensions by svchost.exe-->
			<TargetObject condition="contains">\Control\WMI\Autologger\</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">HKLM\SYSTEM\CurrentControlSet\Services\UsoSvc\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">\Lsa\OfflineJoin\CurrentValue</TargetObject> <!--Windows: Sensitive value during domain join-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\</TargetObject> <!--Windows: Remove noise monitoring installations run as system-->
			<TargetObject condition="contains">_Classes\AppX</TargetObject> <!--Windows: Remove noise monitoring "Shell\open\command"--> <!--Win8+-->
			<TargetObject condition="begin with">HKLM\Software\Microsoft\Windows\CurrentVersion\WINEVT\Publishers\</TargetObject> <!--Windows: SvcHost Noise-->
			<!--Bootup Control noise-->
			<TargetObject condition="end with">HKLM\SYSTEM\CurrentControlSet\Control\Lsa\LsaPid</TargetObject> <!--Windows:lsass.exe: Boot noise-->
			<TargetObject condition="end with">HKLM\SYSTEM\CurrentControlSet\Control\Lsa\SspiCache</TargetObject> <!--Windows:lsass.exe: Boot noise--> <!--Win8+-->
			<TargetObject condition="end with">HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Kerberos\Domains</TargetObject> <!--Windows:lsass.exe: Boot noise--> <!--Win8+-->
			<!--Services startup settings noise, some low-risk services routinely change it and this can be ignored-->
			<TargetObject condition="end with">\Services\BITS\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">\services\clr_optimization_v2.0.50727_32\Start</TargetObject> <!--Microsoft:dotNet: Windows 7-->
			<TargetObject condition="end with">\services\clr_optimization_v2.0.50727_64\Start</TargetObject> <!--Microsoft:dotNet: Windows 7-->
			<TargetObject condition="end with">\services\clr_optimization_v4.0.30319_32\Start</TargetObject> <!--Microsoft:dotNet: Windows 10-->
			<TargetObject condition="end with">\services\clr_optimization_v4.0.30319_64\Start</TargetObject> <!--Microsoft:dotNet: Windows 10-->
			<TargetObject condition="end with">\services\deviceAssociationService\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">\services\fhsvc\Start</TargetObject> <!--Windows: File History Service-->
			<TargetObject condition="end with">\services\nal\Start</TargetObject> <!--Intel: Network adapter diagnostic driver-->
			<TargetObject condition="end with">\services\trustedInstaller\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">\services\tunnel\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<TargetObject condition="end with">\services\usoSvc\Start</TargetObject> <!--Windows: Remove noise from monitoring "\Start"-->
			<!--FileExts noise filtering-->
			<TargetObject condition="end with">\UserChoice\ProgId</TargetObject> <!--Windows: Remove noise from monitoring "FileExts"--> <!--Win8+-->
			<TargetObject condition="end with">\UserChoice\Hash</TargetObject> <!--Windows: Remove noise from monitoring "FileExts"--> <!--Win8+-->
			<TargetObject condition="end with">\OpenWithList\MRUList</TargetObject> <!--Windows: Remove noise from monitoring "FileExts"-->
			<TargetObject condition="contains">Shell Extentions\Cached</TargetObject> <!--Windows: Remove noise generated by explorer.exe on monitored ShellCached binary keys--> <!--Win8+-->
			<!--Group Policy noise-->
			<TargetObject condition="end with">HKLM\System\CurrentControlSet\Control\Lsa\Audit\SpecialGroups</TargetObject> <!--Windows: Routinely set through Group Policy, not especially important to log-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Startup\0\PSScriptOrder</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Startup\0\SOM-ID</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Startup\0\GPO-ID</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Startup\0\0\IsPowershell</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Startup\0\0\ExecTime</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\PSScriptOrder</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\SOM-ID</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\GPO-ID</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\0\IsPowershell</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="end with">SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\0\ExecTime</TargetObject> <!--Windows:Group Policy: Noise below the actual key while building-->
			<TargetObject condition="contains">\safer\codeidentifiers\0\HASHES\{</TargetObject> <!--Windows: Software Restriction Policies. Can be used to disable security tools, but very noisy to monitor if you use it-->
			<!--SECTION: Office C2R-->
			<TargetObject condition="contains">VirtualStore\MACHINE\SOFTWARE\Microsoft\Office\ClickToRun\</TargetObject> <!--Microsoft: SearchProtocolHost writes to OfficeC2R registry for Outlook, seemingly regarding mail indexing-->
			<TargetObject condition="begin with">HKLM\SOFTWARE\Microsoft\Office\ClickToRun\</TargetObject> <!--Microsoft: Virtual registry for Office-->
			<!--SECTION: 3rd party-->
			<Image condition="is">C:\Program Files\WIDCOMM\Bluetooth Software\btwdins.exe</Image> <!--Constantly writes to HKLM-->
			<TargetObject condition="begin with">HKCR\VLC.</TargetObject> <!--VLC update noise-->
			<TargetObject condition="begin with">HKCR\iTunes.</TargetObject> <!--Apple: iTunes update noise-->
			<!--WINEVT publishers noise-->
			<TargetObject condition="is">HKLM\Software\Microsoft\Windows\CurrentVersion\WINEVT\Publishers\{945a8954-c147-4acd-923f-40c45405a658}</TargetObject> <!--Windows update-->
		</RegistryEvent>
	</RuleGroup>

	<!--SYSMON EVENT ID 15 : ALTERNATE DATA STREAM CREATED [FileCreateStreamHash]-->
		<!--EVENT 15: "File stream created"-->
		<!--COMMENT:	Any files created with an NTFS Alternate Data Stream which match these rules will be hashed and logged.
			[ https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/ ]
			ADS's are used by browsers and email clients to mark files as originating from the Internet or other foreign sources.
			[ https://textslashplain.com/2016/04/04/downloads-and-the-mark-of-the-web/ ] -->
		<!--NOTE: Other filesystem minifilters can make it appear to Sysmon that some files are being written twice. This is not a Sysmon issue, per Mark Russinovich.-->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, Hash-->
		<FileCreateStreamHash onmatch="include">
			<TargetFilename condition="contains">Downloads</TargetFilename> <!--Downloaded files. Does not include "Run" files in IE-->
			<TargetFilename condition="contains">Temp\7z</TargetFilename> <!--7zip extractions-->
			<TargetFilename condition="contains">Startup</TargetFilename> <!--ADS startup | Example: [ https://www.hybrid-analysis.com/sample/a314f6106633fba4b70f9d6ddbee452e8f8f44a72117749c21243dc93c7ed3ac?environmentId=100 ] -->
			<TargetFilename condition="end with">.bat</TargetFilename> <!--Batch scripting-->
			<TargetFilename condition="end with">.cmd</TargetFilename> <!--Batch scripting | Credit @ion-storm -->
			<TargetFilename condition="end with">.doc</TargetFilename> <!--Office doc potentially with macro -->
			<TargetFilename condition="end with">.hta</TargetFilename> <!--Scripting-->
			<TargetFilename condition="end with">.jse</TargetFilename> <!--Registry File-->
			<TargetFilename condition="end with">.lnk</TargetFilename> <!--Shortcut file | Credit @ion-storm -->
			<TargetFilename condition="end with">.ppt</TargetFilename> <!--Office doc potentially with macros-->
			<TargetFilename condition="end with">.ps1</TargetFilename> <!--PowerShell-->
			<TargetFilename condition="end with">.ps2</TargetFilename> <!--PowerShell-->
			<TargetFilename condition="end with">.reg</TargetFilename> <!--Registry File-->
			<TargetFilename condition="end with">.sct</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">.vb</TargetFilename> <!--VisualBasicScripting files-->
			<TargetFilename condition="end with">.vbe</TargetFilename> <!--VisualBasicScripting files-->
			<TargetFilename condition="end with">.vbs</TargetFilename> <!--VisualBasicScripting files-->
			<TargetFilename condition="end with">.wsc</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">.wsf</TargetFilename> <!--Scripting | Credit @bartblaze -->
			<TargetFilename condition="end with">:Zone.Identifier</TargetFilename> <!-- Track Zone.Identifiers regardless of their download location -->
			<TargetFilename condition="end with">:newads</TargetFilename> <!-- CobaltStrike BOF https://github.com/EspressoCake/Self_Deletion_BOF/blob/main/src/main.c -->

		</FileCreateStreamHash>

	<RuleGroup name="" groupRelation="or">
		<FileCreateStreamHash onmatch="exclude">
		</FileCreateStreamHash>
	</RuleGroup>

	<!--SYSMON EVENT ID 16 : SYSMON CONFIGURATION CHANGE-->
		<!--EVENT 16: "Sysmon config state changed"-->
		<!--COMMENT:	This ONLY logs if the hash of the configuration changes. Running "sysmon.exe -c" with the current configuration will not be logged with Event 16-->

		<!--DATA: UtcTime, Configuration, ConfigurationFileHash-->
		<!--Cannot be filtered.-->

	<!--SYSMON EVENT ID 17 & 18 : PIPE CREATED / PIPE CONNECTED [PipeEvent]-->
		<!--EVENT 17: "Pipe Created"-->
		<!--EVENT 18: "Pipe Connected"-->

		<!--ADDITIONAL REFERENCE: [ https://www.cobaltstrike.com/help-smb-beacon ] -->
		<!--ADDITIONAL REFERENCE: [ https://blog.cobaltstrike.com/2015/10/07/named-pipe-pivoting/ ] -->

		<!--DATA: UtcTime, ProcessGuid, ProcessId, PipeName, Image-->
		<RuleGroup name="" groupRelation="or">
			<PipeEvent onmatch="include">
				<!-- Remote Command Execution Tools -->
				<PipeName condition="contains any">paexec;remcom;csexec</PipeName>
				<!-- Password or Credential Dumpers -->
				<PipeName condition="contains any">\lsadump;\cachedump;\wceservicepipe</PipeName>
				<!-- Malware -->
				<PipeName condition="contains any">\isapi_http;\isapi_dg;\isapi_dg2;\sdlrpc;\ahexec;\winsession;\lsassw;\46a676ab7f179e511e30dd2dc41bd388;\9f81f59bc58452127884ce513865ed20;\e710f28d59aa529d6792ca6ff0ca1b34;\rpchlp_3;\NamePipe_MoreWindows;\pcheap_reuse;\gruntsvc;\583da945-62af-10e8-4902-a8f205c72b2e;\bizkaz;\svcctl;\Posh;\jaccdpqnvbrrxlaf;\csexecsvc</PipeName>
				<PipeName condition="contains any">\atctl;\userpipe;\iehelper;\sdlrpc;\comnap</PipeName>
				<PipeName condition="contains">\pipe\</PipeName> <!-- EfsPotato https://twitter.com/SBousseaden/status/1429530155291193354?s=20 -->
				<!-- Cobalt Strike Pipe Names -->
				<PipeName condition="contains all">MSSE-;-server</PipeName>
				<PipeName condition="begin with">\postex_</PipeName>
				<PipeName condition="begin with">\postex_ssh_</PipeName>
				<PipeName condition="begin with">\status_</PipeName>
				<PipeName condition="begin with">\msagent_</PipeName>
				<!-- more named pipe names https://redcanary.com/threat-detection-report/threats/cobalt-strike/ -->
				<PipeName condition="begin with">\mojo_</PipeName>
				<PipeName condition="begin with">\interprocess_</PipeName>
				<PipeName condition="begin with">\samr_</PipeName>
				<PipeName condition="begin with">\netlogon_</PipeName>
				<PipeName condition="begin with">\srvsvc_</PipeName>
				<PipeName condition="begin with">\lsarpc_</PipeName>
				<PipeName condition="begin with">\wkssvc_</PipeName>
				<!-- Havoc C2 default -->
				<PipeName condition="begin with">\demon_pipe</PipeName>
				<!-- Malleable C2 profiles https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575 -->
				<!-- some of these are not exact matches, but the corresponding Sigma rules use Regexp to match exactly -->
				<PipeName condition="begin with">\mojo.5688.8052.183894939787088877</PipeName>
				<PipeName condition="begin with">\mojo.5688.8052.35780273329370473</PipeName>
				<PipeName condition="begin with">\DserNamePipe</PipeName>
				<PipeName condition="begin with">\mypipe-f</PipeName>
				<PipeName condition="begin with">\mypipe-h</PipeName>
				<PipeName condition="begin with">\windows.update.manager</PipeName>
				<PipeName condition="begin with">\ntsvcs_</PipeName>
				<PipeName condition="begin with">\scerpc_</PipeName>
				<!-- Malleable C2 profiles https://gist.github.com/MHaggis/6c600e524045a6d49c35291a21e10752 -->
				<PipeName condition="begin with">\demoagent_</PipeName>
				<PipeName condition="begin with">\PGMessagePipe</PipeName>
				<PipeName condition="begin with">\MsFteWds</PipeName>
				<PipeName condition="begin with">\f4c3</PipeName>
				<PipeName condition="begin with">\fullduplex_</PipeName>
				<PipeName condition="begin with">\msrpc_</PipeName>
				<PipeName condition="begin with">\win\msrpc_</PipeName>
				<PipeName condition="begin with">\f53f</PipeName>
				<PipeName condition="begin with">\rpc_</PipeName>
				<PipeName condition="begin with">\spoolss_</PipeName>
				<PipeName condition="begin with">\win_svc</PipeName>
				<PipeName condition="begin with">\SearchTextHarvester</PipeName>
				<PipeName condition="begin with">\adschemerpc</PipeName> <!-- Turla HyperStack - https://www.accenture.com/us-en/blogs/cyber-defense/turla-belugasturgeon-compromises-government-entity -->
				<PipeName condition="begin with">\AnonymousPipe</PipeName> <!-- Hidden Cobra Hoplight - https://us-cert.cisa.gov/ncas/analysis-reports/ar19-304a -->
				<PipeName condition="begin with">\bc367</PipeName> <!-- Pacifier - https://download.bitdefender.com/resources/files/News/CaseStudies/study/115/Bitdefender-Whitepaper-PAC-A4-en-EN1.pdf -->
				<PipeName condition="begin with">\bc31a7</PipeName> <!-- Pacifier - https://download.bitdefender.com/resources/files/News/CaseStudies/study/115/Bitdefender-Whitepaper-PAC-A4-en-EN1.pdf -->
				<PipeName condition="begin with">\testPipe</PipeName> <!-- Emissary Panda Hyerbri - https://unit42.paloaltonetworks.com/emissary-panda-attacks-middle-east-government-sharepoint-servers/ -->
				<!-- these are standard pipes that appear frequently but the Sigma rules use RE to match on malicious pipes that use the common names as a prefix -->
				<PipeName condition="begin with">\scerpc</PipeName>
				<PipeName condition="begin with">\ntsvcs</PipeName>
				<PipeName condition="begin with">\wkssvc</PipeName>
				<!-- Other specific named pipes -->
				<PipeName condition="contains">6e7645c4-32c5-4fe3-aabf-e94c2f4370e7</PipeName> <!-- LiquidSnake hacktool https://github.com/RiccardoAncarani/LiquidSnake -->
				<Image condition="end with">\scrcons.exe</Image> <!-- Susupicious WMI Event Consumer creating a named pipe -->
				<Rule groupRelation="and"> <!-- Some interesting ConnectPipe events that we want to include -->
					<EventType condition="is">ConnectPipe</EventType>
					<PipeName condition="is">\MICROSOFT##WID\tsql\query</PipeName> <!-- https://github.com/SigmaHQ/sigma/pull/2128 -->
				</Rule>
			</PipeEvent>
		</RuleGroup>
		<!-- Common Pipe Names to would appear very often in -->
		<RuleGroup name="CommonPipes" groupRelation="or">
			<PipeEvent onmatch="exclude">
				<!-- the standard named pipes used by Windows services (we want only the ones that begin with these names) -->
				<PipeName condition="is">\scerpc</PipeName>
				<PipeName condition="is">\ntsvcs</PipeName>
				<PipeName condition="is">\wkssvc</PipeName>
			</PipeEvent>
		</RuleGroup>

	<!--SYSMON EVENT ID 19 & 20 & 21 : WMI EVENT MONITORING [WmiEvent]-->
		<!--EVENT 19: "WmiEventFilter activity detected"-->
		<!--EVENT 20: "WmiEventConsumer activity detected"-->
		<!--EVENT 21: "WmiEventConsumerToFilter activity detected"-->

		<!--ADDITIONAL REFERENCE: [ https://www.darkoperator.com/blog/2017/10/15/sysinternals-sysmon-610-tracking-of-permanent-wmi-events ] -->
		<!--ADDITIONAL REFERENCE: [ https://rawsec.lu/blog/posts/2017/Sep/19/sysmon-v610-vs-wmi-persistence/ ] -->

		<!--DATA: EventType, UtcTime, Operation, User, Name, Type, Destination, Consumer, Filter-->
	<RuleGroup name="" groupRelation="or">
		<WmiEvent onmatch="exclude">
			<!--NOTE: Using exclude with no rules means everything will be logged-->
		</WmiEvent>
	</RuleGroup>

	<!--SYSMON EVENT ID 22 : DNS QUERY [DnsQuery]-->
		<!--EVENT 22: "Dns query"-->

		<!--NOTE:	Due to the volume of events that DNS queries generate, some orgs may want to remove this section from their configuration to reduce Sysmon log turnover. -->

		<!--COMMENT:	DNS logging is a very nuanced challenge in monitoring due to event volume. Legitimate domains can be used to host malware/C2, but lookup itself is not very informative.
						It's fine to exclude monitoring these bulk low-value lookups, but at same time, you would not have a full log of how malware communicated, potentially missing C2.
						This section of Sysmon configuration will require your full judgement and knowledge of your org's priorities. There is no correct answer.-->

		<!--OPERATIONS:	Chrome and Firefox prefetch DNS lookups, or use alternate DNS lookup methods Sysmon won't capture. You need to turn these off.
						Search for Group Policy for these browsers to configure this.-->

		<!--OPERATIONS:	Most DNS traffic is web advertising. To significantly reduce DNS queries and malware ads, enable client-side advertising filtering via Group Policy. This is easy.
				Internet Explorer: https://decentsecurity.com/adblocking-for-internet-explorer-deployment/
				Chrome: https://support.google.com/chrome/a/answer/187202?hl=en#zippy=%2Cwindows
					https://decentsecurity.com/ublockorigin-deployment-enterprise/
				Firefox: https://github.com/mozilla/policy-templates/blob/master/windows/en-US/firefox.adml
				Also note, this configuration is designed for United States computers. Your country's users will may need customization to reduce noise.
			-->

		<!--CONFIG:	DNS poisoning is an issue during threat investigations. Try to only exclude ROUTINE system-level queries you know are strongly validated with HTTPS or code signing.-->
		<!--CONFIG:	If you exclude microsoft.com, someone could register malware-microsoft.com and it wouldn't be logged. Use "END WITH" with leading . or "IS" operators.-->
		<!--CONFIG:	Be very specific in exclusions. Threat actors use legitimate services, too. Dont exclude all of AWS or Azure or Google or CDNs!-->
		<!--CONFIG: Popularity data: [ http://s3-us-west-1.amazonaws.com/umbrella-static/index.html ] [ https://better.fyi/trackers/alexa-top-500-news/ ] -->

		<!--CRITICAL:	Do NOT exclude "wpad" lookups. This is a MitM vector routinely used by attackers. Disable WPAD or enforce client-side DNSSEC for AD domain lookups.-->
		<!--CRITICAL:	Do NOT exclude IPv6 lookups.-->

		<!--DATA: RuleName, UtcTime, ProcessGuid, ProcessId, QueryName, QueryType, QueryStatus, QueryResults (can't filter on)-->

		<!--BELOW: These domains should not be excluded at the top level. Be specific if you want to reduce noise under them.-->
		<!-- Rejected: .cloudapp.net, customer content [ https://blogs.technet.microsoft.com/ptsblog/2012/06/18/security-consideration-when-using-cloudapp-net-domain-as-production-environment-in-windows-azure/ ] -->
		<!-- Rejected: .googleapis.com, customer content [ https://www.zdnet.com/article/this-business-email-scam-spreads-trojans-through-google-cloud-storage/ ] -->
		<!-- Rejected: .cloudfront.net, customer content -->
		<!-- Rejected: .windows.net, customer content -->
		<!-- Rejected: *github.com, customer content, including open-source malware components -->

	<RuleGroup name="" groupRelation="or">
		<DnsQuery onmatch="exclude">
			<!--Network noise-->
			<QueryName condition="end with">.arpa.</QueryName> <!--Design decision to not log reverse DNS lookups. You will need to decide.-->
			<QueryName condition="end with">.arpa</QueryName> <!--Design decision to not log reverse DNS lookups. You will need to decide.-->
			<QueryName condition="end with">.msftncsi.com</QueryName> <!--Microsoft proxy detection | Microsoft default exclusion-->
			<QueryName condition="is">..localmachine</QueryName>
			<QueryName condition="is">localhost</QueryName>
			<!--Microsoft-->
			<QueryName condition="end with">-pushp.svc.ms</QueryName> <!--Microsoft: Doesn't appear to host customer content or subdomains-->
			<QueryName condition="end with">.a-msedge.net</QueryName> <!--Microsoft: Doesn't appear to host customer content or subdomains-->
			<QueryName condition="end with">.b-msedge.net</QueryName> <!--Microsoft: Doesn't appear to host customer content or subdomains-->
			<QueryName condition="end with">.bing.com</QueryName> <!-- Microsoft | Microsoft default exclusion -->
			<QueryName condition="end with">.hotmail.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.live.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.live.net</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.s-microsoft.com</QueryName> <!--Microsoft-->
			<QueryName condition="end with">.microsoft.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.microsoftonline.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.microsoftstore.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.ms-acdc.office.com</QueryName> <!--Microsoft: Doesn't appear to host customer content or subdomains-->
			<QueryName condition="end with">.msedge.net</QueryName> <!--Microsoft: Doesn't appear to host customer content or subdomains-->
			<QueryName condition="end with">.msn.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.msocdn.com</QueryName> <!--Microsoft-->
			<QueryName condition="end with">.msftncsi.com</QueryName> <!--Microsoft: Network Connectivity Indicator-->
			<QueryName condition="end with">.skype.com</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.skype.net</QueryName> <!--Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.windows.com</QueryName> <!--Microsoft-->
			<QueryName condition="end with">.windows.net.nsatc.net</QueryName> <!--Microsoft-->
			<QueryName condition="end with">.windowsupdate.com</QueryName> <!--Microsoft-->
			<QueryName condition="end with">.xboxlive.com</QueryName> <!--Microsoft-->
			<QueryName condition="is">login.windows.net</QueryName> <!--Microsoft-->
			<Image condition="begin with">C:\ProgramData\Microsoft\Windows Defender\Platform\</Image> <!--Microsoft: https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/network-protection -->
			<!--Microsoft:Office365/AzureAD-->
			<QueryName condition="end with">.activedirectory.windowsazure.com</QueryName> <!--Microsoft: AzureAD-->
			<QueryName condition="end with">.aria.microsoft.com</QueryName> <!--Microsoft: OneDrive/SharePoint-->
			<QueryName condition="end with">.msauth.net</QueryName>
			<QueryName condition="end with">.msftauth.net</QueryName>
			<QueryName condition="end with">.office.net</QueryName> <!--Microsoft: Office-->
			<QueryName condition="end with">.opinsights.azure.com</QueryName> <!--Microsoft: AzureAD/InTune client event monitoring-->
			<QueryName condition="end with">.res.office365.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">acdc-direct.office.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">atm-fp-direct.office.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">loki.delve.office.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">management.azure.com</QueryName> <!--Microsoft: AzureAD/InTune-->
			<QueryName condition="is">messaging.office.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">outlook.office365.com</QueryName> <!--Microsoft: Protected by HSTS-->
			<QueryName condition="is">portal.azure.com</QueryName> <!--Microsoft: AzureAD/InTune-->
			<QueryName condition="is">protection.outlook.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="is">substrate.office.com</QueryName> <!--Microsoft: Office-->
			<QueryName condition="end with">.measure.office.com</QueryName> <!--Microsoft: Office-->
			<!--3rd-party applications-->
			<QueryName condition="end with">.adobe.com</QueryName> <!--Adobe-->
			<QueryName condition="end with">.adobe.io</QueryName> <!--Adobe-->
			<QueryName condition="end with">.mozaws.net</QueryName> <!--Mozilla-->
			<QueryName condition="end with">.mozilla.com</QueryName> <!--Mozilla-->
			<QueryName condition="end with">.mozilla.net</QueryName> <!--Mozilla-->
			<QueryName condition="end with">.mozilla.org</QueryName> <!--Mozilla-->
			<QueryName condition="end with">.spotify.com</QueryName> <!--Spotify-->
			<QueryName condition="end with">.spotify.map.fastly.net</QueryName> <!--Spotify-->
			<QueryName condition="end with">.wbx2.com</QueryName> <!--Webex-->
			<QueryName condition="end with">.webex.com</QueryName> <!--Webex-->
			<QueryName condition="is">clients1.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clients2.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clients3.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clients4.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clients5.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clients6.google.com</QueryName> <!--Google-->
			<QueryName condition="is">safebrowsing.googleapis.com</QueryName> <!--Google-->
			<!--Goodlist CDN-->
			<QueryName condition="end with">.akadns.net</QueryName> <!--AkamaiCDN, extensively used by Microsoft | Microsoft default exclusion-->
			<QueryName condition="end with">.netflix.com</QueryName>
			<QueryName condition="is">aspnetcdn.com</QueryName> <!--Microsoft [ https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview ]-->
			<QueryName condition="end with">.aspnetcdn.com</QueryName> <!--Microsoft [ https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview ]-->
			<QueryName condition="is">ajax.googleapis.com</QueryName>
			<QueryName condition="is">cdnjs.cloudflare.com</QueryName> <!--Cloudflare: Hosts popular javascript libraries-->
			<QueryName condition="is">fonts.googleapis.com</QueryName> <!--Google fonts-->
			<QueryName condition="end with">.typekit.net</QueryName> <!--Adobe fonts-->
			<QueryName condition="end with">.stackassets.com</QueryName> <!--Stack Overflow-->
			<QueryName condition="end with">.steamcontent.com</QueryName>
			<QueryName condition="is">play.google.com</QueryName>
			<QueryName condition="is">content-autofill.googleapis.com</QueryName>
			<!--Web resources-->
			<QueryName condition="end with">.disqus.com</QueryName> <!--Microsoft default exclusion-->
			<QueryName condition="end with">.fontawesome.com</QueryName>
			<QueryName condition="is">disqus.com</QueryName> <!--Microsoft default exclusion-->
			<!--Ads-->
			<QueryName condition="end with">.1rx.io</QueryName> <!--Ads-->
			<QueryName condition="end with">.2mdn.net</QueryName> <!--Ads: Google | Microsoft default exclusion-->
			<QueryName condition="end with">.3lift.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.adadvisor.net</QueryName> <!--Ads: Neustar [ https://better.fyi/trackers/adadvisor.net/ ] -->
			<QueryName condition="end with">.adap.tv</QueryName> <!--Ads:AOL | Microsoft default exclusion [ https://www.crunchbase.com/organization/adap-tv ] -->
			<QueryName condition="end with">.addthis.com</QueryName> <!--Ads:Oracle | Microsoft default exclusion [ https://en.wikipedia.org/wiki/AddThis ] -->
			<QueryName condition="end with">.adform.net</QueryName> <!--Ads-->
			<QueryName condition="end with">.adnxs.com</QueryName> <!--Ads: AppNexus | Microsoft default exclusion-->
			<QueryName condition="end with">.adroll.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.adrta.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.adsafeprotected.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.adsrvr.org</QueryName> <!--Ads-->
			<QueryName condition="end with">.adsymptotic.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.advertising.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.agkn.com</QueryName> <!--Ads | [ https://www.home.neustar/privacy ] -->
			<QueryName condition="end with">.amazon-adsystem.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.analytics.yahoo.com</QueryName> <!--Ads:Yahoo-->
			<QueryName condition="end with">.aol.com</QueryName> <!--Ads | Microsoft default exclusion -->
			<QueryName condition="end with">.betrad.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.bidswitch.net</QueryName> <!--Ads-->
			<QueryName condition="end with">.casalemedia.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.chartbeat.net</QueryName> <!--Ads | Microsoft default exclusion [ https://better.fyi/trackers/chartbeat.com/ ]-->
			<QueryName condition="end with">.cnn.com</QueryName> <!-- Microsoft default exclusion-->
			<QueryName condition="end with">.convertro.com</QueryName> <!--Ads:Verizon-->
			<QueryName condition="end with">.criteo.com</QueryName> <!--Ads [ https://better.fyi/trackers/criteo.com/ ] -->
			<QueryName condition="end with">.criteo.net</QueryName> <!--Ads [ https://better.fyi/trackers/criteo.com/ ] -->
			<QueryName condition="end with">.crwdcntrl.net</QueryName> <!--Ads: Lotame [ https://better.fyi/trackers/crwdcntrl.net/ ] -->
			<QueryName condition="end with">.demdex.net</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.domdex.com</QueryName>
			<QueryName condition="end with">.dotomi.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.doubleclick.net</QueryName> <!--Ads:Conversant | Microsoft default exclusion [ https://www.crunchbase.com/organization/dotomi ] -->
			<QueryName condition="end with">.doubleverify.com</QueryName> <!--Ads: Google-->
			<QueryName condition="end with">.emxdgt.com</QueryName> <!--Ads: EMX-->
			<QueryName condition="end with">.everesttech.net</QueryName> <!--Ads | [ https://better.fyi/trackers/everesttech.net/ ] -->
			<QueryName condition="end with">.exelator.com</QueryName> <!--Ads:Nielson Marketing Cloud-->
			<QueryName condition="end with">.google-analytics.com</QueryName> <!--Ads:Google | Microsoft default exclusion-->
			<QueryName condition="end with">.googleadservices.com</QueryName> <!--Google-->
			<QueryName condition="end with">.googlesyndication.com</QueryName> <!--Ads:Google, sometimes called during malicious ads, but not directly responsible | Microsoft default exclusion [ https://www.hackread.com/wp-content/uploads/2018/06/Bitdefender-Whitepaper-Zacinlo.pdf ]-->
			<QueryName condition="end with">.googletagmanager.com</QueryName> <!--Google-->
			<QueryName condition="end with">.googlevideo.com</QueryName> <!--Google | Microsoft default exclusion-->
			<QueryName condition="end with">.gstatic.com</QueryName> <!--Google | Microsoft default exclusion-->
			<QueryName condition="end with">.gvt1.com</QueryName> <!--Google-->
			<QueryName condition="end with">.gvt2.com</QueryName> <!--Google-->
			<QueryName condition="end with">.ib-ibi.com</QueryName> <!--Ads: Offerpath [ https://better.fyi/trackers/ib-ibi.com/ ] -->
			<QueryName condition="end with">.jivox.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.krxd.net</QueryName> <!--Ads-->
			<QueryName condition="end with">.lijit.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.mathtag.com</QueryName> <!--Microsoft default exclusion-->
			<QueryName condition="end with">.moatads.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.moatpixel.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.mookie1.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.myvisualiq.net</QueryName> <!--Ads-->
			<QueryName condition="end with">.netmng.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.nexac.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.openx.net</QueryName> <!--Ads-->
			<QueryName condition="end with">.optimizely.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.outbrain.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.pardot.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.phx.gbl</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.pinterest.com</QueryName> <!--Pinerest-->
			<QueryName condition="end with">.pubmatic.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.quantcount.com</QueryName>
			<QueryName condition="end with">.quantserve.com</QueryName>
			<QueryName condition="end with">.revsci.net</QueryName> <!--Ads:Omniture | Microsoft default exclusion-->
			<QueryName condition="end with">.rfihub.net</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.rlcdn.com</QueryName> <!--Ads: Rapleaf [ https://better.fyi/trackers/rlcdn.com/ ] -->
			<QueryName condition="end with">.rubiconproject.com</QueryName> <!--Ads: Rubicon Project | Microsoft default exclusion [ https://better.fyi/trackers/rubiconproject.com/ ] -->
			<QueryName condition="end with">.scdn.co</QueryName> <!--Spotify-->
			<QueryName condition="end with">.scorecardresearch.com</QueryName> <!--Ads: Comscore | Microsoft default exclusion-->
			<QueryName condition="end with">.serving-sys.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.sharethrough.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.simpli.fi</QueryName>
			<QueryName condition="end with">.sitescout.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.smartadserver.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.snapads.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.spotxchange.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.taboola.com</QueryName> <!--Ads:Taboola-->
			<QueryName condition="end with">.taboola.map.fastly.net</QueryName> <!--Ads:Taboola-->
			<QueryName condition="end with">.tapad.com</QueryName>
			<QueryName condition="end with">.tidaltv.com</QueryName> <!--Ads: Videology [ https://better.fyi/trackers/tidaltv.com/ ] -->
			<QueryName condition="end with">.trafficmanager.net</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.tremorhub.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.tribalfusion.com</QueryName> <!--Ads: Exponential [ https://better.fyi/trackers/tribalfusion.com/ ] -->
			<QueryName condition="end with">.turn.com</QueryName> <!--Ads | Microsoft default exclusion [ https://better.fyi/trackers/turn.com/ ] -->
			<QueryName condition="end with">.twimg.com</QueryName> <!--Ads | Microsoft default exclusion-->
			<QueryName condition="end with">.tynt.com</QueryName> <!--Ads-->
			<QueryName condition="end with">.w55c.net</QueryName> <!--Ads:dataxu-->
			<QueryName condition="end with">.ytimg.com</QueryName> <!--Google-->
			<QueryName condition="end with">.zorosrv.com</QueryName> <!--Ads:Taboola-->
			<QueryName condition="is">1rx.io</QueryName> <!--Ads-->
			<QueryName condition="is">adservice.google.com</QueryName> <!--Google-->
			<QueryName condition="is">ampcid.google.com</QueryName> <!--Google-->
			<QueryName condition="is">clientservices.googleapis.com</QueryName> <!--Google-->
			<QueryName condition="is">googleadapis.l.google.com</QueryName> <!--Google-->
			<QueryName condition="is">imasdk.googleapis.com</QueryName> <!--Google [ https://developers.google.com/interactive-media-ads/docs/sdks/html5/ ] -->
			<QueryName condition="is">l.google.com</QueryName> <!--Google-->
			<QueryName condition="is">ml314.com</QueryName> <!--Ads-->
			<QueryName condition="is">mtalk.google.com</QueryName> <!--Google-->
			<QueryName condition="is">update.googleapis.com</QueryName> <!--Google-->
			<QueryName condition="is">www.googletagservices.com</QueryName> <!--Google-->
			<!--SocialNet-->
			<QueryName condition="end with">.pscp.tv</QueryName> <!--Twitter:Periscope-->
			<!--OSCP/CRL Common-->
			<QueryName condition="end with">.digicert.com</QueryName>
			<QueryName condition="end with">.globalsign.com</QueryName>
			<QueryName condition="end with">.globalsign.net</QueryName>
			<QueryName condition="end with">.intel.com</QueryName>
			<QueryName condition="end with">.symcb.com</QueryName> <!--Digicert-->
			<QueryName condition="end with">.symcd.com</QueryName> <!--Digicert-->
			<QueryName condition="end with">.thawte.com</QueryName>
			<QueryName condition="end with">.usertrust.com</QueryName>
			<QueryName condition="end with">.verisign.com</QueryName>
			<QueryName condition="end with">ocsp.identrust.com</QueryName>
			<QueryName condition="end with">pki.goog</QueryName>
			<QueryName condition="is">msocsp.com</QueryName> <!--Microsoft:OCSP-->
			<QueryName condition="is">ocsp.comodoca.com</QueryName>
			<QueryName condition="is">ocsp.entrust.net</QueryName>
			<QueryName condition="is">ocsp.godaddy.com</QueryName>
			<QueryName condition="is">ocsp.int-x3.letsencrypt.org</QueryName>
			<QueryName condition="is">ocsp.msocsp.com</QueryName> <!--Microsoft:OCSP-->
			<QueryName condition="is">pki.goog</QueryName>
			<QueryName condition="end with">.pki.goog</QueryName>
			<QueryName condition="is">amazontrust.com</QueryName>
			<QueryName condition="end with">.amazontrust.com</QueryName>
			<QueryName condition="is">ocsp.sectigo.com</QueryName>
			<QueryName condition="is">pki-goog.l.google.com</QueryName>
			<QueryName condition="is">ocsp.verisign.com</QueryName>
			<QueryName condition="is">ocsp.identrust.com</QueryName>
			<QueryName condition="end with">.ocsp.identrust.com</QueryName>
			<QueryName condition="is">status.rapidssl.com</QueryName>
			<QueryName condition="is">status.thawte.com</QueryName>
			<!-- SECTION: PRTG -->
			<Image condition="is">C:\Program Files (x86)\PRTG Network Monitor\PRTG Probe.exe</Image>
		</DnsQuery>
	</RuleGroup>

	<!--SYSMON EVENT ID 23 : FILE DELETE [FileDelete]-->
		<!--EVENT 23: "File Delete"-->
		<!--COMMENT:	Sandbox usage. When a program signals to Windows a file should be deleted or wiped, Sysmon may be able to capture it.
			Tries to save a copy of the deleted file in the archivedirectory which defaults to C:\Sysmon (to view uncheck "Hide protected
			operating system files (Recommended)" from Folder Options). Can quickly fill the available drive space with copies of files.
			Use EVENT ID 26 if a copy is not needed.
			[ https://isc.sans.edu/forums/diary/Sysmon+and+File+Deletion/26084/ ]
		-->

		<!--DATA: RuleName, UtcTime, ProcessGuid, ProcessId, User, Image, TargetFilename, Hashes, IsExecutable, Archived -->

	<!--
	<RuleGroup name="" groupRelation="or">
		<FileDelete onmatch="include">
		</FileDelete>
	</RuleGroup>
	-->

	<!--SYSMON EVENT ID 24 : CLIPBOARD EVENT MONITORING [ClipboardChange]-->
		<!--EVENT 24: "Clipboard changed"-->
		<!--COMMENT:	Sandbox usage. Sysmon can capture the contents of clipboard events.
			An example of what could be a production usage on restricted desktops is provided below, but it is commented-out. -->

		<!--DATA: EventType, UtcTime, ProcessGuid, ProcessId, Image, Session, ClientInfo, Hashes, Archived -->

	<!--
	<RuleGroup name="" groupRelation="or">
		<ClipboardChange onmatch="include">
			<Image condition="end with">wscript.exe</Image>
			<Image condition="end with">cscript.exe</Image>
			<Image condition="end with">powershell.exe</Image>
			<Image condition="end with">rdpclip.exe</Image>
		</ClipboardChange>
	</RuleGroup>
	-->

	<!--SYSMON EVENT ID 25 : PROCESS TAMPERING [ProcessTampering]-->
		<!--EVENT 25: "Process Tampering"-->
		<!--COMMENT:	This event is generated when a process image is changed from an external source, such as a different process.
			This may or may not provide value in your environment as it requires tuning and a SIEM to correlate the ProcessGuids.
			[ https://medium.com/falconforce/sysmon-13-process-tampering-detection-820366138a6c ] -->

		<!--DATA: EventType, RuleName, UtcTime, ProcessGuid, ProcessId, Image, Type -->

	<!--
	<RuleGroup name="" groupRelation="or">
		<ProcessTampering onmatch="exclude">
			<Image condition="begin with">C:\Program Files (x86)\Microsoft\Edge\Application\</Image>
		</ProcessTampering>
	</RuleGroup>
	-->

	<!--SYSMON EVENT ID 26 : FILE DELETE LOGGED [FileDeleteDetected]-->
		<!--EVENT 26: "File Delete logged"-->
		<!--COMMENT:	This event is generated when a program signals to Windows a file should be deleted or wiped, Sysmon may be able to capture it.
			Unlike event ID 23 it does not archive a copy of the file deleted allowing for more widespread use outside of a sandbox or IR triage without
			risk of filling up the storage space with deleted archives.
			[ https://medium.com/falconforce/sysmon-13-10-filedeletedetected-fe2475cb419e ]
		-->

		<!--DATA: RuleName, UtcTime, ProcessGuid, ProcessId, User, Image, TargetFilename, Hashes, IsExecutable -->

	<!--SYSMON EVENT ID 255 : ERROR-->
		<!--"This event is generated when an error occurred within Sysmon. They can happen if the system is under heavy load
			and certain tasked could not be performed or a bug exists in the Sysmon service. You can report any bugs on the
			Sysinternals forum or over Twitter (@markrussinovich)."-->
		<!--Cannot be filtered.-->


	<!--SYSMON EVENT ID 27 : FILE BLOCK [FileBlockExecutable]-->
		<!--EVENT 27: "File Block Executable"-->
		<!--COMMENT:	This event is generated when an executable gets blocked
			[ https://medium.com/@olafhartong/sysmon-14-0-fileblockexecutable-13d7ba3dff3e ]
		-->

	<RuleGroup name="ImageBlock" groupRelation="or">
		<FileBlockExecutable onmatch="include">
			<!-- Executables dropped to suspicious folders -->
			<TargetFilename condition="begin with">C:\Users\Public\</TargetFilename> <!-- often used staging directories; could cause false positives --> 
			<TargetFilename condition="begin with">C:\Perflogs\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\Fonts\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\debug\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\Tasks\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\tracing\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\Help\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\Logs\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="begin with">C:\Windows\System32\spool\SERVERS\</TargetFilename> <!-- often used in exploits against print spooler --> 
			<TargetFilename condition="begin with">C:\Windows\System32\spool\PRINTERS\</TargetFilename> <!-- often used in exploits against print spooler --> 
			<TargetFilename condition="begin with">C:\Windows\Help\</TargetFilename> <!-- often used staging directories --> 
			<TargetFilename condition="contains all">C:\Users\;\Music\</TargetFilename> <!-- often used staging directories in User folders --> 
			<TargetFilename condition="contains all">C:\Users\;\Pictures\</TargetFilename> <!-- often used staging directories in User folders --> 
			<TargetFilename condition="contains all">C:\Users\;\Videos\</TargetFilename> <!-- often used staging directories in User folders --> 
			<TargetFilename condition="contains all">C:\Users\;\Contacts\</TargetFilename> <!-- often used staging directories in User folders --> 
			
			<!-- Executables double extensions -->
			<TargetFilename condition="end with">.pdf.exe</TargetFilename>
			<TargetFilename condition="end with">.doc.exe</TargetFilename>
			<TargetFilename condition="end with">.docx.exe</TargetFilename>
			<TargetFilename condition="end with">.xls.exe</TargetFilename>
			<TargetFilename condition="end with">.xlsx.exe</TargetFilename>
			<TargetFilename condition="end with">.xlsm.exe</TargetFilename>
			<TargetFilename condition="end with">.docm.exe</TargetFilename>
			<TargetFilename condition="end with">.ppt.exe</TargetFilename>
			<TargetFilename condition="end with">.pptx.exe</TargetFilename>
			<TargetFilename condition="end with">.txt.exe</TargetFilename>
			<TargetFilename condition="end with">.rtf.exe</TargetFilename>
			<TargetFilename condition="end with">.htm.exe</TargetFilename>
			<TargetFilename condition="end with">.html.exe</TargetFilename>
			<TargetFilename condition="end with">.iso.exe</TargetFilename>
			<TargetFilename condition="end with">.zip.exe</TargetFilename>
			<TargetFilename condition="end with">.rar.exe</TargetFilename>
			<TargetFilename condition="end with">.7z.exe</TargetFilename>

			<!-- Tools that tamper with Sysmon -->
			<TargetFilename condition="end with">\EntenLoader.exe</TargetFilename>
			<TargetFilename condition="end with">\SysmonQuiet.exe</TargetFilename>
			<TargetFilename condition="end with">\SharpEvtMute.exe</TargetFilename>
			<TargetFilename condition="end with">\EvtMuteHook.dll</TargetFilename>
			<TargetFilename condition="end with">\SysmonEOP.exe</TargetFilename>

			<!-- Hacktool Blocks based on Imphashes -->
			<Hashes condition="contains">IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932</Hashes> <!-- PetitPotam -->
			<Hashes condition="contains">IMPHASH=3A19059BD7688CB88E70005F18EFC439</Hashes> <!-- PetitPotam -->
			<Hashes condition="contains">IMPHASH=bf6223a49e45d99094406777eb6004ba</Hashes> <!-- PetitPotam -->
			<Hashes condition="contains">IMPHASH=0C106686A31BFE2BA931AE1CF6E9DBC6</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=0D1447D4B3259B3C2A1D4CFB7ECE13C3</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=1B0369A1E06271833F78FFA70FFB4EAF</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=4C1B52A19748428E51B14C278D0F58E3</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=4D927A711F77D62CEBD4F322CB57EC6F</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=66EE036DF5FC1004D9ED5E9A94A1086A</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=672B13F4A0B6F27D29065123FE882DFC</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=6BBD59CEA665C4AFCC2814C1327EC91F</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=725BB81DC24214F6ECACC0CFB36AD30D</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=9528A0E91E28FBB88AD433FEABCA2456</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=9DA6D5D77BE11712527DCAB86DF449A3</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=A6E01BC1AB89F8D91D9EAB72032AAE88</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=B24C5EDDAEA4FE50C6A96A2A133521E4</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=D21BBC50DCC169D7B4D0F01962793154</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=FCC251CCEAE90D22C392215CC9A2D5D6</Hashes> <!-- Mimikatz -->
			<Hashes condition="contains">IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1</Hashes> <!-- JuicyPotato  -->
			<Hashes condition="contains">IMPHASH=A37FF327F8D48E8A4D2F757E1B6E70BC</Hashes> <!-- JuicyPotato  -->
			<Hashes condition="contains">IMPHASH=F9A28C458284584A93B14216308D31BD</Hashes> <!-- JuicyPotatoNG -->
			<Hashes condition="contains">IMPHASH=6118619783FC175BC7EBECFF0769B46E</Hashes> <!-- RoguePotato -->
			<Hashes condition="contains">IMPHASH=959A83047E80AB68B368FDB3F4C6E4EA</Hashes> <!-- RoguePotato -->
			<Hashes condition="contains">IMPHASH=563233BFA169ACC7892451F71AD5850A</Hashes> <!-- RoguePotato -->
			<Hashes condition="contains">IMPHASH=87575CB7A0E0700EB37F2E3668671A08</Hashes> <!-- RoguePotato -->
			<Hashes condition="contains">IMPHASH=13F08707F759AF6003837A150A371BA1</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=1781F06048A7E58B323F0B9259BE798B</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=233F85F2D4BC9D6521A6CAAE11A1E7F5</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=24AF2584CBF4D60BBE5C6D1B31B3BE6D</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=632969DDF6DBF4E0F53424B75E4B91F2</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=713C29B396B907ED71A72482759ED757</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=8628B2608957A6B0C6330AC3DE28CE2E</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=8B114550386E31895DFAB371E741123D</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793</Hashes> <!-- PwDumpX -->
			<Hashes condition="contains">IMPHASH=9D68781980370E00E0BD939EE5E6C141</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=B18A1401FF8F444056D29450FBC0A6CE</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=CB567F9498452721D77A451374955F5F</Hashes> <!-- Pwdump -->
			<Hashes condition="contains">IMPHASH=730073214094CD328547BF1F72289752</Hashes> <!-- Htran -->
			<Hashes condition="contains">IMPHASH=17B461A082950FC6332228572138B80C</Hashes> <!-- Cobalt Strike beacons -->
			<Hashes condition="contains">IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9</Hashes> <!-- Cobalt Strike beacons -->
			<Hashes condition="contains">IMPHASH=819B19D53CA6736448F9325A85736792</Hashes> <!-- Cobalt Strike beacons -->
			<Hashes condition="contains">IMPHASH=829DA329CE140D873B4A8BDE2CBFAA7E</Hashes> <!-- Cobalt Strike beacons -->
			<Hashes condition="contains">IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74</Hashes> <!-- PPLDump -->
			<Hashes condition="contains">IMPHASH=0588081AB0E63BA785938467E1B10CCA</Hashes> <!-- PPLDump -->
			<Hashes condition="contains">IMPHASH=0D9EC08BAC6C07D9987DFD0F1506587C</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=BC129092B71C89B4D4C8CDF8EA590B29</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=4DA924CF622D039D58BCE71CDF05D242</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=E7A3A5C377E2D29324093377D7DB1C66</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=9A9DBEC5C62F0380B4FA5FD31DEFFEDF</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=AF8A3976AD71E5D5FDFB67DDB8DADFCE</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=0C477898BBF137BBD6F2A54E3B805FF4</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=0CA9F02B537BCEA20D4EA5EB1A9FE338</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=3AB3655E5A14D4EEFC547F4781BF7F9E</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=E6F9D5152DA699934B30DAAB206471F6</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=3AD59991CCF1D67339B319B15A41B35D</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=FFDD59E0318B85A3E480874D9796D872</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=0CF479628D7CC1EA25EC7998A92F5051</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=07A2D4DCBD6CB2C6A45E6B101F0B6D51</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=D6D0F80386E1380D05CB78E871BC72B1</Hashes> <!-- NanoDump -->
			<Hashes condition="contains">IMPHASH=38D9E015591BBFD4929E0D0F47FA0055</Hashes> <!-- HandleKatz -->
			<Hashes condition="contains">IMPHASH=0E2216679CA6E1094D63322E3412D650</Hashes> <!-- HandleKatz -->
			<Hashes condition="contains">IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB</Hashes> <!-- DripLoader -->
			<Hashes condition="contains">IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798</Hashes> <!-- DripLoader -->
			<Hashes condition="contains">IMPHASH=11083E75553BAAE21DC89CE8F9A195E4</Hashes> <!-- DripLoader -->
			<Hashes condition="contains">IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80</Hashes> <!-- DripLoader -->
			<Hashes condition="contains">IMPHASH=4A07F944A83E8A7C2525EFA35DD30E2F</Hashes> <!-- CreateMiniDump -->
			<Hashes condition="contains">IMPHASH=767637C23BB42CD5D7397CF58B0BE688</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=14C4E4C72BA075E9069EE67F39188AD8</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=7D010C6BB6A3726F327F7E239166D127</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=89159BA4DD04E4CE5559F132A9964EB3</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=5834ED4291BDEB928270428EBBAF7604</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=3DE09703C8E79ED2CA3F01074719906B</Hashes> <!-- UACMe Akagi -->
			<Hashes condition="contains">IMPHASH=A53A02B997935FD8EEDCB5F7ABAB9B9F</Hashes> <!-- WCE -->
			<Hashes condition="contains">IMPHASH=E96A73C7BF33A464C510EDE582318BF2</Hashes> <!-- WCE -->
			<Hashes condition="contains">IMPHASH=32089B8851BBF8BC2D014E9F37288C83</Hashes> <!-- Sliver Stagers -->
			<Hashes condition="contains">IMPHASH=09D278F9DE118EF09163C6140255C690</Hashes> <!-- Dumpert -->
			<Hashes condition="contains">IMPHASH=03866661686829d806989e2fc5a72606</Hashes> <!-- Dumpert -->
			<Hashes condition="contains">IMPHASH=e57401fbdadcd4571ff385ab82bd5d6d</Hashes> <!-- Dumpert -->
			<Hashes condition="contains">IMPHASH=84B763C45C0E4A3E7CA5548C710DB4EE</Hashes> <!-- SysmonEnte -->
			<Hashes condition="contains">IMPHASH=19584675D94829987952432E018D5056</Hashes> <!-- SysmonQuiet -->
			<Hashes condition="contains">IMPHASH=330768A4F172E10ACB6287B87289D83B</Hashes> <!-- ShaprEvtMute Hook -->
			<Hashes condition="contains">IMPHASH=885C99CCFBE77D1CBFCB9C4E7C1A3313</Hashes> <!-- Forkatz -->
			<Hashes condition="contains">IMPHASH=22A22BC9E4E0D2F189F1EA01748816AC</Hashes> <!-- PPLKiller -->
			<Hashes condition="contains">IMPHASH=7FA30E6BB7E8E8A69155636E50BF1B28</Hashes> <!-- PPLKiller -->
			<Hashes condition="contains">IMPHASH=96DF3A3731912449521F6F8D183279B1</Hashes> <!-- Backstab -->
			<Hashes condition="contains">IMPHASH=7E6CF3FF4576581271AC8A313B2AAB46</Hashes> <!-- Backstab -->
			<Hashes condition="contains">IMPHASH=51791678F351C03A0EB4E2A7B05C6E17</Hashes> <!-- Backstab -->
			<Hashes condition="contains">IMPHASH=25CE42B079282632708FC846129E98A5</Hashes> <!-- Forensia -->
			<Hashes condition="contains">IMPHASH=021BCCA20BA3381B11BDDE26B4E62F20</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=59223B5F52D8799D38E0754855CBDF42</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=81E75D8F1D276C156653D3D8813E4A43</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=17244E8B6B8227E57FE709CCAD421420</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=5B76DA3ACDEDC8A5CDF23A798B5936B4</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=CB2B65BB77D995CC1C0E5DF1C860133C</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=40445337761D80CF465136FAFB1F63E6</Hashes> <!-- EDRSandBlast -->
			<Hashes condition="contains">IMPHASH=8A790F401B29FA87BC1E56F7272B3AA6</Hashes> <!-- EDRSilencer -->
			<Hashes condition="contains">IMPHASH=B50199E952C875241B9CE06C971CE3C1</Hashes> <!-- EventLogCrasher -->
			<Hashes condition="contains">MD5=7B17F15713FCF13C764535AA2BDF52AA</Hashes>		<!-- ShaprEvtMute -->
			<Hashes condition="contains">SHA1=4E18320493042BCD7D21B53E258974BC460ACC78</Hashes>		<!-- ShaprEvtMute -->
			<Hashes condition="contains">SHA256=477DFE485F5BD9540CC83E88FC04AAFB6DE49CF1ADC6BD857D5D6F4C1730A6D1</Hashes>	<!-- ShaprEvtMute -->
			<Hashes condition="contains">IMPHASH=F0EA7B7844BBC5BFA9BB32EFDCEA957C</Hashes>	<!-- Sliver Implant -->
			<Hashes condition="contains">IMPHASH=9CBEFE68F395E67356E2A5D8D1B285C0</Hashes> 	<!-- Sliver Implant -->
			<Hashes condition="contains">IMPHASH=c7269d59926fa4252270f407e4dab043</Hashes> 	<!-- Sliver Implant -->
			
			<!-- Microsoft Office Programs Dropping Executables -->
			<Image condition="image">winword.exe</Image>
			<Image condition="image">excel.exe</Image>
			<Image condition="image">powerpnt.exe</Image>
			<Image condition="image">msaccess.exe</Image>
			<Image condition="image">mspub.exe</Image>
			<Image condition="image">eqnedt32.exe</Image>
			<Image condition="image">visio.exe</Image>
			<Image condition="image">wordpad.exe</Image>
			<Image condition="image">wordview.exe</Image>
			<Image condition="image">msohtmed.exe</Image>
			
			<!-- OneNote Application Dropping Executables -->
			<Image condition="image">onenote.exe</Image>
			<Image condition="image">onenotem.exe</Image>
			<Image condition="image">onenoteim.exe</Image>
			
			<!-- LOLBINs that can be used to download executables -->
			<Image condition="image">certutil.exe</Image>
			<Image condition="image">certoc.exe</Image>
			<Image condition="image">CertReq.exe</Image>
			<!-- <Image condition="image">bitsadmin.exe</Image> (depends on the environment; comment in if you're sure that bitsadmin doesn't do that in your env) -->
			<Image condition="image">Desktopimgdownldr.exe</Image>
			<Image condition="image">esentutl.exe</Image>
			<!-- <Image condition="image">expand.exe</Image> (depends on the environment; comment in if you're sure that expand doesn't do that in your env) -->
			<Image condition="image">finger.exe</Image>
			<Image condition="image">presentationhost.exe</Image>

			<!-- Executables that should never drop an executable to disk (but may after a previous process injection or if it's malware that uses a legitimate name)-->
			<Image condition="image">notepad.exe</Image>
			<Image condition="image">AcroRd32.exe</Image>
			<Image condition="image">RdrCEF.exe</Image> <!-- RdrCEF was seen dropping a DLL in temp (Example: \AppData\Local\Temp\acrocef_low\4616_1623006624_platform_specific\win_x86\widevinecdm.dll). Comment out this entry if you experience issues (https://github.com/Neo23x0/sysmon-config/issues/43) -->
			<Image condition="image">mshta.exe</Image>
			<Image condition="image">hh.exe</Image>
			<Image condition="image">calc.exe</Image>
			<Image condition="image">mspaint.exe</Image>
			
			<!--LOLDrivers - Living Off The Land Drivers --> 
			<!--https://https://github.com/magicsword-io/LOLDrivers/blob/main/detections/sysmon/sysmon_config_malicious_hashes_block.xml -->
			<Hashes condition="contains">MD5=66d0f20927a7acc0f6821d73f468c647</Hashes>
			<Hashes condition="contains">MD5=f7b6e5d30c5cee5f999578225d4cdfde</Hashes>
			<Hashes condition="contains">MD5=a37ed7663073319d02f2513575a22995</Hashes>
			<Hashes condition="contains">MD5=5129d8fd53d6a4aba81657ab2aa5d243</Hashes>
			<Hashes condition="contains">MD5=7d86cdda7f49f91fdb69901a002b34e7</Hashes>
			<Hashes condition="contains">MD5=7073cd0085fcba1cd7d3568f9e6d652c</Hashes>
			<Hashes condition="contains">MD5=6d131a7462e568213b44ef69156f10a5</Hashes>
			<Hashes condition="contains">MD5=01c2e4d8234258451083d6ce4e8910b7</Hashes>
			<Hashes condition="contains">MD5=2ec877e425bd7eddb663627216e3491e</Hashes>
			<Hashes condition="contains">MD5=7190f99ecf8bc3f4c496443ff1f9ee83</Hashes>
			<Hashes condition="contains">MD5=26aedc10d4215ba997495d3a68355f4a</Hashes>
			<Hashes condition="contains">MD5=6e625ec04c20a9dbd48c7060efbf5e92</Hashes>
			<Hashes condition="contains">MD5=5a4fe297c7d42539303137b6d75b150d</Hashes>
			<Hashes condition="contains">MD5=2406ea37152d2154be3fef6d69ada2c6</Hashes>
			<Hashes condition="contains">MD5=65f800e1112864bf41eb815649f428d5</Hashes>
			<Hashes condition="contains">MD5=7b3fcc6007d842c4b3235fe2327f4ab5</Hashes>
			<Hashes condition="contains">MD5=d075d56dfce6b9b13484152b1ef40f93</Hashes>
			<Hashes condition="contains">MD5=7108b0d4021af4c41de2c223319cd4c1</Hashes>
			<Hashes condition="contains">MD5=968ddb06af90ef83c5f20fbdd4eee62e</Hashes>
			<Hashes condition="contains">MD5=67daa04716803a15fc11c9e353d77c2f</Hashes>
			<Hashes condition="contains">MD5=13a57a4ef721440c7c9208b51f7c05de</Hashes>
			<Hashes condition="contains">MD5=a90236e4962620949b720f647a91f101</Hashes>
			<Hashes condition="contains">MD5=4e4c068c06331130334f23957fca9e3c</Hashes>
			<Hashes condition="contains">MD5=a5bcaa2fc87b42e2e5d62a2e5dfcbc80</Hashes>
			<Hashes condition="contains">MD5=ba50bd645d7c81416bb26a9d39998296</Hashes>
			<Hashes condition="contains">MD5=c4a517a02ba9f6eac5cf06e3629cc076</Hashes>
			<Hashes condition="contains">MD5=093a2a635c3a27aac50efd6463f4efa1</Hashes>
			<Hashes condition="contains">MD5=e8f4a9208f93d895493a11d39331cddd</Hashes>
			<Hashes condition="contains">MD5=5e9231e85cecfc6141e3644fda12a734</Hashes>
			<Hashes condition="contains">MD5=650ef9dd70cb192027e536754d6e0f63</Hashes>
			<Hashes condition="contains">MD5=5ebfc0af031130ba9de1d5d3275734b3</Hashes>
			<Hashes condition="contains">MD5=5200ecb17fb554f13723c9c63145da64</Hashes>
			<Hashes condition="contains">MD5=68caf620ef8deaf06819cf8c80d3367b</Hashes>
			<Hashes condition="contains">MD5=fe499663cd2bf11e0fa3aaead28b05c9</Hashes>
			<Hashes condition="contains">MD5=d416494232c4197cb36a914df2e17677</Hashes>
			<Hashes condition="contains">MD5=27384ec4c634701012a2962c30badad2</Hashes>
			<Hashes condition="contains">MD5=d13c1b76b4a1ca3ff5ab63678b51df6d</Hashes>
			<Hashes condition="contains">MD5=0d2ba47286f1c68e87622b3a16bf9d92</Hashes>
			<Hashes condition="contains">MD5=550b7991d93534bc510bc4f237155a7a</Hashes>
			<Hashes condition="contains">MD5=48394dce30bb8da5ae089cb8f41b86dc</Hashes>
			<Hashes condition="contains">MD5=fb593b1f1f80d20fc7f4b818065c64b6</Hashes>
			<Hashes condition="contains">MD5=bd91787b5dcb2189b856804e85dfa1d9</Hashes>
			<Hashes condition="contains">MD5=85093bb9f027027c2c61aee50796de30</Hashes>
			<Hashes condition="contains">MD5=fb7c61ef427f9b2fdff3574ee6b1819b</Hashes>
			<Hashes condition="contains">MD5=1cd5e231064e03c596e819b6ff48daf9</Hashes>
			<Hashes condition="contains">MD5=e27b2486aa5c256b662812b465b6036c</Hashes>
			<Hashes condition="contains">MD5=f589d4bf547c140b6ec8a511ea47c658</Hashes>
			<Hashes condition="contains">MD5=be0b6b1507605522a02cf6f8ad969e22</Hashes>
			<Hashes condition="contains">MD5=5eb2c576597dd21a6b44557c237cf896</Hashes>
			<Hashes condition="contains">MD5=d3af70287de8757cebc6f8d45bb21a20</Hashes>
			<Hashes condition="contains">MD5=2b80be31fbb11d4c1ef6d6a80b2e0c16</Hashes>
			<Hashes condition="contains">MD5=2c39f6172fbc967844cac12d7ab2fa55</Hashes>
			<Hashes condition="contains">MD5=ef0e1725aaf0c6c972593f860531a2ea</Hashes>
			<Hashes condition="contains">MD5=ecd42cec81bc4c08b1ffd99ab760581d</Hashes>
			<Hashes condition="contains">MD5=b5dcc869a91efcc6e8ea0c3c07605d63</Hashes>
			<Hashes condition="contains">MD5=24d3ea54f25e32832ac20335a1ce1062</Hashes>
			<Hashes condition="contains">MD5=40f35792e7565aa047796758a3ce1b77</Hashes>
			<Hashes condition="contains">MD5=6b480fac7caca2f85be9a0cfe79aedfc</Hashes>
			<Hashes condition="contains">MD5=a3d69c7e24300389b56782aa63b0e357</Hashes>
			<Hashes condition="contains">MD5=abc168fdca7169bf9dc40cec9761018d</Hashes>
			<Hashes condition="contains">MD5=93496a436c5546156a69deb255a9fed0</Hashes>
			<Hashes condition="contains">MD5=63060b756377fce2ce4ab9d079ca732f</Hashes>
			<Hashes condition="contains">MD5=f838f4eb36f1e7036238776c7a70f0b0</Hashes>
			<Hashes condition="contains">MD5=4e1f656001af3677856f664e96282a6f</Hashes>
			<Hashes condition="contains">MD5=6fcf56f6ca3210ec397e55f727353c4a</Hashes>
			<Hashes condition="contains">MD5=8b75047199825c8e62fdcc1c915db8bd</Hashes>
			<Hashes condition="contains">MD5=e939448b28a4edc81f1f974cebf6e7d2</Hashes>
			<Hashes condition="contains">MD5=93130909e562925597110a617f05e2a9</Hashes>
			<Hashes condition="contains">MD5=ee6b1a79cb6641aa44c762ee90786fe0</Hashes>
			<Hashes condition="contains">MD5=3f11a94f1ac5efdd19767c6976da9ba4</Hashes>
			<Hashes condition="contains">MD5=b52f51bbe6b49d0b475d943c29c4d4cb</Hashes>
			<Hashes condition="contains">MD5=fe508caa54ffeb2285d9f00df547fe4a</Hashes>
			<Hashes condition="contains">MD5=84763d8ca9fe5c3bff9667b2adf667de</Hashes>
			<Hashes condition="contains">MD5=aa98b95f5cbae8260122de06a215ee10</Hashes>
			<Hashes condition="contains">MD5=b503cd460a61d303107aa459956781fd</Hashes>
			<Hashes condition="contains">MD5=7cd54df7962a91032a643f152a79cd19</Hashes>
			<Hashes condition="contains">MD5=0b311af53d2f4f77d30f1aed709db257</Hashes>
			<Hashes condition="contains">MD5=193cf8847ff1f35ec8e1ef5e8d27cc82</Hashes>
			<Hashes condition="contains">MD5=c9d4214c850e0cedf033dc8f0cd3aace</Hashes>
			<Hashes condition="contains">MD5=70fd7209ce5c013a1f9e699b5cc86cdc</Hashes>
			<Hashes condition="contains">MD5=4118b86e490aed091b1a219dba45f332</Hashes>
			<Hashes condition="contains">MD5=b164daf106566f444dfb280d743bc2f7</Hashes>
			<Hashes condition="contains">MD5=bbdbffebfc753b11897de2da7c9912a5</Hashes>
			<Hashes condition="contains">MD5=1010d96b7682e1f9c92666df47864e82</Hashes>
			<Hashes condition="contains">MD5=629ee55e4b5a225d048fbcd5f0a1d18b</Hashes>
			<Hashes condition="contains">MD5=ef814560ab68d384aa056881cf4342a4</Hashes>
			<Hashes condition="contains">MD5=ed2b653d55c03f0bffa250372d682b75</Hashes>
			<Hashes condition="contains">MD5=97264fd62d4907bdac917917a07b3b7a</Hashes>
			<Hashes condition="contains">MD5=a6e9d6505f6d2326a8a9214667c61c67</Hashes>
			<Hashes condition="contains">MD5=8dfe2b95d7aa30285220bac35450cc3a</Hashes>
			<Hashes condition="contains">MD5=05dd59bd4f175304480affd8f1305c37</Hashes>
			<Hashes condition="contains">MD5=cbd8d370462503508e44dba023bdf9bc</Hashes>
			<Hashes condition="contains">MD5=70a71fe86df717ac59dbf856d7ac5789</Hashes>
			<Hashes condition="contains">MD5=cee36b5c6362993fa921435979bfbe4a</Hashes>
			<Hashes condition="contains">MD5=d96cbcec39b96ba813e317958d74d1b9</Hashes>
			<Hashes condition="contains">MD5=76f8607fc4fb9e828d613a7214436b66</Hashes>
			<Hashes condition="contains">MD5=cf42cc217c139298641901aad4e5db08</Hashes>
			<Hashes condition="contains">MD5=0bdd51cc33e88b5265dfb7d88c5dc8d6</Hashes>
			<Hashes condition="contains">MD5=1e0eb80347e723fa31fce2abb0301d44</Hashes>
			<Hashes condition="contains">MD5=990b949894b7dc82a8cf1131b063cb1a</Hashes>
			<Hashes condition="contains">MD5=a9df5964635ef8bd567ae487c3d214c4</Hashes>
			<Hashes condition="contains">MD5=a236e7d654cd932b7d11cb604629a2d0</Hashes>
			<Hashes condition="contains">MD5=dc564bac7258e16627b9de0ce39fae25</Hashes>
			<Hashes condition="contains">MD5=b6b530dd25c5eb66499968ec82e8791e</Hashes>
			<Hashes condition="contains">MD5=f69b06ca7c34d16f26ea1c6861edf62a</Hashes>
			<Hashes condition="contains">MD5=e37a08f516b8a7ca64163f5d9e68fe5a</Hashes>
			<Hashes condition="contains">MD5=6a066d2be83cf83f343d0550b0b8f206</Hashes>
			<Hashes condition="contains">MD5=7d26985a5048bad57d9c223362f3d55c</Hashes>
			<Hashes condition="contains">MD5=35e512f9bedc89dca5ce81f35820714c</Hashes>
			<Hashes condition="contains">MD5=b0770094c3c64250167b55e4db850c04</Hashes>
			<Hashes condition="contains">MD5=87dc81ebe85f20c1a7970e495a778e60</Hashes>
			<Hashes condition="contains">MD5=1d51029dfbd616bf121b40a0d1efeb10</Hashes>
			<Hashes condition="contains">MD5=c94f405c5929cfcccc8ad00b42c95083</Hashes>
			<Hashes condition="contains">MD5=c71be7b112059d2dc84c0f952e04e6cc</Hashes>
			<Hashes condition="contains">MD5=a822b9e6eedf69211013e192967bf523</Hashes>
			<Hashes condition="contains">MD5=58c37866cbc3d1338e4fc58ada924ffe</Hashes>
			<Hashes condition="contains">MD5=bb5bda8889d8d27ef984dbd6ad82c946</Hashes>
			<Hashes condition="contains">MD5=0ae30291c6cbfa7be39320badd6e8de0</Hashes>
			<Hashes condition="contains">MD5=40b968ecdbe9e967d92c5da51c390eee</Hashes>
			<Hashes condition="contains">MD5=2730cc25ad385acc7213a1261b21c12d</Hashes>
			<Hashes condition="contains">MD5=0023ca0ca16a62d93ef51f3df98b2f94</Hashes>
			<Hashes condition="contains">MD5=d0b0f38cf399bc1e7e4c387f50474601</Hashes>
			<Hashes condition="contains">MD5=eb57f03b7603f0b235af62e8cd5be8c2</Hashes>
			<Hashes condition="contains">MD5=3b71eab204a5f7ed77811e41fed73105</Hashes>
			<Hashes condition="contains">MD5=a8480c3b63db47212041042685afd753</Hashes>
			<Hashes condition="contains">MD5=c22ab4197c4a6a1ea1945248ddc2d19d</Hashes>
			<Hashes condition="contains">MD5=c62209b8a5daf3f32ad876ad6cefda1b</Hashes>
			<Hashes condition="contains">MD5=bdb305aa0806f8b38b7ce43c927fe919</Hashes>
			<Hashes condition="contains">MD5=78a122d926ccc371d60c861600c310f3</Hashes>
			<Hashes condition="contains">MD5=3359e1d4244a7d724949c63e89689ef8</Hashes>
			<Hashes condition="contains">MD5=840a5edf2534dd23a082cf7b28cbfc4d</Hashes>
			<Hashes condition="contains">MD5=a33089d4e50f7d2ea8b52ca95d26ebf3</Hashes>
			<Hashes condition="contains">MD5=4b058945c9f2b8d8ebc485add1101ba5</Hashes>
			<Hashes condition="contains">MD5=fe9004353b25640f6a879e57f07122d7</Hashes>
			<Hashes condition="contains">MD5=b71bbf5838a0346d567bc60e7955b642</Hashes>
			<Hashes condition="contains">MD5=157a22689629ec876337f5f9409918d5</Hashes>
			<Hashes condition="contains">MD5=154f30d81f67dcb5b855d4db6f26c8a6</Hashes>
			<Hashes condition="contains">MD5=844af8c877f5da723c1b82cf6e213fc1</Hashes>
			<Hashes condition="contains">MD5=c159fb0f345a8771e56aab8e16927361</Hashes>
			<Hashes condition="contains">MD5=88bea56ae9257b40063785cf47546024</Hashes>
			<Hashes condition="contains">MD5=d6220f35d2ab7e028e21d5420e12ee93</Hashes>
			<Hashes condition="contains">MD5=61ecbe0670717bb544ab4e3e0fe67a90</Hashes>
			<Hashes condition="contains">MD5=27053e964667318e1b370150cbca9138</Hashes>
			<Hashes condition="contains">MD5=1fc7aeeff3ab19004d2e53eae8160ab1</Hashes>
			<Hashes condition="contains">MD5=28102acca39ad0199f262ba9958be3f4</Hashes>
			<Hashes condition="contains">MD5=a837302307dace2a00d07202b661bce2</Hashes>
			<Hashes condition="contains">MD5=2d37d2fb9b9f8ac52bc02cba4487e3cb</Hashes>
			<Hashes condition="contains">MD5=eb187d171359a5bb1c754107f18cf8bb</Hashes>
			<Hashes condition="contains">MD5=62c18d61ed324088f963510bae43b831</Hashes>
			<Hashes condition="contains">MD5=5917e415a5bf30b3fcbcbcb8a4f20ee0</Hashes>
			<Hashes condition="contains">MD5=32282e07db321e8d7849f2287bb6a14f</Hashes>
			<Hashes condition="contains">MD5=df52f8a85eb64bc69039243d9680d8e4</Hashes>
			<Hashes condition="contains">MD5=aeb0801f22d71c7494e884d914446751</Hashes>
			<Hashes condition="contains">MD5=63366b4fb6f3b974900985ab064beb9b</Hashes>
			<Hashes condition="contains">MD5=19bdd9b799e3c2c54c0d7fff68b31c20</Hashes>
			<Hashes condition="contains">MD5=6a4fbcfb44717eae2145c761c1c99b6a</Hashes>
			<Hashes condition="contains">MD5=36f44643178c505ea0384e0fb241e904</Hashes>
			<Hashes condition="contains">MD5=1cd158a64f3d886357535382a6fdad75</Hashes>
			<Hashes condition="contains">MD5=5aeab9427d85951def146b4c0a44fc63</Hashes>
			<Hashes condition="contains">MD5=c277c4386a78fae1b7e17eaecf4f472b</Hashes>
			<Hashes condition="contains">MD5=d04043db948ce9f4c5ba03dc23675556</Hashes>
			<Hashes condition="contains">MD5=909f3fc221acbe999483c87d9ead024a</Hashes>
			<Hashes condition="contains">MD5=0308b6888e0f197db6704ca20203eee4</Hashes>
			<Hashes condition="contains">MD5=bd25be845c151370ff177509d95d5add</Hashes>
			<Hashes condition="contains">MD5=7e92f98b809430622b04e88441b2eb04</Hashes>
			<Hashes condition="contains">MD5=448453590f8694e15f1f2092fdfd5efd</Hashes>
			<Hashes condition="contains">MD5=cfe59d68df1eaa4f33852a60c81f4fd0</Hashes>
			<Hashes condition="contains">MD5=06c7fcf3523235cf52b3eee083ec07b2</Hashes>
			<Hashes condition="contains">MD5=508faa4647f305a97ed7167abc4d1330</Hashes>
			<Hashes condition="contains">MD5=f242cffd9926c0ccf94af3bf16b6e527</Hashes>
			<Hashes condition="contains">MD5=80219fb6b5954c33e16bac5ecdac651b</Hashes>
			<Hashes condition="contains">MD5=4a27a2bdc6fbe39eeec6455fb1e0ef20</Hashes>
			<Hashes condition="contains">MD5=4484f4007de2c3ee4581a2cff77ca3b4</Hashes>
			<Hashes condition="contains">MD5=8cf9ec579ba36fc4a4edbc4788b5f209</Hashes>
			<Hashes condition="contains">MD5=98d53f6b3bec0a3417a04fbb9e17fa06</Hashes>
			<Hashes condition="contains">MD5=c8541a9cef64589593e999968a0385b9</Hashes>
			<Hashes condition="contains">MD5=2bb353891d65c9e267eb98a3a2b694c3</Hashes>
			<Hashes condition="contains">MD5=6ececf26ff8b03ed7ffbddadec9a9dab</Hashes>
			<Hashes condition="contains">MD5=1ee9f6326649cd23381eb9d7dfdeddf7</Hashes>
			<Hashes condition="contains">MD5=a42249a046182aaaf3a7a7db98bfa69d</Hashes>
			<Hashes condition="contains">MD5=5be61a24f50eb4c94d98b8a82ef58dcf</Hashes>
			<Hashes condition="contains">MD5=44a0db8d9ea165b2ae5e84b72550a4e7</Hashes>
			<Hashes condition="contains">MD5=3dd829fb27353622eff34be1eabb8f18</Hashes>
			<Hashes condition="contains">MD5=10c2ea775c9e76e7774ab89e38f38287</Hashes>
			<Hashes condition="contains">MD5=29e03f4811b64969e48a99300978f58c</Hashes>
			<Hashes condition="contains">MD5=7ebe606acd81abf1f8cb0767c974164b</Hashes>
			<Hashes condition="contains">MD5=bf445ac375977ecf551bc2a912c58e8a</Hashes>
			<Hashes condition="contains">MD5=50b39072d0ee9af5ef4824eca34be6e3</Hashes>
			<Hashes condition="contains">MD5=0f16a43f7989034641fd2de3eb268bf1</Hashes>
			<Hashes condition="contains">MD5=bfbdea0589fb77c7a7095cf5cd6e8b7a</Hashes>
			<Hashes condition="contains">MD5=44857ca402a15ab51dc5afe47abdfa44</Hashes>
			<Hashes condition="contains">MD5=89ed5be7ea83c01d0de33d3519944aa5</Hashes>
			<Hashes condition="contains">MD5=77a7ed4798d02ef6636cd0fd07fc382a</Hashes>
			<Hashes condition="contains">MD5=491aec2249ad8e2020f9f9b559ab68a8</Hashes>
			<Hashes condition="contains">MD5=c5fc3605194e033bdf3781ff2adaeb61</Hashes>
			<Hashes condition="contains">MD5=f157ac999b29ac010862177c1c66cee7</Hashes>
			<Hashes condition="contains">MD5=f3e6580f5f8dacbe2f53ebb9810bc556</Hashes>
			<Hashes condition="contains">MD5=a5fae487dc0d0919eae60638eabd1c85</Hashes>
			<Hashes condition="contains">MD5=e8eac6642b882a6196555539149c73f2</Hashes>
			<Hashes condition="contains">MD5=32b67a6cd6dd998b9f563ed13d54a8bc</Hashes>
			<Hashes condition="contains">MD5=4dd6250eb2d368f500949952eb013964</Hashes>
			<Hashes condition="contains">MD5=ac6e29f535b2c42999c50d2fc32f2c9c</Hashes>
			<Hashes condition="contains">MD5=17509f0a98dc5c5d52c3f9ac1428a21b</Hashes>
			<Hashes condition="contains">MD5=6771b13a53b9c7449d4891e427735ea2</Hashes>
			<Hashes condition="contains">MD5=47e6ac52431ca47da17248d80bf71389</Hashes>
			<Hashes condition="contains">MD5=4ad8fd9e83d7200bd7f8d0d4a9abfb11</Hashes>
			<Hashes condition="contains">MD5=ba54a0dbe2685e66e21d41b4529b3528</Hashes>
			<Hashes condition="contains">MD5=d5918d735a23f746f0e83f724c4f26e5</Hashes>
			<Hashes condition="contains">MD5=32eb3d2bf2c5b3da2d2a1f20fffbac44</Hashes>
			<Hashes condition="contains">MD5=5076fba3d90e346fd17f78db0a4aa12c</Hashes>
			<Hashes condition="contains">MD5=0b9b78d1281c7d4ab50497cf6ea7452a</Hashes>
			<Hashes condition="contains">MD5=7f9309f5e4defec132b622fadbcad511</Hashes>
			<Hashes condition="contains">MD5=db86dfd7aefbb5be6728a63461b0f5f3</Hashes>
			<Hashes condition="contains">MD5=0aa686c8c9c4d8379fdba2723c21663a</Hashes>
			<Hashes condition="contains">MD5=a06880ad1efe6b57ca1d59d878dea82a</Hashes>
			<Hashes condition="contains">MD5=41046ce853788277da0d7e8c4e0a3123</Hashes>
			<Hashes condition="contains">MD5=c7b7f1edb9bbef174e6506885561d85d</Hashes>
			<Hashes condition="contains">MD5=0ca010a32a9b0aeae1e46d666b83b659</Hashes>
			<Hashes condition="contains">MD5=40170485cca576adb5266cf5b0d3b0bd</Hashes>
			<Hashes condition="contains">MD5=dbb2e0ecfa1cd1932c32e4f02edff079</Hashes>
			<Hashes condition="contains">MD5=f56db4eba3829c0918413b5c0b42f00f</Hashes>
			<Hashes condition="contains">MD5=f7f31bccc9b7b2964ac85106831022b1</Hashes>
			<Hashes condition="contains">MD5=cef82e32c1a0d1d2cc035d22773340ae</Hashes>
			<Hashes condition="contains">MD5=091a6bd4880048514c5dd3bede15eba5</Hashes>
			<Hashes condition="contains">MD5=6b3c1511e12f4d27a4ea3b18020d7b84</Hashes>
			<Hashes condition="contains">MD5=451ec31152318d1249f41aed387dd262</Hashes>
			<Hashes condition="contains">MD5=c5ae6ca044bd03c3506c132b033be1dc</Hashes>
			<Hashes condition="contains">MD5=f209cb0e468ca0b76d879859d5c8c54e</Hashes>
			<Hashes condition="contains">MD5=22949977ce5cd96ba674b403a9c81285</Hashes>
			<Hashes condition="contains">MD5=4cf14a96485a1270fed97bb8000e4f86</Hashes>
			<Hashes condition="contains">MD5=be6318413160e589080df02bb3ca6e6a</Hashes>
			<Hashes condition="contains">MD5=b76aee508f68b5b6dccd6e1f66f4cf8b</Hashes>
			<Hashes condition="contains">MD5=acac842a46f3501fe407b1db1b247a0b</Hashes>
			<Hashes condition="contains">MD5=364605ad21b9275681cffef607fac273</Hashes>
			<Hashes condition="contains">MD5=41d7ebdb73b4bf2a063ae430e33bc164</Hashes>
			<Hashes condition="contains">MD5=faae7f5f69fde12303dd1c0c816b72b7</Hashes>
			<Hashes condition="contains">MD5=29047f0b7790e524b09a06852d31a117</Hashes>
			<Hashes condition="contains">MD5=e39152eadd76751b1d7485231b280948</Hashes>
			<Hashes condition="contains">MD5=c1ade0fc97f6a774fd036892c8056907</Hashes>
			<Hashes condition="contains">MD5=e0cc9b415d884f85c45be145872892b8</Hashes>
			<Hashes condition="contains">MD5=4198d3db44d7c4b3ba9072d258a4fc2d</Hashes>
			<Hashes condition="contains">MD5=72f53f55898548767e0276c472be41e8</Hashes>
			<Hashes condition="contains">MD5=79df0eabbf2895e4e2dae15a4772868c</Hashes>
			<Hashes condition="contains">MD5=04a88f5974caa621cee18f34300fc08a</Hashes>
			<Hashes condition="contains">MD5=1f2888e57fdd6aee466962c25ba7d62d</Hashes>
			<Hashes condition="contains">MD5=07056573d464b0f5284f7e3acedd4a3f</Hashes>
			<Hashes condition="contains">MD5=072ba2309b825ce1dba37d8d924ea8ed</Hashes>
			<Hashes condition="contains">MD5=f9844524fb0009e5b784c21c7bad4220</Hashes>
			<Hashes condition="contains">MD5=528ce5ce19eb34f401ef024de7ddf222</Hashes>
			<Hashes condition="contains">MD5=cf1bc2fb73f82c43e05541100808a217</Hashes>
			<Hashes condition="contains">MD5=97539c78d6e2b5356ce79e40bcd4d570</Hashes>
			<Hashes condition="contains">MD5=d34b218c386bfe8b1f9c941e374418d7</Hashes>
			<Hashes condition="contains">MD5=754e21482baf18b8b0ed0f4be462ba03</Hashes>
			<Hashes condition="contains">MD5=d70a80fc73dd43469934a7b1cc623c76</Hashes>
			<Hashes condition="contains">MD5=cd2c641788d5d125c316ed739c69bb59</Hashes>
			<Hashes condition="contains">MD5=311de109df18e485d4a626b5dbe19bc6</Hashes>
			<Hashes condition="contains">MD5=154b45f072fe844676e6970612fd39c7</Hashes>
			<Hashes condition="contains">MD5=0ea8389589c603a8b05146bd06020597</Hashes>
			<Hashes condition="contains">MD5=98b8507e725b3d28537fc374eb2de72d</Hashes>
			<Hashes condition="contains">MD5=e29f6311ae87542b3d693c1f38e4e3ad</Hashes>
			<Hashes condition="contains">MD5=8636fe3724f2bcba9399daffd6ef3c7e</Hashes>
			<Hashes condition="contains">MD5=49518f7375a5f995ebe9423d8f19cfe4</Hashes>
			<Hashes condition="contains">MD5=920df6e42cf91bbe19707f5a86e3c5c5</Hashes>
			<Hashes condition="contains">MD5=c1ab425977d467b64f437a6c5ad82b44</Hashes>
			<Hashes condition="contains">MD5=ae338d91d1b05a72559b7f6ed717362d</Hashes>
			<Hashes condition="contains">MD5=ccde8c94439f9fc9c42761e4b9a23d97</Hashes>
			<Hashes condition="contains">MD5=14580bd59c55185115fd3abe73b016a2</Hashes>
			<Hashes condition="contains">MD5=3164bd6c12dd0fe1bdf3b833d56323b9</Hashes>
			<Hashes condition="contains">MD5=19b15eeccab0752c6793f782ca665a45</Hashes>
			<Hashes condition="contains">MD5=bd5b0514f3b40f139d8079138d01b5f6</Hashes>
			<Hashes condition="contains">MD5=4e906fcb13e2793c98f47291fd69391b</Hashes>
			<Hashes condition="contains">MD5=57c18a8f5d1ba6d015e4d5bc698e3624</Hashes>
			<Hashes condition="contains">MD5=89d294ef7fefcdf1a6ca0ab96a856f57</Hashes>
			<Hashes condition="contains">MD5=7fad9f2ef803496f482ce4728578a57a</Hashes>
			<Hashes condition="contains">MD5=475f33ff28ba2c8007f39602c5f7ecf1</Hashes>
			<Hashes condition="contains">MD5=d6a1dd7b2c06f058b408b3613c13d413</Hashes>
			<Hashes condition="contains">MD5=10f3679384a03cb487bda9621ceb5f90</Hashes>
			<Hashes condition="contains">MD5=ae548418b491cd3f31618eb9e5730973</Hashes>
			<Hashes condition="contains">MD5=e172a38ade3aa0a2bc1bf9604a54a3b5</Hashes>
			<Hashes condition="contains">MD5=77cfd3943cc34d9f5279c330cd8940bc</Hashes>
			<Hashes condition="contains">MD5=11cf20a428b8fb81ff20dfe4dc3e28bd</Hashes>
			<Hashes condition="contains">MD5=5fec28e8f4f76e5ede24beb32a32b9d7</Hashes>
			<Hashes condition="contains">MD5=3d0b3e19262099ade884b75ba86ca7e8</Hashes>
			<Hashes condition="contains">MD5=e1a9aa4c14669b1fb1f67a7266f87e82</Hashes>
			<Hashes condition="contains">MD5=4748696211bd56c2d93c21cab91e82a5</Hashes>
			<Hashes condition="contains">MD5=a26363e7b02b13f2b8d697abb90cd5c3</Hashes>
			<Hashes condition="contains">MD5=24f0f2b4b3cdae11de1b81c537df41c7</Hashes>
			<Hashes condition="contains">MD5=3748096bd604a91bc26b2aa1c6883fce</Hashes>
			<Hashes condition="contains">MD5=5983eaf01499c65f35302cd962b849f5</Hashes>
			<Hashes condition="contains">MD5=30ca3cc19f001a8f12c619daa8c6b6e3</Hashes>
			<Hashes condition="contains">MD5=1325ec39e98225e487b40043faee8052</Hashes>
			<Hashes condition="contains">SHA1=b2f5d3318aab69e6e0ca8da4a4733849e3f1cee2</Hashes>
			<Hashes condition="contains">SHA1=2480549ec8564cd37519a419ab2380cf3e8bab9e</Hashes>
			<Hashes condition="contains">SHA1=e2d98e0e178880f10434059096f936b2c06ed8f4</Hashes>
			<Hashes condition="contains">SHA1=632c80a3c95cf589b03812539dea59594eaefae0</Hashes>
			<Hashes condition="contains">SHA1=492e40b01a9a6cec593691db4838f20b3eaeacc5</Hashes>
			<Hashes condition="contains">SHA1=9382981b05b1fb950245313992444bfa0db5f881</Hashes>
			<Hashes condition="contains">SHA1=6df35a0c2f6d7d39d24277137ea840078dafb812</Hashes>
			<Hashes condition="contains">SHA1=538bb45f30035f39d41bd13818fe0c0061182cfe</Hashes>
			<Hashes condition="contains">SHA1=91f832f46e4c38ecc9335460d46f6f71352cffed</Hashes>
			<Hashes condition="contains">SHA1=acb8e45ebd1252313ece94198df47edf9294e7d3</Hashes>
			<Hashes condition="contains">SHA1=5fa527e679d25a15ecc913ce6a8d0218e2ff174b</Hashes>
			<Hashes condition="contains">SHA1=b555aad38df7605985462f3899572931ee126259</Hashes>
			<Hashes condition="contains">SHA1=7f7d144cc80129d0db3159ea5d4294c34b79b20a</Hashes>
			<Hashes condition="contains">SHA1=af42afda54d150810a60baa7987f9f09d49d1317</Hashes>
			<Hashes condition="contains">SHA1=23d66b87c8ea22e08db1c010ec5e5499cb94ffc0</Hashes>
			<Hashes condition="contains">SHA1=98130128685c8640a8a8391cb4718e98dd8fe542</Hashes>
			<Hashes condition="contains">SHA1=2d0d89e275d2ea7a0b40af6bf5f284a9f61bcafe</Hashes>
			<Hashes condition="contains">SHA1=e23dff8959176dc17a1e37356a99c3333e75e8d3</Hashes>
			<Hashes condition="contains">SHA1=01cf1fe3937fb6585ffb468b116a3af8ddf9ef16</Hashes>
			<Hashes condition="contains">SHA1=b6eb40ea52b47f03edb8f45e2e431b5f666df8c5</Hashes>
			<Hashes condition="contains">SHA1=995251de1b8f4d9a685ac39c3f0e1184c2b587b0</Hashes>
			<Hashes condition="contains">SHA1=6ec298a9aff2708c3e28a8510e3735e841b14e06</Hashes>
			<Hashes condition="contains">SHA1=d1fb740210c1fa2a52f6748b0588ae77de590b9d</Hashes>
			<Hashes condition="contains">SHA1=fde0fff1c3e4c053148748504d4b9e0cc97f37ec</Hashes>
			<Hashes condition="contains">SHA1=c99b1093d11469729796ab5743c4bb1d16e3b975</Hashes>
			<Hashes condition="contains">SHA1=ebd8b7e964b8c692eea4a8c406b9cd0be621ebe2</Hashes>
			<Hashes condition="contains">SHA1=e3a1e7ce9e9452966885371e4c7fb48a2efdef22</Hashes>
			<Hashes condition="contains">SHA1=55a139fe44e836a1886774d7c89c70796060f1c4</Hashes>
			<Hashes condition="contains">SHA1=ac4ace1c21c5cb72c6edf6f2f0cc3513d7c942c3</Hashes>
			<Hashes condition="contains">SHA1=1d373361d3129d11bc43f9b6dfa81d06e5ca8358</Hashes>
			<Hashes condition="contains">SHA1=9b2ef5f7429d62342163e001c7c13fb866dbe1ef</Hashes>
			<Hashes condition="contains">SHA1=7638c048af5beae44352764390deea597cc3e7b1</Hashes>
			<Hashes condition="contains">SHA1=06b733b2b02753089d743793232bd326204b8919</Hashes>
			<Hashes condition="contains">SHA1=b8b123a413b7bccfa8433deba4f88669c969b543</Hashes>
			<Hashes condition="contains">SHA1=2e96749e78704b8ca13ec84bd047dd271eb12122</Hashes>
			<Hashes condition="contains">SHA1=dac68b8ee002d5bb61be3d59908a61a26efb7c09</Hashes>
			<Hashes condition="contains">SHA1=0de86ec7d7f16a3680df89256548301eed970393</Hashes>
			<Hashes condition="contains">SHA1=0883a9c54e8442a551994989db6fc694f1086d41</Hashes>
			<Hashes condition="contains">SHA1=e6765d8866cad6193df1507c18f31fa7f723ca3e</Hashes>
			<Hashes condition="contains">SHA1=3825ebb0b0664b5f0789371240f65231693be37d</Hashes>
			<Hashes condition="contains">SHA1=53f776d9a183c42b93960b270dddeafba74eb3fb</Hashes>
			<Hashes condition="contains">SHA1=07f78a47f447e4d8a72ad4bc6a26427b9577ec82</Hashes>
			<Hashes condition="contains">SHA1=4f7989ad92b8c47c004d3731b7602ce0934d7a23</Hashes>
			<Hashes condition="contains">SHA1=76789196eebfd4203f477a5a6c75eefc12d9a837</Hashes>
			<Hashes condition="contains">SHA1=a804ebec7e341b4d98d9e94f6e4860a55ea1638d</Hashes>
			<Hashes condition="contains">SHA1=89a74d0e9fd03129082c5b868f5ad62558ca34fd</Hashes>
			<Hashes condition="contains">SHA1=98c4406fede34c3704afd8cf536ec20d93df9a10</Hashes>
			<Hashes condition="contains">SHA1=6972314b6d6b0109b9d0a951eb06041f531f589b</Hashes>
			<Hashes condition="contains">SHA1=994dc79255aeb662a672a1814280de73d405617a</Hashes>
			<Hashes condition="contains">SHA1=bb6ef5518df35d9508673d5011138add8c30fc27</Hashes>
			<Hashes condition="contains">SHA1=8692274681e8d10c26ddf2b993f31974b04f5bf0</Hashes>
			<Hashes condition="contains">SHA1=7e836dadc2e149a0b758c7e22c989cbfcce18684</Hashes>
			<Hashes condition="contains">SHA1=bbc8bd714c917bb1033f37e4808b4b002cd04166</Hashes>
			<Hashes condition="contains">SHA1=f2fe02e28cf418d935ec63168caf4dff6a9fbdfe</Hashes>
			<Hashes condition="contains">SHA1=6451522b1fb428e549976d0742df5034f8124b17</Hashes>
			<Hashes condition="contains">SHA1=1fdb2474908bdd2ee1e9bd3f224626f9361caab7</Hashes>
			<Hashes condition="contains">SHA1=c257aa4094539719a3c7b7950598ef872dbf9518</Hashes>
			<Hashes condition="contains">SHA1=011954de4094ae7e4562db7e749d5c66b268f1b4</Hashes>
			<Hashes condition="contains">SHA1=fcf9978cf1af2e9b1e2eaf509513664dfcc1847b</Hashes>
			<Hashes condition="contains">SHA1=4f2d9a70ea24121ae01df8a76ffba1f9cc0fde4a</Hashes>
			<Hashes condition="contains">SHA1=b5696e2183d9387776820ef3afa388200f08f5a6</Hashes>
			<Hashes condition="contains">SHA1=844d7bcd1a928d340255ff42971cca6244a459bf</Hashes>
			<Hashes condition="contains">SHA1=8416ee8fd88c3d069fbba90e959507c69a0ee3e9</Hashes>
			<Hashes condition="contains">SHA1=d4f5323da704ff2f25d6b97f38763c147f2a0e6f</Hashes>
			<Hashes condition="contains">SHA1=465abe9634c199a5f80f8a4f77ec3118c0d69652</Hashes>
			<Hashes condition="contains">SHA1=85076aa3bffb40339021286b73d72dd5a8e4396a</Hashes>
			<Hashes condition="contains">SHA1=599de57a5c05e27bb72c7b8a677e531d8e4bf8b5</Hashes>
			<Hashes condition="contains">SHA1=50c6b3cafc35462009d02c10f2e79373936dd7bb</Hashes>
			<Hashes condition="contains">SHA1=a0cefb5b55f7a7a145b549613e26b6805515a1ad</Hashes>
			<Hashes condition="contains">SHA1=30979e39351839222606ead9b7ae37e310e5c889</Hashes>
			<Hashes condition="contains">SHA1=8e126f4f35e228fdd3aa78d533225db7122d8945</Hashes>
			<Hashes condition="contains">SHA1=87e20486e804bfff393cc9ad9659858e130402a2</Hashes>
			<Hashes condition="contains">SHA1=f154d0b1c0f9d96efa7ff0218f0aa5298d6f8d49</Hashes>
			<Hashes condition="contains">SHA1=bf2f8ada4e80aed4710993cedf4c5d32c95cd509</Hashes>
			<Hashes condition="contains">SHA1=ab044b9cd7b83bd2a3c54f3d28bf734578b17af5</Hashes>
			<Hashes condition="contains">SHA1=552730553a1dea0290710465fb8189bdd0eaad42</Hashes>
			<Hashes condition="contains">SHA1=fdbcebb6cafda927d384d7be2e8063a4377d884f</Hashes>
			<Hashes condition="contains">SHA1=4dd86ff6f7180abebcb92e556a486abe7132754c</Hashes>
			<Hashes condition="contains">SHA1=2a202830db58d5e942e4f6609228b14095ed2cab</Hashes>
			<Hashes condition="contains">SHA1=4da007dd298723f920e194501bb49bab769dfb14</Hashes>
			<Hashes condition="contains">SHA1=10fb4ba6b2585ea02e7afb53ff34bf184eeb1a5d</Hashes>
			<Hashes condition="contains">SHA1=b2f955b3e6107f831ebe67997f8586d4fe9f3e98</Hashes>
			<Hashes condition="contains">SHA1=b34a012887ddab761b2298f882858fa1ff4d99f1</Hashes>
			<Hashes condition="contains">SHA1=ffe5611f1f905f2caa4e846a51f31ef8856c95a2</Hashes>
			<Hashes condition="contains">SHA1=dd94a2436994ac35db91e0ec9438b95e438d38c5</Hashes>
			<Hashes condition="contains">SHA1=c3aafe8f67c6738489377031cb5a1197e99b202d</Hashes>
			<Hashes condition="contains">SHA1=3b6b35bca1b05fafbfc883a844df6d52af44ccdc</Hashes>
			<Hashes condition="contains">SHA1=91568d7a82cc7677f6b13f11bea5c40cf12d281b</Hashes>
			<Hashes condition="contains">SHA1=c23eeb6f18f626ce1fd840227f351fa7543bb167</Hashes>
			<Hashes condition="contains">SHA1=0320534df24a37a245a0b09679a5adb27018fb5f</Hashes>
			<Hashes condition="contains">SHA1=40372b4de2db020ce2659e1de806d4338fd7ebef</Hashes>
			<Hashes condition="contains">SHA1=10115219e3595b93204c70eec6db3e68a93f3144</Hashes>
			<Hashes condition="contains">SHA1=97812f334a077c40e8e642bb9872ac2c49ddb9a2</Hashes>
			<Hashes condition="contains">SHA1=009328378ad988c7bc5b1e0f29837f52663b55d6</Hashes>
			<Hashes condition="contains">SHA1=46c9a474a1a62c25a05bc7661b75a80b471616e6</Hashes>
			<Hashes condition="contains">SHA1=fff4f28287677caabc60c8ab36786c370226588d</Hashes>
			<Hashes condition="contains">SHA1=d4304bc75c2cb9917bb10a1dc630b75af194f7b2</Hashes>
			<Hashes condition="contains">SHA1=83506de48bd0c50ea00c9e889fe980f56e6c6e1b</Hashes>
			<Hashes condition="contains">SHA1=e6e2e01c527d52fe6b2d377043a1ed77f7257d73</Hashes>
			<Hashes condition="contains">SHA1=e0b263f2d9c08f27c6edf5a25aa67a65c88692b0</Hashes>
			<Hashes condition="contains">SHA1=905c66938437218b27dccb4d54b1222cf7a313c8</Hashes>
			<Hashes condition="contains">SHA1=cb3f30809b05cf02bc29d4a7796fb0650271e542</Hashes>
			<Hashes condition="contains">SHA1=fe18c58fbd0a83d67920e037d522c176704d2ca3</Hashes>
			<Hashes condition="contains">SHA1=9e2ebc489c50b6bbae3b08473e007baa65ff208f</Hashes>
			<Hashes condition="contains">SHA1=b5a8e2104d76dbb04cd9ffe86784113585822375</Hashes>
			<Hashes condition="contains">SHA1=da970a01cecff33a99c217a42297cec4d1fe66d6</Hashes>
			<Hashes condition="contains">SHA1=6abc7979ba044f31884517827afb7b4bdaa0dcc1</Hashes>
			<Hashes condition="contains">SHA1=745335bcdf02fb42df7d890a24858e16094f48fd</Hashes>
			<Hashes condition="contains">SHA1=766949d4599fbf8f45e888c9d6fedf21e04fb333</Hashes>
			<Hashes condition="contains">SHA1=9f27987c32321f8da099efc1dc60a73f8f629d3a</Hashes>
			<Hashes condition="contains">SHA1=e86dd3f83e40682407d499aa9ff6de1da8a2a143</Hashes>
			<Hashes condition="contains">SHA1=f6793243ad20359d8be40d3accac168a15a327fb</Hashes>
			<Hashes condition="contains">SHA1=48608c80ce98476569ee5bc51823f98dc80f858f</Hashes>
			<Hashes condition="contains">SHA1=3bd1a88cc7dae701bc7085639e1c26ded3f8ccb3</Hashes>
			<Hashes condition="contains">SHA1=4d7918c4a051313ac21aba444dac10c61f96ac2e</Hashes>
			<Hashes condition="contains">SHA1=e514dfadbeb4d2305988c3281bf105d252dee3a7</Hashes>
			<Hashes condition="contains">SHA1=ba430f3c77e58a4dc1a9a9619457d1c45a19617f</Hashes>
			<Hashes condition="contains">SHA1=9b3a77a9be44abd750df60beba5bff92e47a96ee</Hashes>
			<Hashes condition="contains">SHA1=25bf4e30a94df9b8f8ab900d1a43fd056d285c9d</Hashes>
			<Hashes condition="contains">SHA1=fe54a1acc5438883e5c1bba87b78bb7322e2c739</Hashes>
			<Hashes condition="contains">SHA1=0a62c574603158d2d0c3be2a43c6bb0074ed297c</Hashes>
			<Hashes condition="contains">SHA1=9648ad90ec683c63cc02a99111a002f9b00478d1</Hashes>
			<Hashes condition="contains">SHA1=8302802b709ad242a81b939b6c90b3230e1a1f1e</Hashes>
			<Hashes condition="contains">SHA1=76568d987f8603339b8d1958f76de2b957811f66</Hashes>
			<Hashes condition="contains">SHA1=6a6fe0d69e0ea34d695c3b525e6db639f9ad6ac5</Hashes>
			<Hashes condition="contains">SHA1=947c76c8c8ba969797f56afd1fa1d1c4a1e3ed25</Hashes>
			<Hashes condition="contains">SHA1=89165bbb761d6742ac2a6f5efbffc80c17990bd8</Hashes>
			<Hashes condition="contains">SHA1=ff3e19cd461ddf67529a765cbec9cb81d84dc7da</Hashes>
			<Hashes condition="contains">SHA1=c577b7c3ca617f8496bec5681581c088e0a94fc5</Hashes>
			<Hashes condition="contains">SHA1=668b0274d350a6d895d140a9700a88156c0db06f</Hashes>
			<Hashes condition="contains">SHA1=86e6669dbbce8228e94b2a9f86efdf528f0714fd</Hashes>
			<Hashes condition="contains">SHA1=d3f6c3ea2ef7124403c0fb6e7e3a0558729b5285</Hashes>
			<Hashes condition="contains">SHA1=675cc00de7c1ef508ccd0c91770c82342c0ad4ab</Hashes>
			<Hashes condition="contains">SHA1=221717a48ee8e2d19470579c987674f661869e17</Hashes>
			<Hashes condition="contains">SHA1=a5914161f8a885702427cf75443fb08d28d904f0</Hashes>
			<Hashes condition="contains">SHA1=4e0f5576804dab14abb29a29edb9616a1dbe280a</Hashes>
			<Hashes condition="contains">SHA1=2c42b38f1cd28f4fc449f7c1a76a4f6aedf38b43</Hashes>
			<Hashes condition="contains">SHA1=37e6450c7cd6999d080da94b867ba23faa8c32fe</Hashes>
			<Hashes condition="contains">SHA1=2779c54ccd1c008cd80e88c2b454d76f4fa18c07</Hashes>
			<Hashes condition="contains">SHA1=04e55c61f01529fb6c579ca5bf3ce81f0241a477</Hashes>
			<Hashes condition="contains">SHA1=867652e062eb6bd1b9fc29e74dea3edd611ef40c</Hashes>
			<Hashes condition="contains">SHA1=3dc2887dbb227d780bf05fd25235d7314a67e9ed</Hashes>
			<Hashes condition="contains">SHA1=77b4f0c0b06e3dc2474d5e250b772dacaac14dd0</Hashes>
			<Hashes condition="contains">SHA1=635a39ff5066e1ac7c1c5995d476d8c233966dda</Hashes>
			<Hashes condition="contains">SHA1=bd39ef9c758e2d9d6037e067fbb2c1f2ac7feac8</Hashes>
			<Hashes condition="contains">SHA1=b2fb5036b29b12bcec04c3152b65b67ca14d61f2</Hashes>
			<Hashes condition="contains">SHA1=b5d1ce7fdd4d73271017b1e3916bb01729829cb8</Hashes>
			<Hashes condition="contains">SHA1=d6de8211dba7074d92b5830618176a3eb8eb6670</Hashes>
			<Hashes condition="contains">SHA1=4c9b9c74529399abacc2284de1dead5f2332ee9b</Hashes>
			<Hashes condition="contains">SHA1=d821fa0c9186a5f863528dc6a3e87b3ff40a1ac5</Hashes>
			<Hashes condition="contains">SHA1=fe237869b2b496deb52c0bc718ada47b36fc052e</Hashes>
			<Hashes condition="contains">SHA1=92138cfc14f9e2271f641547e031d5d63c6de19a</Hashes>
			<Hashes condition="contains">SHA1=613a9df389ad612a5187632d679da11d60f6046a</Hashes>
			<Hashes condition="contains">SHA1=34b677fba9dcab9a9016332b3332ce57f5796860</Hashes>
			<Hashes condition="contains">SHA1=39ce3d1d083474ecbed453a0ec8344c66d51a4ac</Hashes>
			<Hashes condition="contains">SHA1=8d75f08e0ab4502ba0e871204723749596685232</Hashes>
			<Hashes condition="contains">SHA1=064de88dbbea67c149e779aac05228e5405985c7</Hashes>
			<Hashes condition="contains">SHA1=6ae26bde7ec27bd0fa971de6c7500eee34ee9b51</Hashes>
			<Hashes condition="contains">SHA1=6a95860594cd8b7e3636bafa8f812e05359a64ca</Hashes>
			<Hashes condition="contains">SHA1=c80d7fe8279ddfd466505a24b9c8cc7a68b9d0e4</Hashes>
			<Hashes condition="contains">SHA1=36dca91fb4595de38418dffc3506dc78d7388c2c</Hashes>
			<Hashes condition="contains">SHA1=bf5515fcf120c2548355d607cfd57e9b3e0af6e9</Hashes>
			<Hashes condition="contains">SHA1=4ebbaa7e0820e453ca82dab25bf8acde4ba87df2</Hashes>
			<Hashes condition="contains">SHA1=a897b159814a3d61de5dcc0077b2e07bbd6e2711</Hashes>
			<Hashes condition="contains">SHA1=18693de1487c55e374b46a7728b5bf43300d4f69</Hashes>
			<Hashes condition="contains">SHA1=39169c9b79502251ca2155c8f1cd7e63fd9a42e9</Hashes>
			<Hashes condition="contains">SHA1=3d27013557b5e68e7212a2f78dfe60c5a2a46327</Hashes>
			<Hashes condition="contains">SHA1=e42bd2f585c00a1d6557df405246081f89542d15</Hashes>
			<Hashes condition="contains">SHA1=6802e2d2d4e6ee38aa513dafd6840e864310513b</Hashes>
			<Hashes condition="contains">SHA1=d417c0be261b0c6f44afdec3d5432100e420c3ed</Hashes>
			<Hashes condition="contains">SHA1=e179f62fb4f074284945f3ab90406d2d3f19ee73</Hashes>
			<Hashes condition="contains">SHA1=b7ff8536553cb236ea2607941e634b23aadb59ee</Hashes>
			<Hashes condition="contains">SHA1=0291d0457acaf0fe8ed5c3137302390469ce8b35</Hashes>
			<Hashes condition="contains">SHA1=8aa0e832e5ca2eb79dafabadbe9948a191008383</Hashes>
			<Hashes condition="contains">SHA1=ab4399647ebd16c02728c702534a30eb0b7ccbe7</Hashes>
			<Hashes condition="contains">SHA1=09375f13521fc0cacf2cf0a28b2a9248f71498d7</Hashes>
			<Hashes condition="contains">SHA1=aaac157478d24bb6225b489e3b6bad6de5d8d704</Hashes>
			<Hashes condition="contains">SHA1=31fac347aa26e92db4d8c9e1ba37a7c7a2234f08</Hashes>
			<Hashes condition="contains">SHA1=fcae2ea5990189f6f230b51e398e3000b71897f2</Hashes>
			<Hashes condition="contains">SHA1=a264b74f8ff47ae4fac9d3361508adac82e15c0b</Hashes>
			<Hashes condition="contains">SHA1=9c36600c2640007d3410dea8017573a113374873</Hashes>
			<Hashes condition="contains">SHA1=02534b5b510d978bac823461a39f76b4f0ac5aa3</Hashes>
			<Hashes condition="contains">SHA1=2929de0b5b5e1ba1cce1908e9d800aa21f448b3d</Hashes>
			<Hashes condition="contains">SHA1=e730eb971ecb493b69de2308b6412836303f733a</Hashes>
			<Hashes condition="contains">SHA1=0167259abd9231c29bec32e6106ca93a13999f90</Hashes>
			<Hashes condition="contains">SHA1=98588b1d1b63747fa6ee406983bf50ad48a2208b</Hashes>
			<Hashes condition="contains">SHA1=a56598e841ae694ac78c37bf4f8c09f9eaf3271f</Hashes>
			<Hashes condition="contains">SHA1=161bae224cf184ed6c09c77fae866d42412c6d25</Hashes>
			<Hashes condition="contains">SHA1=c9e9198d52d94771cb14711a5f6aaf8d82b602a2</Hashes>
			<Hashes condition="contains">SHA1=c3ca396b5af2064c6f7d05fa0fb697e68d0b9631</Hashes>
			<Hashes condition="contains">SHA1=33a9b4f127141c7995c870a604420c0e770fd81c</Hashes>
			<Hashes condition="contains">SHA1=1b526cbcba09b8d663e82004cf24ef44343030d3</Hashes>
			<Hashes condition="contains">SHA1=8b9dd4c001f17e7835fdaf0d87a2f3e026557e84</Hashes>
			<Hashes condition="contains">SHA1=a63e9ecdebaf4ef9c9ec3362ff110b8859cc396d</Hashes>
			<Hashes condition="contains">SHA1=5b4644ff543993f3b711fdd3e6cbaf52fd036092</Hashes>
			<Hashes condition="contains">SHA1=dc8211cb76ed434f2f627a440604f7c3f8e04a41</Hashes>
			<Hashes condition="contains">SHA1=3ef30c95e40a854cc4ded94fc503d0c3dc3e620e</Hashes>
			<Hashes condition="contains">SHA1=6abbc3003c7aa69ce79cbbcd2e3210b07f21d202</Hashes>
			<Hashes condition="contains">SHA1=1768f9c780fe7cf66928cfceaef8ed7d985e18f5</Hashes>
			<Hashes condition="contains">SHA1=02a9314109e47c5ce52fa553ea57070bf0f8186a</Hashes>
			<Hashes condition="contains">SHA1=3489ed43bdd11ccbfc892baaeae8102ff7d22f25</Hashes>
			<Hashes condition="contains">SHA1=cc65bf60600b64feece5575f21ab89e03a728332</Hashes>
			<Hashes condition="contains">SHA1=197811ec137e9916e6692fc5c28f6d6609ffc20e</Hashes>
			<Hashes condition="contains">SHA1=03506a2f87d1523e844fba22e7617ab2a218b4b7</Hashes>
			<Hashes condition="contains">SHA1=ea4a405445bb6e58c16b81f6d5d2c9a9edde419b</Hashes>
			<Hashes condition="contains">SHA1=5ed22c0033aed380aa154e672e8db3a2d4c195c4</Hashes>
			<Hashes condition="contains">SHA1=8ad0919629731b9a8062f7d3d4a727b28f22e81a</Hashes>
			<Hashes condition="contains">SHA1=ed86bb62893e6ffcdfd2ecae2dea77fdf6bf9bde</Hashes>
			<Hashes condition="contains">SHA1=948368fe309652e8d88088d23e1df39e9c2b6649</Hashes>
			<Hashes condition="contains">SHA1=7d453dccb25bf36c411c92e2744c24f9b801225d</Hashes>
			<Hashes condition="contains">SHA1=8cd9df52b20b8f792ac53f57763dc147d7782b1e</Hashes>
			<Hashes condition="contains">SHA1=005754dab657ddc6dae28eee313ca2cc6a0c375c</Hashes>
			<Hashes condition="contains">SHA1=27371f45f42383029c3c2e6d64a22e35dc772a72</Hashes>
			<Hashes condition="contains">SHA1=9c1c9032aa1e33461f35dbf79b6f2d061bfc6774</Hashes>
			<Hashes condition="contains">SHA1=cf9baf57e16b73d7a4a99dd0c092870deba1a997</Hashes>
			<Hashes condition="contains">SHA1=3d2309f7c937bfcae86097d716a8ef66c1337a3c</Hashes>
			<Hashes condition="contains">SHA1=31cc8718894d6e6ce8c132f68b8caaba39b5ba7a</Hashes>
			<Hashes condition="contains">SHA1=d4cf9296271a9c5c40b0fa34f69b6125c2d14457</Hashes>
			<Hashes condition="contains">SHA1=01a606df49cc2ea19242519b51f7f17d2ba38be2</Hashes>
			<Hashes condition="contains">SHA1=9086e670e3a4518c0bcdf0da131748d4085ef42b</Hashes>
			<Hashes condition="contains">SHA1=e5566684a9e0c1afadae80c3a8be6636f6cad7cf</Hashes>
			<Hashes condition="contains">SHA1=928b5971a0f7525209d599e2ef15c31717047022</Hashes>
			<Hashes condition="contains">SHA1=1ce17c54c6884b0319d5aabbe7f96221f4838514</Hashes>
			<Hashes condition="contains">SHA1=a48aa80942fc8e0699f518de4fd6512e341d4196</Hashes>
			<Hashes condition="contains">SHA1=1048f641adf3988d882a159bf1332eeb6d6a7f09</Hashes>
			<Hashes condition="contains">SHA1=505546d82aab56889a923004654b9afdec54efe6</Hashes>
			<Hashes condition="contains">SHA1=92bb5c6e50d5e05b0cd3852412668b79344127ab</Hashes>
			<Hashes condition="contains">SHA1=fee00dde8080c278a4c4a6d85a5601edc85a1b3d</Hashes>
			<Hashes condition="contains">SHA1=ac18c7847c32957abe8155bcbe71c1f35753b527</Hashes>
			<Hashes condition="contains">SHA1=e841c8494b715b27b33be6f800ca290628507aba</Hashes>
			<Hashes condition="contains">SHA1=261f76e625b0bc71a2cbf1e4b451555c2feeb959</Hashes>
			<Hashes condition="contains">SHA1=6d09d826581baa1817be6fbd44426db9b05f1909</Hashes>
			<Hashes condition="contains">SHA1=0fe2d22bd2e6b7874f4f2b6279e2ca05edd1222a</Hashes>
			<Hashes condition="contains">SHA1=a14cd928c60495777629be283c1d5b8ebbab8c0d</Hashes>
			<Hashes condition="contains">SHA1=f6a18fc9c4abe4a82c1ab28abc0a7259df8de7a3</Hashes>
			<Hashes condition="contains">SHA1=78fd06c82d3ba765c38bad8f48d1821a06280e39</Hashes>
			<Hashes condition="contains">SHA1=1f25f54e9b289f76604e81e98483309612c5a471</Hashes>
			<Hashes condition="contains">SHA1=07f282db28771838d0e75d6618f70d76acfe6082</Hashes>
			<Hashes condition="contains">SHA1=73bac306292b4e9107147db94d0d836fdb071e33</Hashes>
			<Hashes condition="contains">SHA1=de9469a5d01fb84afd41d176f363a66e410d46da</Hashes>
			<Hashes condition="contains">SHA1=994e3f5dd082f5d82f9cc84108a60d359910ba79</Hashes>
			<Hashes condition="contains">SHA1=48f03a13b0f6d3d929a86514ce48a9352ffef5ad</Hashes>
			<Hashes condition="contains">SHA1=03e82eae4d8b155e22ffdafe7ba0c4ab74e8c1a7</Hashes>
			<Hashes condition="contains">SHA1=c7f0423ac5569f13d2b195e02741ad7eed839c6d</Hashes>
			<Hashes condition="contains">SHA1=a8ddb7565b61bc021cd2543a137e00627f999dcc</Hashes>
			<Hashes condition="contains">SHA1=7277d965b9de91b4d8ea5eb8ae7fa3899eef63a2</Hashes>
			<Hashes condition="contains">SHA1=a3c7d629e3db0d9716acaf58132757e17efd8166</Hashes>
			<Hashes condition="contains">SHA1=beed6fb6a96996e9b016fa7f2cf7702a49c8f130</Hashes>
			<Hashes condition="contains">SHA1=c5bd9f2b3a51ba0da08d7c84bab1f2d03a95e405</Hashes>
			<Hashes condition="contains">SHA1=86f34eaea117f629297218a4d196b5729e72d7b9</Hashes>
			<Hashes condition="contains">SHA1=4c8349c6345c8d6101fb896ea0a74d0484c56df0</Hashes>
			<Hashes condition="contains">SHA1=a2fe7de67b3f7d4b1def88ce4ba080f473c0fbc6</Hashes>
			<Hashes condition="contains">SHA1=1f3799fed3cf43254fe30dcdfdb8dc02d82e662b</Hashes>
			<Hashes condition="contains">SHA1=3533d0a54c7ccd83afd6be24f6582b30e4ca0aab</Hashes>
			<Hashes condition="contains">SHA1=f11188c540eada726766e0b0b2f9dd3ae2679c61</Hashes>
			<Hashes condition="contains">SHA1=71469dce9c2f38d0e0243a289f915131bf6dd2a8</Hashes>
			<Hashes condition="contains">SHA1=30a80f560f18609c1123636a8a1a1ef567fa67a7</Hashes>
			<Hashes condition="contains">SHA1=062457182ab08594c631a3f897aeb03c6097eb77</Hashes>
			<Hashes condition="contains">SHA1=eb76de59ebc5b2258cff0567577ff8c9d0042048</Hashes>
			<Hashes condition="contains">SHA1=dcc852461895311b56e3ae774c8e90782a79c0b4</Hashes>
			<Hashes condition="contains">SHA1=17fa047c1f979b180644906fe9265f21af5b0509</Hashes>
			<Hashes condition="contains">SHA1=c42178977bd7bbefe084da0129ed808cb7266204</Hashes>
			<Hashes condition="contains">SHA1=bb5b17cff0b9e15f1648b4136e95bd20d899aef5</Hashes>
			<Hashes condition="contains">SHA1=41ec85e991909519ccb08bc004ba7f0a09f19f50</Hashes>
			<Hashes condition="contains">SHA1=22c9da04847c26188226c3a345e2126ef00aa19e</Hashes>
			<Hashes condition="contains">SHA1=bc62fe2b38008f154fc9ea65d851947581b52f49</Hashes>
			<Hashes condition="contains">SHA1=96e6fce6833ea0f2c81bfe0363393aa3302d6916</Hashes>
			<Hashes condition="contains">SHA1=a5f1b56615bdaabf803219613f43671233f2001c</Hashes>
			<Hashes condition="contains">SHA1=4b882748faf2c6c360884c6812dd5bcbce75ebff</Hashes>
			<Hashes condition="contains">SHA1=a249278a668d4df30af9f5d67ebb7d2cd160beaa</Hashes>
			<Hashes condition="contains">SHA1=43501832ce50ccaba2706be852813d51de5a900f</Hashes>
			<Hashes condition="contains">SHA1=9481cd590c69544c197b4ee055056302978a7191</Hashes>
			<Hashes condition="contains">SHA1=08dd35dde6187af579a1210e00eadbcea29e66d2</Hashes>
			<Hashes condition="contains">SHA1=cb25a5125fb353496b59b910263209f273f3552d</Hashes>
			<Hashes condition="contains">SHA1=9ee31f1f25f675a12b7bad386244a9fbfa786a87</Hashes>
			<Hashes condition="contains">SHA1=0bec69c1b22603e9a385495fbe94700ac36b28e5</Hashes>
			<Hashes condition="contains">SHA1=a3ed5cbfbc17b58243289f3cf575bf04be49591d</Hashes>
			<Hashes condition="contains">SHA1=f92faed3ef92fa5bc88ebc1725221be5d7425528</Hashes>
			<Hashes condition="contains">SHA1=d02403f85be6f243054395a873b41ef8a17ea279</Hashes>
			<Hashes condition="contains">SHA1=6b5aa51f4717d123a468e9e9d3d154e20ca39d56</Hashes>
			<Hashes condition="contains">SHA1=3c1c3f5f5081127229ba0019fbf0efc2a9c1d677</Hashes>
			<Hashes condition="contains">SHA1=6debce728bcff73d9d1d334df0c6b1c3735e295c</Hashes>
			<Hashes condition="contains">SHA1=e6966e360038be3b9d8c9b2582eba4e263796084</Hashes>
			<Hashes condition="contains">SHA1=025c4e1a9c58bf10be99f6562476b7a0166c6b86</Hashes>
			<Hashes condition="contains">SHA1=903934206ee381baf097edba6217029085601a1f</Hashes>
			<Hashes condition="contains">SHA1=5fef884a901e81ac173d63ade3f5c51694decf74</Hashes>
			<Hashes condition="contains">SHA1=80e4808a7fe752cac444676dbbee174367fa2083</Hashes>
			<Hashes condition="contains">SHA1=e9bca8f4b8c60688eacc7d18c6ba7777c181bb84</Hashes>
			<Hashes condition="contains">SHA1=e38e1efd98cd8a3cdb327d386db8df79ea08dccc</Hashes>
			<Hashes condition="contains">SHA1=40df7a55c200371853cc3fd3cc03b5ac932f5cd6</Hashes>
			<Hashes condition="contains">SHA1=a111dc6ae5575977feba71ee69b790e056846a02</Hashes>
			<Hashes condition="contains">SHA1=c75e8fceed74a4024d38ca7002d42e1ecf982462</Hashes>
			<Hashes condition="contains">SHA1=a9146d13e031e7c9ce40b7be7c7dc6dc0e422e54</Hashes>
			<Hashes condition="contains">SHA1=020580278d74d0fe741b0f786d8dca7554359997</Hashes>
			<Hashes condition="contains">SHA1=607387cc90b93d58d6c9a432340261fde846b1d9</Hashes>
			<Hashes condition="contains">SHA1=6c7663de88a0fba1f63a984f926c6ef449059e38</Hashes>
			<Hashes condition="contains">SHA1=115edd175c346fd3fbc9f113ee5ccd03b5511ee1</Hashes>
			<Hashes condition="contains">SHA1=23f562f8d5650b2fb92382d228013f2e36e35d6c</Hashes>
			<Hashes condition="contains">SHA1=f6728821eddd14a21a9536e0f138c6d71cbd9307</Hashes>
			<Hashes condition="contains">SHA256=f8236fc01d4efaa48f032e301be2ebba4036b2cd945982a29046eca03944d2ae</Hashes>
			<Hashes condition="contains">SHA256=618b15970671700188f4102e5d0638184e2723e8f57f7e917fa49792daebdadb</Hashes>
			<Hashes condition="contains">SHA256=fd223833abffa9cd6cc1848d77599673643585925a7ee51259d67c44d361cce8</Hashes>
			<Hashes condition="contains">SHA256=e6f764c3b5580cd1675cbf184938ad5a201a8c096607857869bd7c3399df0d12</Hashes>
			<Hashes condition="contains">SHA256=82ac05fefaa8c7ee622d11d1a378f1d255b647ab2f3200fd323cc374818a83f2</Hashes>
			<Hashes condition="contains">SHA256=f03f0fb3a26bb83e8f8fa426744cf06f2e6e29f5220663b1d64265952b8de1a1</Hashes>
			<Hashes condition="contains">SHA256=41ad660820c41fc8b1860b13dc1fea8bc8cb2faceb36ed3e29d40d28079d2b1f</Hashes>
			<Hashes condition="contains">SHA256=ee525b90053bb30908b5d7bf4c5e9b8b9d6b7b5c9091a26fa25d30d3ad8ef5d0</Hashes>
			<Hashes condition="contains">SHA256=32882949ea084434a376451ff8364243a50485a3b4af2f2240bb5f20c164543d</Hashes>
			<Hashes condition="contains">SHA256=62036cdf3663097534adf3252b921eed06b73c2562655eae36b126c7d3d83266</Hashes>
			<Hashes condition="contains">SHA256=0740359baef32cbb0b14a9d1bd3499ea2e770ff9b1c85898cfac8fd9aca4fa39</Hashes>
			<Hashes condition="contains">SHA256=8922be14c657e603179f1dd94dc32de7c99d2268ac92d429c4fdda7396c32e50</Hashes>
			<Hashes condition="contains">SHA256=4734a0a5d88f44a4939b8d812364cab6ca5f611b9b8ceebe27df6c1ed3a6d8a4</Hashes>
			<Hashes condition="contains">SHA256=200f98655d1f46d2599c2c8605ebb7e335fee3883a32135ca1a81e09819bc64a</Hashes>
			<Hashes condition="contains">SHA256=b7956e31c2fcc0a84bcedf30e5f8115f4e74eed58916253a0c05c8be47283c57</Hashes>
			<Hashes condition="contains">SHA256=ce106afd6a9996ac0150709a30d61ece7d7bfe1f27492c00f4fabab9ec40575d</Hashes>
			<Hashes condition="contains">SHA256=e4b2c0aa28aac5e197312a061b05363e2e0387338b28b23272b5b6659d29b1d8</Hashes>
			<Hashes condition="contains">SHA256=15cf366f7b3ee526db7ce2b5253ffebcbfaa4f33a82b459237c049f854a97c0c</Hashes>
			<Hashes condition="contains">SHA256=930da474a6d1be97b54f2c81e883e14d62897aa58622e5b040e412bd36cee0a7</Hashes>
			<Hashes condition="contains">SHA256=c8f9e1ad7b8cce62fba349a00bc168c849d42cfb2ca5b2c6cc4b51d054e0c497</Hashes>
			<Hashes condition="contains">SHA256=40556dd9b79b755cc0b48d3d024ceb15bd2c0e04960062ab2a85cd7d4d1b724a</Hashes>
			<Hashes condition="contains">SHA256=d41e39215c2c1286e4cd3b1dc0948adefb161f22bc3a78756a027d41614ee4ff</Hashes>
			<Hashes condition="contains">SHA256=02ebf848fa618eba27065db366b15ee6629d98f551d20612ac38b9f655f37715</Hashes>
			<Hashes condition="contains">SHA256=fefc070a5f6a9c0415e1c6f44512a33e8d163024174b30a61423d00d1e8f9bf2</Hashes>
			<Hashes condition="contains">SHA256=54942b92790dc0b84c56d4a00f3ac419b0a506344ca7e9f1fb666a86dbc4117f</Hashes>
			<Hashes condition="contains">SHA256=62764ddc2dce74f2620cd2efd97a2950f50c8ac5a1f2c1af00dc5912d52f6920</Hashes>
			<Hashes condition="contains">SHA256=9bb09752cf3a464455422909edef518ac18fe63cf5e1e8d9d6c2e68db62e0c87</Hashes>
			<Hashes condition="contains">SHA256=06a0ec9a316eb89cb041b1907918e3ad3b03842ec65f004f6fa74d57955573a4</Hashes>
			<Hashes condition="contains">SHA256=7f4555a940ce1156c9bcea9a2a0b801f9a5e44ec9400b61b14a7b1a6404ffdf6</Hashes>
			<Hashes condition="contains">SHA256=85ca0dcdc52709de21281b8fc131a58440a045cf640643a6d96e5fee13a78b81</Hashes>
			<Hashes condition="contains">SHA256=0052aa88e42055a2eed5ddd17c3499c692360155e5e031a211edfcef577acce3</Hashes>
			<Hashes condition="contains">SHA256=82d928c586159342837cb457f45619f49db38bb91631a82e4f1b373fb994cd73</Hashes>
			<Hashes condition="contains">SHA256=773b4a1efb9932dd5116c93d06681990759343dfe13c0858d09245bc610d5894</Hashes>
			<Hashes condition="contains">SHA256=406b844f4b5c82caf26056c67f9815ad8ecf1e6e5b07d446b456e5ff4a1476f9</Hashes>
			<Hashes condition="contains">SHA256=290bc7822da41f0b5580b27c8d14a2a5c3fbe3e4b6921957b134efc6beeb0aeb</Hashes>
			<Hashes condition="contains">SHA256=f461414a2596555cece5cfee65a3c22648db0082ca211f6238af8230e41b3212</Hashes>
			<Hashes condition="contains">SHA256=6994b32e3f3357f4a1d0abe81e8b62dd54e36b17816f2f1a80018584200a1b77</Hashes>
			<Hashes condition="contains">SHA256=f0474e76cfd36e37e32cfe5c0a9e05ddee17dd5014d7aa8817ea3634a3540a3f</Hashes>
			<Hashes condition="contains">SHA256=8684aec77b4c3cafc1a6594de7e95695fa698625d4206a6c4b201875f76a5b38</Hashes>
			<Hashes condition="contains">SHA256=a78c9871da09fab21aec9b88a4e880f81ecb1ed0fa941f31cc2f041067e8e972</Hashes>
			<Hashes condition="contains">SHA256=1ef7afea0cf2ef246ade6606ef8b7195de9cd7a3cd7570bff90ba1e2422276f6</Hashes>
			<Hashes condition="contains">SHA256=ad938d15ecfd70083c474e1642a88b078c3cea02cdbddf66d4fb1c01b9b29d9a</Hashes>
			<Hashes condition="contains">SHA256=96bf3ee7c6673b69c6aa173bb44e21fa636b1c2c73f4356a7599c121284a51cc</Hashes>
			<Hashes condition="contains">SHA256=6839fcae985774427c65fe38e773aa96ec451a412caa5354ad9e2b9b54ffe6c1</Hashes>
			<Hashes condition="contains">SHA256=9a67626fb468d3f114c23ac73fd8057f43d06393d3eca04da1d6676f89da2d40</Hashes>
			<Hashes condition="contains">SHA256=05b146a48a69dd62a02759487e769bd30d39f16374bc76c86453b4ae59e7ffa4</Hashes>
			<Hashes condition="contains">SHA256=36c65aeb255c06898ffe32e301030e0b74c8bca6fe7be593584b8fdaacd4e475</Hashes>
			<Hashes condition="contains">SHA256=4b97d63ebdeda6941bb8cef5e94741c6cca75237ca830561f2262034805f0919</Hashes>
			<Hashes condition="contains">SHA256=8da085332782708d8767bcace5327a6ec7283c17cfb85e40b03cd2323a90ddc2</Hashes>
			<Hashes condition="contains">SHA256=d7aa8abdda8a68b8418e86bef50c19ef2f34bc66e7b139e43c2a99ab48c933be</Hashes>
			<Hashes condition="contains">SHA256=087270d57f1626f29ba9c25750ca19838a869b73a1f71af50bdf37d6ff776212</Hashes>
			<Hashes condition="contains">SHA256=2faf95a3405578d0e613c8d88d534aa7233da0a6217ce8475890140ab8fb33c8</Hashes>
			<Hashes condition="contains">SHA256=10ad50fcb360dcab8539ea322aaf2270565dc835b7535790937348523d723d6b</Hashes>
			<Hashes condition="contains">SHA256=51805bb537befaac8ce28f2221624cb4d9cefdc0260bc1afd5e0bc97bf1f9f93</Hashes>
			<Hashes condition="contains">SHA256=a85d3fd59bb492a290552e5124bfe3f9e26a3086d69d42ccc44737b5a66673ec</Hashes>
			<Hashes condition="contains">SHA256=07beac65e28ee124f1da354293a3d6ad7250ed1ce29b8342acfd22252548a5af</Hashes>
			<Hashes condition="contains">SHA256=93aa3066ae831cdf81505e1bc5035227dc0e8f06ebbbb777832a17920c6a02fe</Hashes>
			<Hashes condition="contains">SHA256=94b87b1cdaf1d86c2bc4eacef45608d0f16fdd3b981b88cdddc16b6bc64fe25d</Hashes>
			<Hashes condition="contains">SHA256=0181d60506b1f3609217487c2c737621d637e1232f243f68c662d045f44d4873</Hashes>
			<Hashes condition="contains">SHA256=af4f42197f5ce2d11993434725c81ecb6f54025110dedf56be8ffc0e775d9895</Hashes>
			<Hashes condition="contains">SHA256=87565ff08a93a8ff41ea932bf55dec8e0c7e79aba036507ea45df9d81cb36105</Hashes>
			<Hashes condition="contains">SHA256=fdd16a94a71644a8bb52c4e0fbfecb93f04cfe37bd91bac599cf9abfb822762f</Hashes>
			<Hashes condition="contains">SHA256=e7af7bcb86bd6bab1835f610671c3921441965a839673ac34444cf0ce7b2164e</Hashes>
			<Hashes condition="contains">SHA256=23e89fd30a1c7db37f3ea81b779ce9acf8a4294397cbb54cff350d54afcfd931</Hashes>
			<Hashes condition="contains">SHA256=206006a11f233b9ae876952308f6d60d7a75c80b4d530a3e6146a0b4d8cd3e4f</Hashes>
			<Hashes condition="contains">SHA256=deade507504d385d8cae11365a2ac9b5e2773ff9b61624d75ffa882d6bb28952</Hashes>
			<Hashes condition="contains">SHA256=0d10c4b2f56364b475b60bd2933273c8b1ed2176353e59e65f968c61e93b7d99</Hashes>
			<Hashes condition="contains">SHA256=b0a27ac1a8173413de13860d2b2e34cb6bc4d1149f94b62d319042e11d8b004c</Hashes>
			<Hashes condition="contains">SHA256=822982c568b6f44b610f8dc4ab5d94795c33ae08a6a608050941264975c1ecdb</Hashes>
			<Hashes condition="contains">SHA256=08c4b75a9b715647a60b946f3743c4e49a6f5c36c1bc889e741d658508dc50c0</Hashes>
			<Hashes condition="contains">SHA256=beef40f1b4ce0ff2ee5c264955e6b2a0de6fe4089307510378adc83fad77228b</Hashes>
			<Hashes condition="contains">SHA256=85b9d7344bf847349b5d58ebe4d44fd63679a36164505271593ef1076aa163b2</Hashes>
			<Hashes condition="contains">SHA256=e858de280bd72d7538386a73e579580a6d5edba87b66b3671dc180229368be19</Hashes>
			<Hashes condition="contains">SHA256=49c827cf48efb122a9d6fd87b426482b7496ccd4a2dbca31ebbf6b2b80c98530</Hashes>
			<Hashes condition="contains">SHA256=5bc3994612624da168750455b363f2964e1861dba4f1c305df01b970ac02a7ae</Hashes>
			<Hashes condition="contains">SHA256=94c71954ac0b1fd9fa2bd5c506a16302100ba75d9f84f39ee9b333546c714601</Hashes>
			<Hashes condition="contains">SHA256=12b0000698b79ea3c8178b9e87801cc34bad096a151a8779559519deafd4e3f0</Hashes>
			<Hashes condition="contains">SHA256=082a79311da64b6adc3655e79aa090a9262acaac3b917a363b9571f520a17f6a</Hashes>
			<Hashes condition="contains">SHA256=6908ebf52eb19c6719a0b508d1e2128f198d10441551cbfb9f4031d382f5229f</Hashes>
			<Hashes condition="contains">SHA256=b8807e365be2813b7eccd2e4c49afb0d1e131086715638b7a6307cd7d7e9556c</Hashes>
			<Hashes condition="contains">SHA256=56066ed07bad3b5c1474e8fae5ee2543d17d7977369b34450bd0775517e3b25c</Hashes>
			<Hashes condition="contains">SHA256=d25b5e4d07f594c640dcd93cfc8ab3f0a38348150bd0bfae89f404fbb0d811c6</Hashes>
			<Hashes condition="contains">SHA256=749b0e8c8c8b7dda8c2063c708047cfe95afa0a4d86886b31a12f3018396e67c</Hashes>
			<Hashes condition="contains">SHA256=06ddf49ac8e06e6b83fccba1141c90ea01b65b7db592c54ffe8aa6d30a75c0b8</Hashes>
			<Hashes condition="contains">SHA256=69866557566c59772f203c11f5fba30271448e231b65806a66e48f41e3804d7f</Hashes>
			<Hashes condition="contains">SHA256=5c308aede12fefb8145c015a97d7844106df5469de97773cba3bd3d772dc7d24</Hashes>
			<Hashes condition="contains">SHA256=ab811ca59a8a8e92fff3eca9d359a8ed5482e781c97e63dbece046d929d0a79c</Hashes>
			<Hashes condition="contains">SHA256=89036534a3da657882da96d9f211ae41efab4083bd6dbedbeaa2516d1d04cff4</Hashes>
			<Hashes condition="contains">SHA256=ec96b15ce218f97ec1d8f07f13b052d274c4c8438f31daf246ccfaaee5e1bebd</Hashes>
			<Hashes condition="contains">SHA256=b0b80a11802b4a8ca69c818a03e76e7ef57c2e293de456439401e8e6073f8719</Hashes>
			<Hashes condition="contains">SHA256=6b5cf41512255237064e9274ca8f8a3fef820c45aa6067c9c6a0e6f5751a0421</Hashes>
			<Hashes condition="contains">SHA256=18c909a2b8c5e16821d6ef908f56881aa0ecceeaccb5fa1e54995935fcfd12f7</Hashes>
			<Hashes condition="contains">SHA256=ddf427ce55b36db522f638ba38e34cd7b96a04cb3c47849b91e7554bfd09a69a</Hashes>
			<Hashes condition="contains">SHA256=d032001eab6cad4fbef19aab418650ded00152143bd14507e17d62748297c23f</Hashes>
			<Hashes condition="contains">SHA256=793b78e70b3ae3bb400c5a8bc4d2d89183f1d7fc70954aed43df7287248b6875</Hashes>
			<Hashes condition="contains">SHA256=26ef7b27d1afb685e0c136205a92d29b1091e3dcf6b7b39a4ec03fbbdb57cb55</Hashes>
			<Hashes condition="contains">SHA256=36f45a42ebf2de6962db92aaf8845d7f9fd6895bedc31422adcf31c59a79602d</Hashes>
			<Hashes condition="contains">SHA256=167730744bd7cb117aae9931f81d20cbd2ec6eee480388c53d2fc973ede920ea</Hashes>
			<Hashes condition="contains">SHA256=981d03e19f14de0ccffef8fa974797d9cdfef6dafc7349d9bbf27434dc16dede</Hashes>
			<Hashes condition="contains">SHA256=8e035beb02a411f8a9e92d4cf184ad34f52bbd0a81a50c222cdd4706e4e45104</Hashes>
			<Hashes condition="contains">SHA256=5f6fec8f7890d032461b127332759c88a1b7360aa10c6bd38482572f59d2ba8b</Hashes>
			<Hashes condition="contains">SHA256=a906251667a103a484a6888dca3e9c8c81f513b8f037b98dfc11440802b0d640</Hashes>
			<Hashes condition="contains">SHA256=818787057fc60ac8b957aa37d750aa4bace8e6a07d3d28b070022ee6dcd603ab</Hashes>
			<Hashes condition="contains">SHA256=a1e6b431534258954db07039117b3159e889c6b9e757329bbd4126383c60c778</Hashes>
			<Hashes condition="contains">SHA256=8248306bcc5fae20fd4f3d5c44f962c85cddbe020b34a1799350ce2034154b7d</Hashes>
			<Hashes condition="contains">SHA256=704c6ffe786bc83a73fbdcd2edd50f47c3b5053da7da6aa4c10324d389a31db4</Hashes>
			<Hashes condition="contains">SHA256=4d42678df3917c37f44a1506307f1677b9a689efcf350b1acce7e6f64b514905</Hashes>
			<Hashes condition="contains">SHA256=2c14bea0d85c9cad5c5f5c8d0e5442f6deb9e93fe3ad8ea5e8e147821c6f9304</Hashes>
			<Hashes condition="contains">SHA256=8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330</Hashes>
			<Hashes condition="contains">SHA256=312c83a99928c30c1fc55a0a1e7571a63b0e04391abe3392115bb3b7e3f60f47</Hashes>
			<Hashes condition="contains">SHA256=0440ef40c46fdd2b5d86e7feef8577a8591de862cfd7928cdbcc8f47b8fa3ffc</Hashes>
			<Hashes condition="contains">SHA256=c4f041de66ec8cc5ab4a03bbc46f99e073157a4e915a9ab4069162de834ffc5c</Hashes>
			<Hashes condition="contains">SHA256=dfc80e0d468a2c115a902aa332a97e3d279b1fc3d32083e8cf9a4aadf3f54ad1</Hashes>
			<Hashes condition="contains">SHA256=6d68d8a71a11458ddf0cbb73c0f145bee46ef29ce03ad7ece6bd6aa9d31db9b7</Hashes>
			<Hashes condition="contains">SHA256=1afc1d0672c14df8c9e4caa88f5d3b7968421d72c548b6df307e371b9a8776d5</Hashes>
			<Hashes condition="contains">SHA256=2cd7a0c4e8d24404c92e4ed8539b2136028a8ca663f3432e417b00665493e13f</Hashes>
			<Hashes condition="contains">SHA256=b0f1fbadc1d7a77557d3d836f7698bd986a3ec9fc5d534ad3403970f071176f7</Hashes>
			<Hashes condition="contains">SHA256=f936ec4c8164cbd31add659b61c16cb3a717eac90e74d89c47afb96b60120280</Hashes>
			<Hashes condition="contains">SHA256=64d4370843a07e25d4ceb68816015efcaeca9429bb5bb692a88e615b48c7da96</Hashes>
			<Hashes condition="contains">SHA256=82b7fa34ad07dbf9afa63b2f6ed37973a1b4fe35dee90b3cf5c788c15c9f08f7</Hashes>
			<Hashes condition="contains">SHA256=a74e8f94d2c140646a8bb12e3e322c49a97bd1b8a2e4327863d3623f43d65c66</Hashes>
			<Hashes condition="contains">SHA256=c3d48dddef790a45ef9feaa5978ec90c9cd4b2de4746896c446ffa08d488170a</Hashes>
			<Hashes condition="contains">SHA256=c42c1e5c3c04163bf61c3b86b04a5ec7d302af7e254990cef359ac80474299da</Hashes>
			<Hashes condition="contains">SHA256=3855b2df32e0eedec454b25e6e2da6b3df19c4b0f575e45bc06482d4ebce7551</Hashes>
			<Hashes condition="contains">SHA256=e1cb86386757b947b39086cc8639da988f6e8018ca9995dd669bdc03c8d39d7d</Hashes>
			<Hashes condition="contains">SHA256=0d676baac43d9e2d05b577d5e0c516fba250391ab0cb11232a4b17fd97a51e35</Hashes>
			<Hashes condition="contains">SHA256=2fd43a749b5040ebfafd7cdbd088e27ef44341d121f313515ebde460bf3aaa21</Hashes>
			<Hashes condition="contains">SHA256=008fa89822b7a1f91e5843169083202ea580f7b06eb6d5cae091ba844d035f25</Hashes>
			<Hashes condition="contains">SHA256=5c1585b1a1c956c7755429544f3596515dfdf928373620c51b0606a520c6245a</Hashes>
			<Hashes condition="contains">SHA256=770f33259d6fb10f4a32d8a57d0d12953e8455c72bb7b60cb39ce505c507013a</Hashes>
			<Hashes condition="contains">SHA256=af7ca247bf229950fb48674b21712761ac650d33f13a4dca44f61c59f4c9ac46</Hashes>
			<Hashes condition="contains">SHA256=9e56e96df36237e65b3d7dbc490afdc826215158f6278cd579c576c4b455b392</Hashes>
			<Hashes condition="contains">SHA256=569fe70bedd0df8585689b0e88ad8bd0544fdf88b9dbfc2076f4bdbcf89c28aa</Hashes>
			<Hashes condition="contains">SHA256=24c900024d213549502301c366d18c318887630f04c96bf0a3d6ba74e0df164f</Hashes>
			<Hashes condition="contains">SHA256=44ebb0f534e7cdfec06d5234358d219798a313219b214d72aa23afc5a57d7ea9</Hashes>
			<Hashes condition="contains">SHA256=5b932eab6c67f62f097a3249477ac46d80ddccdc52654f8674060b4ddf638e5d</Hashes>
			<Hashes condition="contains">SHA256=1a74c2bde0c9a76486657ccb9c79ea87c9891a32cdd4aa15c7542f7c9487a539</Hashes>
			<Hashes condition="contains">SHA256=099ef4915d7899be543d891b48960c1d1604c55468c1377a6f71ce0e1a33c946</Hashes>
			<Hashes condition="contains">SHA256=60ee78a2b070c830fabb54c6bde0d095dff8fad7f72aa719758b3c41c72c2aa9</Hashes>
			<Hashes condition="contains">SHA256=bed4285d0f8d18f17ddaa53a98a475c87c04c4d167499e24c770da788e5d45f4</Hashes>
			<Hashes condition="contains">SHA256=e8ec06b1fa780f577ff0e8c713e0fd9688a48e0329c8188320f9eb62dfc0667f</Hashes>
			<Hashes condition="contains">SHA256=b9dad0131c51e2645e761b74a71ebad2bf175645fa9f42a4ab0e6921b83306e3</Hashes>
			<Hashes condition="contains">SHA256=090d409f86430e078694e621ad0bd5e458d32aa727f0eb99bda3961577df8d49</Hashes>
			<Hashes condition="contains">SHA256=30061ef383e18e74bb067fbca69544f1a7544e8dc017d4e7633d8379aff4c3c3</Hashes>
			<Hashes condition="contains">SHA256=9b1b15a3aacb0e786a608726c3abfc94968915cedcbd239ddf903c4a54bfcf0c</Hashes>
			<Hashes condition="contains">SHA256=ece76b79feafb38ae4371e104b6dcbb4253ff3b2acbe5bd14ce6e47525c24f4a</Hashes>
			<Hashes condition="contains">SHA256=b0eb4d999e4e0e7c2e33ff081e847c87b49940eb24a9e0794c6aa9516832c427</Hashes>
			<Hashes condition="contains">SHA256=1d23ab46ad547e7eef409b40756aae9246fbdf545d13946f770643f19c715e80</Hashes>
			<Hashes condition="contains">SHA256=c0d88db11d0f529754d290ed5f4c34b4dba8c4f2e5c4148866daabeab0d25f9c</Hashes>
			<Hashes condition="contains">SHA256=c7cd14c71bcac5420872c3d825ff6d4be6a86f3d6a8a584f1a756541efff858e</Hashes>
			<Hashes condition="contains">SHA256=efa56907b9d0ec4430a5d581f490b6b9052b1e979da4dab6a110ab92e17d4576</Hashes>
			<Hashes condition="contains">SHA256=1485c0ed3e875cbdfc6786a5bd26d18ea9d31727deb8df290a1c00c780419a4e</Hashes>
			<Hashes condition="contains">SHA256=cf9451c9ccc5509b9912965f79c2b95eb89d805b2a186d7521d3a262cf5a7a37</Hashes>
			<Hashes condition="contains">SHA256=bb2422e96ea993007f25c71d55b2eddfa1e940c89e895abb50dd07d7c17ca1df</Hashes>
			<Hashes condition="contains">SHA256=8d9a2363b757d3f127b9c6ed8f7b8b018e652369bc070aa3500b3a978feaa6ce</Hashes>
			<Hashes condition="contains">SHA256=2456a7921fa8ab7b9779e5665e6b42fccc019feb9e49a9a28a33ec0a4bb323c4</Hashes>
			<Hashes condition="contains">SHA256=95e5b5500e63c31c6561161a82f7f9373f99b5b1f54b018c4866df4f2a879167</Hashes>
			<Hashes condition="contains">SHA256=4bca0a401b364a5cc1581a184116c5bafa224e13782df13272bc1b748173d1be</Hashes>
			<Hashes condition="contains">SHA256=a0931e16cf7b18d15579e36e0a69edad1717b07527b5407f2c105a2f554224b2</Hashes>
			<Hashes condition="contains">SHA256=26bea3b3ab2001d91202f289b7e41499d810474607db7a0893ceab74f5532f47</Hashes>
			<Hashes condition="contains">SHA256=c4c9c84b211899ceb0d18a839afa497537a7c7c01ab481965a09788a9e16590c</Hashes>
			<Hashes condition="contains">SHA256=ea50f22daade04d3ca06dedb497b905215cba31aae7b4cab4b533fda0c5be620</Hashes>
			<Hashes condition="contains">SHA256=bc49cb96f3136c3e552bf29f808883abb9e651040415484c1736261b52756908</Hashes>
			<Hashes condition="contains">SHA256=3033ff03e6f523726638b43d954bc666cdd26483fa5abcf98307952ff88f80ee</Hashes>
			<Hashes condition="contains">SHA256=2da2b883e48e929f5365480d487590957d9e6582cc6da2c0b42699ba85e54fe2</Hashes>
			<Hashes condition="contains">SHA256=ef9d653aaa2e629b211cd367a32c381eba694ba85682b987497c287d7dbc0082</Hashes>
			<Hashes condition="contains">SHA256=4dc24fd07f8fb854e685bc540359c59f177de5b91231cc44d6231e33c9e932b1</Hashes>
			<Hashes condition="contains">SHA256=07759750fbb93c77b5c3957c642a9498fcff3946a5c69317db8d6be24098a4a0</Hashes>
			<Hashes condition="contains">SHA256=139f8412a7c6fdc43dcfbbcdba256ee55654eb36a40f338249d5162a1f69b988</Hashes>
			<Hashes condition="contains">SHA256=ee7b8eb150df2788bb9d5fe468327899d9f60d6731c379fd75143730a83b1c55</Hashes>
			<Hashes condition="contains">SHA256=b6cb163089f665c05d607a465f1b6272cdd5c949772ab9ce7227120cf61f971a</Hashes>
			<Hashes condition="contains">SHA256=7a7e8df7173387aec593e4fe2b45520ea3156c5f810d2bb1b2784efd1c922376</Hashes>
			<Hashes condition="contains">SHA256=a2d32c28eb5945b85872697d7cfbe87813c09a0e1be28611563755f68b9cb88b</Hashes>
			<Hashes condition="contains">SHA256=888491196bd8ff528b773a3e453eae49063ad31fb4ca0f9f2e433f8d35445440</Hashes>
			<Hashes condition="contains">SHA256=3ca5d47d076e99c312578ef6499e1fa7b9db88551cfc0f138da11105aca7c5e1</Hashes>
			<Hashes condition="contains">SHA256=fa9abb3e7e06f857be191a1e049dd37642ec41fb2520c105df2227fcac3de5d5</Hashes>
			<Hashes condition="contains">SHA256=80e4c83cfa9d675a6746ab846fa5da76d79e87a9297e94e595a2d781e02673b3</Hashes>
			<Hashes condition="contains">SHA256=492113a223d6a3fc110059fe46a180d82bb8e002ef2cd76cbf0c1d1eb8243263</Hashes>
			<Hashes condition="contains">SHA256=7af2ff5d405cf9cd1aee2410a969ba22d6df78d98e9d4e60cbe624d8a3bc64a6</Hashes>
			<Hashes condition="contains">SHA256=6661320f779337b95bbbe1943ee64afb2101c92f92f3d1571c1bf4201c38c724</Hashes>
			<Hashes condition="contains">SHA256=8dafe5f3d0527b66f6857559e3c81872699003e0f2ffda9202a1b5e29db2002e</Hashes>
			<Hashes condition="contains">SHA256=29348ebe12d872c5f40e316a0043f7e5babe583374487345a79bad0ba93fbdfe</Hashes>
			<Hashes condition="contains">SHA256=4d8bc539ca7c72e552b7065d2a84fef43b75a46a53c82b50556c2984e0a86a9e</Hashes>
			<Hashes condition="contains">SHA256=4fc254af8ebfa6fc1050f65c17015b39b36693b58f029c2fa1873976cbca52df</Hashes>
			<Hashes condition="contains">SHA256=52d5c35325ce701516f8b04380c9fbdb78ec6bcc13b444f758fdb03d545b0677</Hashes>
			<Hashes condition="contains">SHA256=146b8f4fc91a4915e8f6aa6e0d871f7161a809c46760ef602bab534836142436</Hashes>
			<Hashes condition="contains">SHA256=bfcbc010432a89714349bd487555cec1ab5299a70f533a16d326a69e15e0c203</Hashes>
			<Hashes condition="contains">SHA256=aaf04d89fd15bc61265e545f8e1da80e20f59f90058ed343c62ee24358e3af9e</Hashes>
			<Hashes condition="contains">SHA256=0a6366066bc6003f347eadc6fe6c8994fded09fb7d5d24d0ddac3936ae1437a7</Hashes>
			<Hashes condition="contains">SHA256=14b89298134696f2fd1b1df0961d36fa6354721ea92498a349dc421e79447925</Hashes>
			<Hashes condition="contains">SHA256=b4f33ffef069c18e8a8834eb448dd1f1dbdaae93b140cfff5a1db015eb3ada2f</Hashes>
			<Hashes condition="contains">SHA256=d50cb5f4b28c6c26f17b9d44211e515c3c0cc2c0c4bf24cd8f9ed073238053ad</Hashes>
			<Hashes condition="contains">SHA256=4c89c907b7525b39409af1ad11cc7d2400263601edafc41c935715ef5bd145de</Hashes>
			<Hashes condition="contains">SHA256=9dc7beb60a0a6e7238fc8589b6c2665331be1e807b4d2b3ddd1c258dbbd3e2f7</Hashes>
			<Hashes condition="contains">SHA256=0f58e09651d48d2b1bcec7b9f7bb85a2d1a7b65f7a51db281fe0c4f058a48597</Hashes>
			<Hashes condition="contains">SHA256=d43520128871c83b904f3136542ea46644ac81a62d51ae9d3c3a3f32405aad96</Hashes>
			<Hashes condition="contains">SHA256=19dfacea1b9f19c0379f89b2424ceb028f2ce59b0db991ba83ae460027584987</Hashes>
			<Hashes condition="contains">SHA256=1a5c08d40a5e73b9fe63ea5761eaec8f41d916ca3da2acbc4e6e799b06af5524</Hashes>
			<Hashes condition="contains">SHA256=4f9b5a2fe29c436a53d36d8a2084369ac6a8cd59b9eb01b3d3fa293f3487d3cc</Hashes>
			<Hashes condition="contains">SHA256=42ff11ddb46dfe5fa895e7babf88ee27790cde53a9139fc384346a89e802a327</Hashes>
			<Hashes condition="contains">SHA256=083a311875173f8c4653e9bbbabb689d14aa86b852e7fa9f5512fc60e0fd2c43</Hashes>
			<Hashes condition="contains">SHA256=497a836693be1b330993e2be64f6c71bf290c127faca1c056abd0dc374654830</Hashes>
			<Hashes condition="contains">SHA256=a32dc2218fb1f538fba33701dfd9ca34267fda3181e82eb58b971ae8b78f0852</Hashes>
			<Hashes condition="contains">SHA256=e99580e25f419b5ad90669e0c274cf63d30efa08065d064a863e655bdf77fb59</Hashes>
			<Hashes condition="contains">SHA256=eab9b5b7e5fab1c2d7d44cd28f13ae8bb083d9362d2b930d43354a3dfd38e05a</Hashes>
			<Hashes condition="contains">SHA256=f9b01406864ab081aa77eef4ad15cb2dd2f830d1ef54f52622a59ff1aeb05ba5</Hashes>
			<Hashes condition="contains">SHA256=443c0ba980d4db9213b654a45248fd855855c1cc81d18812cae9d16729ff9a85</Hashes>
			<Hashes condition="contains">SHA256=4421ff85aacbcc36695a018c5c47e884d56d62d7d5b8172bb70384ffc4d6a2e4</Hashes>
			<Hashes condition="contains">SHA256=50819a1add4c81c0d53203592d6803f022443440935ff8260ff3b6d5253c0c76</Hashes>
			<Hashes condition="contains">SHA256=751e9376cb7cb9de63e1808d43579d787d3f6d659173038fe44a2d7fdb4fd17e</Hashes>
			<Hashes condition="contains">SHA256=30e083cd7616b1b969a92fd18cf03097735596cce7fcf3254b2ca344e526acc2</Hashes>
			<Hashes condition="contains">SHA256=c7bccc6f38403def4690e00a0b31eda05973d82be8953a3379e331658c51b231</Hashes>
			<Hashes condition="contains">SHA256=083f821d90e607ed93221e71d4742673e74f573d0755a96ad17d1403f65a2254</Hashes>
			<Hashes condition="contains">SHA256=a7a665a695ec3c0f862a0d762ad55aff6ce6014359647e7c7f7e3c4dc3be81b7</Hashes>
			<Hashes condition="contains">SHA256=0aab2deae90717a8876d46d257401d265cf90a5db4c57706e4003c19eee33550</Hashes>
			<Hashes condition="contains">SHA256=7433f14b40c674c5e87b6210c330d5bcaf2f6f52d632ae29e9b7cf3ca405665b</Hashes>
			<Hashes condition="contains">SHA256=82b0e1d7a27b67f0e6dc39dc41e880bdaef5d1f69fcec38e08da2ed78e805ef9</Hashes>
			<Hashes condition="contains">SHA256=d7c81b0f3c14844f6424e8bdd31a128e773cb96cccef6d05cbff473f0ccb9f9c</Hashes>
			<Hashes condition="contains">SHA256=47356707e610cfd0be97595fbe55246b96a69141e1da579e6f662ddda6dc5280</Hashes>
			<Hashes condition="contains">SHA256=8b30b2dc36d5e8f1ffc7281352923773fb821cdf66eb6516f82c697a524b599b</Hashes>
			<Hashes condition="contains">SHA256=52f3905bbd97dcd2dbd22890e5e8413b9487088f1ee2fa828030a6a45b3975fd</Hashes>
			<Hashes condition="contains">SHA256=f3ec3f22639d45b3c865bb1ed7622db32e04e1dbc456298be02bf1f3875c3aac</Hashes>
			<Hashes condition="contains">SHA256=7662187c236003308a7951c2f49c0768636c492f8935292d02f69e59b01d236d</Hashes>
			<Hashes condition="contains">SHA256=e5ddfa39540d4e7ada56cdc1ebd2eb8c85a408ec078337488a81d1c3f2aaa4ff</Hashes>
			<Hashes condition="contains">SHA256=accb1a6604efb1b3ce9345c9fd62fe717a84c3e089e09c638e461df89193ef01</Hashes>
			<Hashes condition="contains">SHA256=21617210249d2a35016e8ca6bd7a1edda25a12702a2294d56010ee8148637f5a</Hashes>
			<Hashes condition="contains">SHA256=d9f15d91397d1c8d01b6d6871c4f18f3a85ca85f091a92f4e9221524344ca5fe</Hashes>
			<Hashes condition="contains">SHA256=4999541c47abd4a7f2a002c180ae8d31c19804ce538b85870b8db53d3652862b</Hashes>
			<Hashes condition="contains">SHA256=baf7fbc4743a81eb5e4511023692b2dfdc32ba670ba3e4ed8c09db7a19bd82d3</Hashes>
			<Hashes condition="contains">SHA256=7b846b0a717665e4d9fb313f25d1f6a5b782e495387aea45cf87ad3c049ac0db</Hashes>
			<Hashes condition="contains">SHA256=88076e98d45ed3adf0c5355411fe8ca793eb7cec1a1c61f5e1ec337eae267463</Hashes>
			<Hashes condition="contains">SHA256=b2486f9359c94d7473ad8331b87a9c17ca9ba6e4109fd26ce92dff01969eaa09</Hashes>
			<Hashes condition="contains">SHA256=0ffb4081fe867c98118e472538e8a3e6feac2a9d80b5ae2d4e2b621b344cd6d9</Hashes>
			<Hashes condition="contains">SHA256=3b2cd65a4fbdd784a6466e5196bc614c17d1dbaed3fd991d242e3be3e9249da6</Hashes>
			<Hashes condition="contains">SHA256=e1123b59a801e243a64270d0c6ab1277e5e3afba9c19023807409f53c1b0204b</Hashes>
			<Hashes condition="contains">SHA256=bcca03ce1dd040e67eb71a7be0b75576316f0b6587b2058786fda8b6f0a5adfd</Hashes>
			<Hashes condition="contains">SHA256=df72cb33a23ae8f6f9dc64bb738fcfaea959368ce05cf399f3c7db5e90104bd7</Hashes>
			<Hashes condition="contains">SHA256=89698cad598a56f9e45efffd15d1841e494a2409cc12279150a03842cd6bb7f3</Hashes>
			<Hashes condition="contains">SHA256=d1ea9e16cefbec53a65a290bb42ee9d6e31218b9d4dfca676b66373cece9a54a</Hashes>
			<Hashes condition="contains">SHA256=b169a5f643524d59330fafe6e3e328e2179fc5116ee6fae5d39581467d53ac03</Hashes>
			<Hashes condition="contains">SHA256=469713c76c7a887826611b8c7180209a8bb6250f91d0f1eb84ac4d450ef15870</Hashes>
			<Hashes condition="contains">SHA256=627e13da6a45006fff4711b14754f9ccfac9a5854d275da798a22f3a68dd1eaa</Hashes>
			<Hashes condition="contains">SHA256=6964a5d85639baee288555797992861232e75817f93028b50b8c6d34aa38b05b</Hashes>
			<Hashes condition="contains">SHA256=0f98492c92e35042b09032e3d9aedc357e4df94fc840217fa1091046f9248a06</Hashes>
			<Hashes condition="contains">SHA256=5d61e4ea1b1294d5a042feb152dc5f9aa1397c45c3ed583621279dd4e69be418</Hashes>
			<Hashes condition="contains">SHA256=897f2bbe81fc3b1ae488114b93f3eb0133a85678d061c7a6f718507971f33736</Hashes>
			<Hashes condition="contains">SHA256=8206ce9c42582ac980ff5d64f8e3e310bc2baa42d1a206dd831c6ab397fbd8fe</Hashes>
			<Hashes condition="contains">SHA256=06c5ebd0371342d18bc81a96f5e5ce28de64101e3c2fd0161d0b54d8368d2f1f</Hashes>
			<Hashes condition="contains">SHA256=2ce4f8089b02017cbe86a5f25d6bc69dd8b6f5060c918a64a4123a5f3be1e878</Hashes>
			<Hashes condition="contains">SHA256=4bd4715d2a7af627da11513e32fab925c872babebdb7ff5675a75815fbf95021</Hashes>
			<Hashes condition="contains">SHA256=8b32fc8b15363915605c127ccbf5cbe71778f8dfbf821a25455496e969a01434</Hashes>
			<Hashes condition="contains">SHA256=be70be9d84ae14ea1fa5ec68e2a61f6acfe576d965fe51c6bac78fba01a744fb</Hashes>
			<Hashes condition="contains">SHA256=575e58b62afab094c20c296604dc3b7dd2e1a50f5978d8ee24b7dca028e97316</Hashes>
			<Hashes condition="contains">SHA256=9c2f3e9811f7d0c7463eaa1ee6f39c23f902f3797b80891590b43bbe0fdf0e51</Hashes>
			<Hashes condition="contains">SHA256=0f7bfa10075bf5c193345866333d415509433dbfe5a7d45664b88d72216ff7c3</Hashes>
			<Hashes condition="contains">SHA256=4136f1eb11cc463a858393ea733d5f1c220a3187537626f7f5d63eccf7c5a03f</Hashes>
			<Hashes condition="contains">SHA256=2c1b65c2988b337182f1ba57b404793454e30a7fd328d34bc2e79857dc437a4a</Hashes>
			<Hashes condition="contains">SHA256=f6157e033a12520c73dcedf8e49cd42d103e5874c34d6527bb9de25a5d26e5ad</Hashes>
			<Hashes condition="contains">SHA256=7824931e55249a501074a258b4f65cd66157ee35672ba17d1c0209f5b0384a28</Hashes>
			<Hashes condition="contains">SHA256=f9f2091fccb289bcf6a945f6b38676ec71dedb32f3674262928ccaf840ca131a</Hashes>
			<Hashes condition="contains">SHA256=c4fb31e3f24e40742a1b9855a2d67048fe64b26d8d2dbcec77d2d5deeded2bcc</Hashes>
			<Hashes condition="contains">SHA256=aafa642ca3d906138150059eeddb6f6b4fe9ad90c6174386cfe13a13e8be47d9</Hashes>
			<Hashes condition="contains">SHA256=42b22faa489b5de936db33f12184f6233198bdf851a18264d31210207827ba25</Hashes>
			<Hashes condition="contains">SHA256=668c5bead3c7fcd919afd742ede7e5fe07972dc4cf730ff37deabdd22d88de4a</Hashes>
			<Hashes condition="contains">SHA256=b34e2d9f3d4ef59cf7af18e17133a6a06509373e69e33c8eecb2e30501d0d9e4</Hashes>
			<Hashes condition="contains">SHA256=28f5aa194a384680a08c0467e94a8fc40f8b0f3f2ac5deb42e0f51a80d27b553</Hashes>
			<Hashes condition="contains">SHA256=b8c71e1844e987cd6f9c2baf28d9520d4ccdd8593ce7051bb1b3c9bf1d97076a</Hashes>
			<Hashes condition="contains">SHA256=2f43f4251be4d72dd56c91bf6cce475d379eb9ba6c4dda2be3022ea633d5e807</Hashes>
			<Hashes condition="contains">SHA256=c13f5bc4edfbe8f1884320c5d76ca129d00de41a1e61d45195738f125dfe60a7</Hashes>
			<Hashes condition="contains">SHA256=81c7bb39100d358f8286da5e9aa838606c98dfcc263e9a82ed91cd438cb130d1</Hashes>
			<Hashes condition="contains">SHA256=c8ae217860f793fce3ad0239d7b357dba562824dd7177c9d723ca4d4a7f99a12</Hashes>
			<Hashes condition="contains">SHA256=a6deeea6607a7da9c8b4087d1424aac6dbbe70831e93c835b5a9e4a80ae59f28</Hashes>
			<Hashes condition="contains">SHA256=4af8192870afe18c77381dfaf8478f8914fa32906812bb53073da284a49ae4c7</Hashes>
			<Hashes condition="contains">SHA256=a42f4ae69b8755a957256b57eb3d319678eab81705f0ffea0d649ace7321108f</Hashes>
			<Hashes condition="contains">SHA256=e6a7b0bc01a627a7d0ffb07faddb3a4dd96b6f5208ac26107bdaeb3ab1ec8217</Hashes>
			<Hashes condition="contains">SHA256=4f02aed3750bc6a924c75e774404f259f721d8f4081ed68aa01cf73ca5430f85</Hashes>
			<Hashes condition="contains">SHA256=bcb774b6f6ff504d2db58096601bc5cb419c169bfbeaa3af852417e87d9b2aa0</Hashes>
			<Hashes condition="contains">SHA256=29d765e29d2f06eb511ee88b2e514c9df1a9020a768ddd3d2278d9045e9cdb4a</Hashes>
			<Hashes condition="contains">SHA256=31b66a57fae0cc28a6a236d72a35c8b6244f997e700f9464f9cbf800dbf8bee6</Hashes>
			<Hashes condition="contains">SHA256=7a84703552ae032a0d1699a081e422ed6c958bbe56d5b41839c8bfa6395bee1d</Hashes>
			<Hashes condition="contains">SHA256=f6c316e2385f2694d47e936b0ac4bc9b55e279d530dd5e805f0d963cb47c3c0d</Hashes>
			<Hashes condition="contains">SHA256=d37996abc8efb29f1ccbb4335ce9ba9158bec86cc4775f0177112e87e4e3be5c</Hashes>
			<Hashes condition="contains">SHA256=673bbc7fa4154f7d99af333014e888599c27ead02710f7bc7199184b30b38653</Hashes>
			<Hashes condition="contains">SHA256=9a42fa1870472c38a56c0a70f62e57a3cdc0f5bc142f3a400d897b85d65800ac</Hashes>
			<Hashes condition="contains">SHA256=77225a99b2e0e2b4007fb2f5a96d356e13deab45b9ef54c175d5452de8a211a7</Hashes>
			<Hashes condition="contains">SHA256=e8743094f002239a8a9d6d7852c7852e0bb63cd411b007bd8c194bcba159ef15</Hashes>
			<Hashes condition="contains">SHA256=5295080de37d4838e15dec4e3682545033d479d3d9ac28d74747c086559fb968</Hashes>
			<Hashes condition="contains">SHA256=da70fa44290f949e9b3e0fcfe0503de46e82e0472e8e3c360da3fd2bfa364eee</Hashes>
			<Hashes condition="contains">SHA256=86047bb1969d1db455493955fd450d18c62a3f36294d0a6c3732c88dfbcc4f62</Hashes>
			<Hashes condition="contains">SHA256=ac5fb90e88d8870cd5569e661bea98cf6b001d83ab7c65a5196ea3743146939a</Hashes>
			<Hashes condition="contains">SHA256=94ba4bcbdb55d6faf9f33642d0072109510f5c57e8c963d1a3eb4f9111f30112</Hashes>
			<Hashes condition="contains">IMPHASH=e3ee9131742bf9c9d43cb9a425e497dd</Hashes>
			<Hashes condition="contains">IMPHASH=f8e4844312e81dbdb4e8e95e2ad2c127</Hashes>
			<Hashes condition="contains">IMPHASH=28dc68bb6d6bf4f6b2db8dd7588b2511</Hashes>
			<Hashes condition="contains">IMPHASH=0a36076c1d71bc5362d962fbe0089ccb</Hashes>
			<Hashes condition="contains">IMPHASH=2a008187d4a73284ddcc43f1b727b513</Hashes>
			<Hashes condition="contains">IMPHASH=4c7cc13a110ccdbb932bb9d7d42efdf4</Hashes>
			<Hashes condition="contains">IMPHASH=7bf14377888c429897eb10a85f70266c</Hashes>
			<Hashes condition="contains">IMPHASH=5ea7a944eb3873467dc30aafabea2752</Hashes>
			<Hashes condition="contains">IMPHASH=059c6bd84285f4960e767f032b33f19b</Hashes>
			<Hashes condition="contains">IMPHASH=45bfe170e0cd654bc1e2ae3fca3ac3f4</Hashes>
			<Hashes condition="contains">IMPHASH=0ca72f969ffaacca4008ae469f9508a4</Hashes>
			<Hashes condition="contains">IMPHASH=5961803e998a48ab6f2322c35124b67b</Hashes>
			<Hashes condition="contains">IMPHASH=d7ca9fd5bbf7e42108ec1b971ba58840</Hashes>
			<Hashes condition="contains">IMPHASH=70e1caa5a322b56fd7951f1b2caacb0d</Hashes>
			<Hashes condition="contains">IMPHASH=fca0f3c7b6d79f494034b9d2a1f5921a</Hashes>
			<Hashes condition="contains">IMPHASH=41113a3a832353963112b94f4635a383</Hashes>
			<Hashes condition="contains">IMPHASH=378f84e7908c5658a205183008105ce5</Hashes>
			<Hashes condition="contains">IMPHASH=3b49942ec6cef1898e97f741b2b5df8a</Hashes>
			<Hashes condition="contains">IMPHASH=bf06985f2031c08da05742e19dae38a7</Hashes>
			<Hashes condition="contains">IMPHASH=cf0eb2dce2ba2c9ff5dd0da794b8b372</Hashes>
			<Hashes condition="contains">IMPHASH=7d86ef6f47b0f5c432d168eae5b4dfcf</Hashes>
			<Hashes condition="contains">IMPHASH=832219eb71b8bdb771f1d29d27b0acf4</Hashes>
			<Hashes condition="contains">IMPHASH=70295ac5b1bb4091ca166a48afe3cd3a</Hashes>
			<Hashes condition="contains">IMPHASH=65ccc2c578a984c31880b6c5e65257d3</Hashes>
			<Hashes condition="contains">IMPHASH=e97dc162f416bf06745bf9ffdf78a0ff</Hashes>
			<Hashes condition="contains">IMPHASH=b72d2bef646e421c7a0789881378490f</Hashes>
			<Hashes condition="contains">IMPHASH=7d017945bf90936a6c40f73f91ed02c2</Hashes>
			<Hashes condition="contains">IMPHASH=3fd33d5b3b52e2db91983ac4b1d7a3c4</Hashes>
			<Hashes condition="contains">IMPHASH=93beecb302ac644a6548383c670392d3</Hashes>
			<Hashes condition="contains">IMPHASH=3db9de43d5d530c10d0cd2d43c7a0771</Hashes>
			<Hashes condition="contains">IMPHASH=624bb416cf7e307d07c40e2450d02cd0</Hashes>
			<Hashes condition="contains">IMPHASH=8d5129d39204fcf88ffca488305e4480</Hashes>
			<Hashes condition="contains">IMPHASH=ce10082e1aa4c1c2bd953b4a7208e56a</Hashes>
			<Hashes condition="contains">IMPHASH=be0dd8b8e045356d600ee55a64d9d197</Hashes>
			<Hashes condition="contains">IMPHASH=c5b5294afddf5831c39471a323019e4e</Hashes>
			<Hashes condition="contains">IMPHASH=beceab354c66949088c9e5ed1f1ff2a4</Hashes>
			<Hashes condition="contains">IMPHASH=9050905feaae8f52f58d56b3fdb862de</Hashes>
			<Hashes condition="contains">IMPHASH=cbda50455881775aa63196aa112c08c5</Hashes>
			<Hashes condition="contains">IMPHASH=d64782c3afa48a2c32e43633d44dd9a9</Hashes>
			<Hashes condition="contains">IMPHASH=b6839c3b1c51c236429c9dcd0ebce978</Hashes>
			<Hashes condition="contains">IMPHASH=ea37e43ffc7cfcba181c5cff37a9be1f</Hashes>
			<Hashes condition="contains">IMPHASH=4859205cb010367bf6f38080900035fb</Hashes>
			<Hashes condition="contains">IMPHASH=3c5d2ffd06074f1b09c89465cc8bfbf7</Hashes>
			<Hashes condition="contains">IMPHASH=6b387c029257f024a43a73f38afb2629</Hashes>
			<Hashes condition="contains">IMPHASH=acfd876a8d041c6baf407a21a36cf484</Hashes>
			<Hashes condition="contains">IMPHASH=6c8d5c79a850eecc2fb0291cebda618d</Hashes>
			<Hashes condition="contains">IMPHASH=0ad7da35304c75ccf859bc29fe9ed09e</Hashes>
			<Hashes condition="contains">IMPHASH=7e58835e3886a2ff4d2230f8bf78639e</Hashes>
			<Hashes condition="contains">IMPHASH=53ae9acf513f6b93672a362615da5fbb</Hashes>
			<Hashes condition="contains">IMPHASH=f4feb75af58dedd4a6974281dcbffc60</Hashes>
			<Hashes condition="contains">IMPHASH=a6c4a7369500900fc172f9557cff22cf</Hashes>
			<Hashes condition="contains">IMPHASH=420625b024fba72a24025defdf95b303</Hashes>
			<Hashes condition="contains">IMPHASH=c32d9a9af7f702814e1368c689877f3a</Hashes>
			<Hashes condition="contains">IMPHASH=87fd2b54ed568e2294300e164b8c46f7</Hashes>
			<Hashes condition="contains">IMPHASH=a09170ef09c55cdca9472c02cb1f2647</Hashes>
			<Hashes condition="contains">IMPHASH=3dbe8de1ea987f3a487f28ce6f06feb7</Hashes>
			<Hashes condition="contains">IMPHASH=8d070a93a45ed8ba6dba6bfbe0d084e7</Hashes>
			<Hashes condition="contains">IMPHASH=743ecae1e3cf27ca1ec49e662e4b8e86</Hashes>
			<Hashes condition="contains">IMPHASH=b351627263648b1d220bb488e7ec7202</Hashes>
			<Hashes condition="contains">IMPHASH=26ceec6572c630bdad60c984e51b7da4</Hashes>
			<Hashes condition="contains">IMPHASH=0262d4147f21d681f8519ab2af79283f</Hashes>
			<Hashes condition="contains">IMPHASH=2de3451f3e7b02970582bb8f9fd8c73a</Hashes>
			<Hashes condition="contains">IMPHASH=7641a0c227f0a3a45b80bb8af43cd152</Hashes>
			<Hashes condition="contains">IMPHASH=f0c41590bbc46e6d23dd089a0ef51dd4</Hashes>
			<Hashes condition="contains">IMPHASH=514298d18002920ee5a917fc34426417</Hashes>
			<Hashes condition="contains">IMPHASH=5bfe3723089cbcfcc271ba6d7ab617aa</Hashes>
			<Hashes condition="contains">IMPHASH=a998fe47a44bfbf2399968e21cfdf7ca</Hashes>
			<Hashes condition="contains">IMPHASH=bf9d32a6ab9effcd2fd6a734e5be98f9</Hashes>
			<Hashes condition="contains">IMPHASH=4b47f6031c558106eee17655f8f8a32f</Hashes>
			<Hashes condition="contains">IMPHASH=96861132665e8d66c0a91e6c02cc6639</Hashes>
			<Hashes condition="contains">IMPHASH=4acb54175cf28b6cb60fc93a8cd171e4</Hashes>
			<Hashes condition="contains">IMPHASH=dbf09dd3e675f15c7cc9b4d2b8e6cd90</Hashes>
			<Hashes condition="contains">IMPHASH=e717abe060bc5c34925fe3120ac22f45</Hashes>
			<Hashes condition="contains">IMPHASH=27f6dc8a247a22308dd1beba5086b302</Hashes>
			<Hashes condition="contains">IMPHASH=caa08a0ba5f679b1e5bbae747cb9d626</Hashes>
			<Hashes condition="contains">IMPHASH=8e35c9460537092672b3c7c14bccc7e0</Hashes>
			<Hashes condition="contains">IMPHASH=7df0d3ee663fc0e7c72a95e44ba4c82c</Hashes>
			<Hashes condition="contains">IMPHASH=a7bd820fa5b895fab06f20739c9f24b8</Hashes>
			<Hashes condition="contains">IMPHASH=c9a6e83d931286d1604d1add8403e1e5</Hashes>
			<Hashes condition="contains">IMPHASH=df43355c636583e56e92142dcc69cc58</Hashes>
			<Hashes condition="contains">IMPHASH=c214aac08575c139e48d04f5aee21585</Hashes>
			<Hashes condition="contains">IMPHASH=63fd1582ac2edee50f7ec7eedde38ee8</Hashes>
			<Hashes condition="contains">IMPHASH=3866dd9fe63de457bdbf893bf7050ddf</Hashes>
			<Hashes condition="contains">IMPHASH=63ef87ab3b1750e564436dc6e6428fa9</Hashes>
			<Hashes condition="contains">IMPHASH=bb607f74958acb5ad3d1bbcb8a7407e3</Hashes>
			<Hashes condition="contains">IMPHASH=d51f0f6034eb5e45f0ed4e9b7bbc9c97</Hashes>
		</FileBlockExecutable>
	</RuleGroup>
			
	<!--SYSMON EVENT ID 28 : FILE BLOCK SHREDDING [FileBlockShredding]-->
		<!--EVENT 28: "File Block Shredding"-->
		<!--COMMENT: This event is generated when Sysmon detects and blocks file shredding from tools such as SDelete.-->
		
	<RuleGroup name="" groupRelation="or">
		<FileBlockShredding onmatch="include">
			<Image condition="image">sdelete.exe</Image>
			<Image condition="image">sdelete64.exe</Image>
			<Image condition="image">sdelete64a.exe</Image>
		</FileBlockShredding>
	</RuleGroup>
				
	<!--SYSMON EVENT ID 29 : FILE EXECUTABLE DETECTED [FileExecutableDetected]-->
		<!--EVENT 29: "File Executable Detected"-->
		<!--COMMENT: This event is generated when Sysmon detects the creation of a new executable file (PE format).-->
		
	</EventFiltering>
</Sysmon>
